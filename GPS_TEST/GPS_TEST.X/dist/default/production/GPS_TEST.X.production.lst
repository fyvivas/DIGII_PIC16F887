

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Sep 27 07:18:59 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text17_split_1,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 1.41
    67                           ; Generated 25/01/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F887 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  0087                     	;# 
   139  0088                     	;# 
   140  0089                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0093                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  0105                     	;# 
   164  0107                     	;# 
   165  0108                     	;# 
   166  0109                     	;# 
   167  010C                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  0185                     	;# 
   173  0187                     	;# 
   174  0188                     	;# 
   175  0189                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  0008                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0088                     	;# 
   218  0089                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  008F                     	;# 
   223  0090                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0093                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0095                     	;# 
   231  0096                     	;# 
   232  0097                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009B                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  0105                     	;# 
   242  0107                     	;# 
   243  0108                     	;# 
   244  0109                     	;# 
   245  010C                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  010F                     	;# 
   250  0185                     	;# 
   251  0187                     	;# 
   252  0188                     	;# 
   253  0189                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256                           
   257                           	psect	strings
   258  0000'                    __pstrings:	
   259  0000'                    stringtab:	
   260  0000'                    __stringtab:	
   261                           
   262                           ;	String table - string pointers are 1 byte each
   263  0000' 1BFF               	btfsc	btemp+1,7
   264  0001' 2800'              	ljmp	stringcode
   265  0002' 1383               	bcf	3,7
   266  0003' 187F               	btfsc	btemp+1,0
   267  0004' 1783               	bsf	3,7
   268  0005' 0800               	movf	0,w
   269  0006' 0A84               	incf	4,f
   270  0007' 1903               	skipnz
   271  0008' 0AFF               	incf	btemp+1,f
   272  0009' 0008               	return
   273  000A'                    stringcode:	
   274  000A'                    stringdir:	
   275  000A' 3000'              	movlw	high stringdir
   276  000B' 008A               	movwf	10
   277  000C' 0804               	movf	4,w
   278  000D' 0A84               	incf	4,f
   279  000E' 0782               	addwf	2,f
   280  000F'                    __stringbase:	
   281  000F' 3400               	retlw	0
   282  0010'                    __end_of__stringtab:	
   283  0010'                    _dpowers:	
   284  0010' 3401               	retlw	1
   285  0011' 3400               	retlw	0
   286  0012' 3400               	retlw	0
   287  0013' 3400               	retlw	0
   288  0014' 340A               	retlw	10
   289  0015' 3400               	retlw	0
   290  0016' 3400               	retlw	0
   291  0017' 3400               	retlw	0
   292  0018' 3464               	retlw	100
   293  0019' 3400               	retlw	0
   294  001A' 3400               	retlw	0
   295  001B' 3400               	retlw	0
   296  001C' 34E8               	retlw	232
   297  001D' 3403               	retlw	3
   298  001E' 3400               	retlw	0
   299  001F' 3400               	retlw	0
   300  0020' 3410               	retlw	16
   301  0021' 3427               	retlw	39
   302  0022' 3400               	retlw	0
   303  0023' 3400               	retlw	0
   304  0024' 34A0               	retlw	160
   305  0025' 3486               	retlw	134
   306  0026' 3401               	retlw	1
   307  0027' 3400               	retlw	0
   308  0028' 3440               	retlw	64
   309  0029' 3442               	retlw	66
   310  002A' 340F               	retlw	15
   311  002B' 3400               	retlw	0
   312  002C' 3480               	retlw	128
   313  002D' 3496               	retlw	150
   314  002E' 3498               	retlw	152
   315  002F' 3400               	retlw	0
   316  0030' 3400               	retlw	0
   317  0031' 34E1               	retlw	225
   318  0032' 34F5               	retlw	245
   319  0033' 3405               	retlw	5
   320  0034' 3400               	retlw	0
   321  0035' 34CA               	retlw	202
   322  0036' 349A               	retlw	154
   323  0037' 343B               	retlw	59
   324  0038'                    __end_of_dpowers:	
   325  0038'                    __powers_:	
   326  0038' 3400               	retlw	0
   327  0039' 3480               	retlw	128
   328  003A' 343F               	retlw	63
   329  003B' 3400               	retlw	0
   330  003C' 3420               	retlw	32
   331  003D' 3441               	retlw	65
   332  003E' 3400               	retlw	0
   333  003F' 34C8               	retlw	200
   334  0040' 3442               	retlw	66
   335  0041' 3400               	retlw	0
   336  0042' 347A               	retlw	122
   337  0043' 3444               	retlw	68
   338  0044' 3440               	retlw	64
   339  0045' 341C               	retlw	28
   340  0046' 3446               	retlw	70
   341  0047' 3450               	retlw	80
   342  0048' 34C3               	retlw	195
   343  0049' 3447               	retlw	71
   344  004A' 3424               	retlw	36
   345  004B' 3474               	retlw	116
   346  004C' 3449               	retlw	73
   347  004D' 3497               	retlw	151
   348  004E' 3418               	retlw	24
   349  004F' 344B               	retlw	75
   350  0050' 34BC               	retlw	188
   351  0051' 34BE               	retlw	190
   352  0052' 344C               	retlw	76
   353  0053' 346B               	retlw	107
   354  0054' 346E               	retlw	110
   355  0055' 344E               	retlw	78
   356  0056' 3403               	retlw	3
   357  0057' 3415               	retlw	21
   358  0058' 3450               	retlw	80
   359  0059' 3479               	retlw	121
   360  005A' 34AD               	retlw	173
   361  005B' 3460               	retlw	96
   362  005C' 34F3               	retlw	243
   363  005D' 3449               	retlw	73
   364  005E' 3471               	retlw	113
   365  005F'                    __end_of__powers_:	
   366  005F'                    __npowers_:	
   367  005F' 3400               	retlw	0
   368  0060' 3480               	retlw	128
   369  0061' 343F               	retlw	63
   370  0062' 34CD               	retlw	205
   371  0063' 34CC               	retlw	204
   372  0064' 343D               	retlw	61
   373  0065' 34D7               	retlw	215
   374  0066' 3423               	retlw	35
   375  0067' 343C               	retlw	60
   376  0068' 3412               	retlw	18
   377  0069' 3483               	retlw	131
   378  006A' 343A               	retlw	58
   379  006B' 34B7               	retlw	183
   380  006C' 34D1               	retlw	209
   381  006D' 3438               	retlw	56
   382  006E' 34C6               	retlw	198
   383  006F' 3427               	retlw	39
   384  0070' 3437               	retlw	55
   385  0071' 3438               	retlw	56
   386  0072' 3486               	retlw	134
   387  0073' 3435               	retlw	53
   388  0074' 34C0               	retlw	192
   389  0075' 34D6               	retlw	214
   390  0076' 3433               	retlw	51
   391  0077' 34CC               	retlw	204
   392  0078' 342B               	retlw	43
   393  0079' 3432               	retlw	50
   394  007A' 3470               	retlw	112
   395  007B' 3489               	retlw	137
   396  007C' 3430               	retlw	48
   397  007D' 34E7               	retlw	231
   398  007E' 34DB               	retlw	219
   399  007F' 342E               	retlw	46
   400  0080' 34E5               	retlw	229
   401  0081' 343C               	retlw	60
   402  0082' 341E               	retlw	30
   403  0083' 3442               	retlw	66
   404  0084' 34A2               	retlw	162
   405  0085' 340D               	retlw	13
   406  0086'                    __end_of__npowers_:	
   407  0086'                    STR_7:	
   408  0086' 3425               	retlw	37	;'%'
   409  0087' 3464               	retlw	100	;'d'
   410  0088' 343A               	retlw	58	;':'
   411  0089' 3425               	retlw	37	;'%'
   412  008A' 3464               	retlw	100	;'d'
   413  008B' 343A               	retlw	58	;':'
   414  008C' 3425               	retlw	37	;'%'
   415  008D' 3464               	retlw	100	;'d'
   416  008E' 3400               	retlw	0
   417  008F'                    STR_2:	
   418  008F' 3425               	retlw	37	;'%'
   419  0090' 342E               	retlw	46	;'.'
   420  0091' 3430               	retlw	48	;'0'
   421  0092' 3435               	retlw	53	;'5'
   422  0093' 3466               	retlw	102	;'f'
   423  0094' 3400               	retlw	0
   424  0095'                    STR_6:	
   425  0095' 340D               	retlw	13
   426  0096' 340A               	retlw	10
   427  0097' 3400               	retlw	0
   428  0098'                    STR_1:	
   429  0098' 342C               	retlw	44	;','
   430  0099' 3400               	retlw	0
   431  0098'                    
   432                           ; #config settings
   433  0000                     
   434                           	psect	nvBANK1
   435  0000'                    __pnvBANK1:	
   436  0000'                    _temp:	
   437  0000'                    	ds	3
   438  0003'                    _lm35:	
   439  0003'                    	ds	1
   440                           
   441                           	psect	nvBANK3
   442  0000'                    __pnvBANK3:	
   443  0000'                    _value_adc:	
   444  0000'                    	ds	2
   445  001F                     _ADCON0bits	set	31
   446  001F                     _ADCON0	set	31
   447  001E                     _ADRESH	set	30
   448  000B                     _INTCONbits	set	11
   449  001A                     _RCREG	set	26
   450  0018                     _RCSTAbits	set	24
   451  0019                     _TXREG	set	25
   452  0018                     _RCSTA	set	24
   453  005F                     _GIE	set	95
   454  00F9                     _GO	set	249
   455  00F8                     _ADON	set	248
   456  00C4                     _CREN	set	196
   457  0065                     _RCIF	set	101
   458  0064                     _TXIF	set	100
   459  009E                     _ADRESL	set	158
   460  009F                     _ADCON1bits	set	159
   461  008C                     _PIE1bits	set	140
   462  0098                     _TXSTA	set	152
   463  0099                     _SPBRG	set	153
   464  0428                     _TRISA0	set	1064
   465  043F                     _TRISC7	set	1087
   466  043E                     _TRISC6	set	1086
   467  0188                     _ANSEL	set	392
   468                           
   469                           	psect	cinit
   470  0000'                    start_initialization:	
   471  0000'                    __initialization:	
   472                           
   473                           ; Clear objects allocated to COMMON
   474  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   475  0001' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   476  0002' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
   477  0003' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
   478  0004' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
   479                           
   480                           ; Clear objects allocated to BANK1
   481  0005' 1683               	bsf	3,5	;RP0=1, select bank1
   482  0006' 1303               	bcf	3,6	;RP1=0, select bank1
   483  0007' 0180'              	clrf	__pbssBANK1& (0+127)
   484  0008' 0180'              	clrf	(__pbssBANK1+1)& (0+127)
   485  0009' 0180'              	clrf	(__pbssBANK1+2)& (0+127)
   486  000A' 0180'              	clrf	(__pbssBANK1+3)& (0+127)
   487  000B' 0180'              	clrf	(__pbssBANK1+4)& (0+127)
   488  000C' 0180'              	clrf	(__pbssBANK1+5)& (0+127)
   489                           
   490                           ; Clear objects allocated to BANK3
   491  000D' 1783               	bsf	3,7	;select IRP bank2
   492  000E' 3000'              	movlw	low __pbssBANK3
   493  000F' 0084               	movwf	4
   494  0010' 3000'              	movlw	low (__pbssBANK3+90)
   495  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   496                           
   497                           ; Clear objects allocated to BANK2
   498  0016' 3000'              	movlw	low __pbssBANK2
   499  0017' 0084               	movwf	4
   500  0018' 3000'              	movlw	low (__pbssBANK2+80)
   501  0019' 120A' 118A' 2000'  	fcall	clear_ram0
   502  001C'                    end_of_initialization:	
   503                           ;End of C runtime variable initialization code
   504                           
   505  001C'                    __end_of__initialization:	
   506  001C' 0183               	clrf	3
   507  001D' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   508                           
   509                           	psect	bssCOMMON
   510  0000'                    __pbssCOMMON:	
   511  0000'                    _GGA_Index:	
   512  0000'                    	ds	2
   513  0002'                    _IsLastEndGGA:	
   514  0002'                    	ds	1
   515  0003'                    _IsEndGGA:	
   516  0003'                    	ds	1
   517  0004'                    _CommaCounter:	
   518  0004'                    	ds	1
   519                           
   520                           	psect	bssBANK1
   521  0000'                    __pbssBANK1:	
   522  0000'                    _GGA_CODE:	
   523  0000'                    	ds	3
   524  0003'                    _IsItGGAString:	
   525  0003'                    	ds	1
   526  0004'                    _E_W:	
   527  0004'                    	ds	1
   528  0005'                    _N_S:	
   529  0005'                    	ds	1
   530                           
   531                           	psect	bssBANK3
   532  0000'                    __pbssBANK3:	
   533  0000'                    _GGA_Pointers:	
   534  0000'                    	ds	20
   535  0014'                    _stringBT:	
   536  0014'                    	ds	50
   537  0046'                    _Data_Buffer:	
   538  0046'                    	ds	15
   539  0055'                    _Temperature:	
   540  0055'                    	ds	5
   541                           
   542                           	psect	bssBANK2
   543  0000'                    __pbssBANK2:	
   544  0000'                    _GGA_Buffer:	
   545  0000'                    	ds	80
   546                           
   547                           	psect	clrtext
   548  0000'                    clear_ram0:	
   549                           ;	Called with FSR containing the base address, and
   550                           ;	W with the last address+1
   551                           
   552  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   553  0001'                    clrloop0:	
   554  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   555  0002' 0A84               	incf	4,f	;increment pointer
   556  0003' 0604               	xorwf	4,w	;XOR with final address
   557  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   558  0005' 3400               	retlw	0	;all done for this memory range, return
   559  0006' 0604               	xorwf	4,w	;XOR again to restore value
   560  0007' 2800'              	goto	clrloop0	;do the next byte
   561                           
   562                           	psect	cstackBANK3
   563  0000'                    __pcstackBANK3:	
   564  0000'                    main@Time:	
   565                           
   566                           ; 4 bytes @ 0x0
   567  0000'                    	ds	4
   568                           
   569                           	psect	cstackBANK2
   570  0000'                    __pcstackBANK2:	
   571  0000'                    main@Latitude:	
   572                           
   573                           ; 3 bytes @ 0x0
   574  0000'                    	ds	3
   575  0003'                    main@Longitude:	
   576                           
   577                           ; 3 bytes @ 0x3
   578  0003'                    	ds	3
   579                           
   580                           	psect	cstackBANK1
   581  0000'                    __pcstackBANK1:	
   582  0000'                    ??_sprintf:	
   583  0000'                    _strtod$599:	
   584                           ; 1 bytes @ 0x0
   585                           
   586                           
   587                           ; 3 bytes @ 0x0
   588  0000'                    	ds	3
   589  0003'                    _strtod$600:	
   590                           
   591                           ; 3 bytes @ 0x3
   592  0003'                    	ds	3
   593  0006'                    _strtod$601:	
   594  0006'                    _sprintf$927:	
   595                           ; 3 bytes @ 0x6
   596                           
   597                           
   598                           ; 3 bytes @ 0x6
   599  0006'                    	ds	3
   600  0009'                    sprintf@ap:	
   601  0009'                    _strtod$602:	
   602                           ; 1 bytes @ 0x9
   603                           
   604                           
   605                           ; 3 bytes @ 0x9
   606  0009'                    	ds	1
   607  000A'                    sprintf@flag:	
   608                           
   609                           ; 2 bytes @ 0xA
   610  000A'                    	ds	2
   611  000C'                    sprintf@exp:	
   612  000C'                    _strtod$598:	
   613                           ; 2 bytes @ 0xC
   614                           
   615                           
   616                           ; 2 bytes @ 0xC
   617  000C'                    	ds	2
   618  000E'                    strtod@eexp:	
   619  000E'                    sprintf@tmpval:	
   620                           ; 1 bytes @ 0xE
   621                           
   622                           
   623                           ; 4 bytes @ 0xE
   624  000E'                    	ds	1
   625  000F'                    strtod@flags:	
   626                           
   627                           ; 1 bytes @ 0xF
   628  000F'                    	ds	1
   629  0010'                    strtod@expon:	
   630                           
   631                           ; 1 bytes @ 0x10
   632  0010'                    	ds	1
   633  0011'                    strtod@_u:	
   634                           
   635                           ; 4 bytes @ 0x11
   636  0011'                    	ds	1
   637  0012'                    sprintf@val:	
   638                           
   639                           ; 4 bytes @ 0x12
   640  0012'                    	ds	3
   641  0015'                    strtod@s:	
   642                           
   643                           ; 1 bytes @ 0x15
   644  0015'                    	ds	1
   645  0016'                    ?_atof:	
   646  0016'                    sprintf@prec:	
   647                           ; 3 bytes @ 0x16
   648                           
   649                           
   650                           ; 2 bytes @ 0x16
   651  0016'                    	ds	2
   652  0018'                    sprintf@fval:	
   653                           
   654                           ; 3 bytes @ 0x18
   655  0018'                    	ds	2
   656  001A'                    ?_get_latitude:	
   657  001A'                    ?_get_longitude:	
   658                           ; 3 bytes @ 0x1A
   659                           
   660                           
   661                           ; 3 bytes @ 0x1A
   662  001A'                    	ds	1
   663  001B'                    sprintf@c:	
   664                           
   665                           ; 1 bytes @ 0x1B
   666  001B'                    	ds	1
   667  001C'                    ?_convert_time_to_UTC:	
   668  001C'                    convert_time_to_UTC@UTC_Time:	
   669                           ; 1 bytes @ 0x1C
   670                           
   671                           
   672                           ; 4 bytes @ 0x1C
   673  001C'                    	ds	1
   674  001D'                    get_latitude@Lat_Buffer:	
   675  001D'                    get_longitude@Long_Buffer:	
   676                           ; 15 bytes @ 0x1D
   677                           
   678                           
   679                           ; 15 bytes @ 0x1D
   680  001D'                    	ds	3
   681  0020'                    ??_convert_time_to_UTC:	
   682                           
   683                           ; 1 bytes @ 0x20
   684  0020'                    	ds	1
   685  0021'                    _convert_time_to_UTC$923:	
   686                           
   687                           ; 4 bytes @ 0x21
   688  0021'                    	ds	4
   689  0025'                    convert_time_to_UTC@hour:	
   690                           
   691                           ; 2 bytes @ 0x25
   692  0025'                    	ds	2
   693  0027'                    convert_time_to_UTC@min:	
   694                           
   695                           ; 2 bytes @ 0x27
   696  0027'                    	ds	2
   697  0029'                    convert_time_to_UTC@sec:	
   698                           
   699                           ; 2 bytes @ 0x29
   700  0029'                    	ds	3
   701  002C'                    get_latitude@_latitude:	
   702  002C'                    get_longitude@_longitude:	
   703                           ; 3 bytes @ 0x2C
   704                           
   705                           
   706                           ; 3 bytes @ 0x2C
   707  002C'                    	ds	3
   708  002F'                    get_latitude@lat_pointer:	
   709  002F'                    get_longitude@long_pointer:	
   710                           ; 1 bytes @ 0x2F
   711                           
   712                           
   713                           ; 1 bytes @ 0x2F
   714  002F'                    	ds	1
   715  0030'                    get_latitude@index:	
   716  0030'                    get_longitude@index:	
   717                           ; 1 bytes @ 0x30
   718                           
   719                           
   720                           ; 1 bytes @ 0x30
   721  0030'                    	ds	1
   722  0031'                    get_latitude@lat_index:	
   723  0031'                    get_longitude@long_index:	
   724                           ; 1 bytes @ 0x31
   725                           
   726                           
   727                           ; 1 bytes @ 0x31
   728  0031'                    	ds	1
   729  0032'                    ??_main:	
   730                           
   731                           ; 1 bytes @ 0x32
   732  0032'                    	ds	3
   733  0035'                    main@GPS_Buffer:	
   734                           
   735                           ; 15 bytes @ 0x35
   736  0035'                    	ds	15
   737  0044'                    _main$922:	
   738                           
   739                           ; 2 bytes @ 0x44
   740  0044'                    	ds	2
   741                           
   742                           	psect	cstackCOMMON
   743  0000'                    __pcstackCOMMON:	
   744  0000'                    ?_isdigit:	
   745  0000'                    ?_isspace:	
   746                           ; 1 bit 
   747                           
   748  0000'                    ?_ADC_Init:	
   749                           ; 1 bit 
   750                           
   751  0000'                    ?_USART_TxChar:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0000'                    ?_USART_SendString:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0000'                    ?_main:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0000'                    ?_Serial_ISR:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0000'                    ??_Serial_ISR:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0000'                    	ds	5
   769  0005'                    Serial_ISR@received_char:	
   770                           
   771                           ; 1 bytes @ 0x5
   772  0005'                    	ds	1
   773                           
   774                           	psect	cstackBANK0
   775  0000'                    __pcstackBANK0:	
   776  0000'                    ?___ftge:	
   777  0000'                    ??_ADC_Init:	
   778                           ; 1 bit 
   779                           
   780  0000'                    ?_memset:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0000'                    ?_strcpy:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0000'                    ?_strcat:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0000'                    ??_isdigit:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0000'                    ??_isspace:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0000'                    ??_USART_TxChar:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0000'                    ?_ADC_Read:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0000'                    ?___wmul:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0000'                    ?___awmod:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0000'                    ?___ftpack:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0000'                    ?__tdiv_to_l_:	
   811                           ; 3 bytes @ 0x0
   812                           
   813  0000'                    ?__div_to_l_:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  0000'                    ?___lmul:	
   817                           ; 4 bytes @ 0x0
   818                           
   819  0000'                    ?___aldiv:	
   820                           ; 4 bytes @ 0x0
   821                           
   822  0000'                    ?___llmod:	
   823                           ; 4 bytes @ 0x0
   824                           
   825  0000'                    USART_TxChar@out:	
   826                           ; 4 bytes @ 0x0
   827                           
   828  0000'                    _isdigit$687:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0000'                    _isspace$690:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0000'                    strcpy@from:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0000'                    ADC_Read@channel:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0000'                    ___wmul@multiplier:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0000'                    ___awmod@divisor:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0000'                    memset@c:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0000'                    strcat@from:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  0000'                    __div_to_l_@f1:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0000'                    ___ftpack@arg:	
   856                           ; 3 bytes @ 0x0
   857                           
   858  0000'                    __tdiv_to_l_@f1:	
   859                           ; 3 bytes @ 0x0
   860                           
   861  0000'                    ___ftge@ff1:	
   862                           ; 3 bytes @ 0x0
   863                           
   864  0000'                    ___lmul@multiplier:	
   865                           ; 3 bytes @ 0x0
   866                           
   867  0000'                    ___aldiv@divisor:	
   868                           ; 4 bytes @ 0x0
   869                           
   870  0000'                    ___llmod@divisor:	
   871                           ; 4 bytes @ 0x0
   872                           
   873                           
   874                           ; 4 bytes @ 0x0
   875  0000'                    	ds	1
   876  0001'                    ??_strcpy:	
   877  0001'                    ??_USART_SendString:	
   878                           ; 1 bytes @ 0x1
   879                           
   880  0001'                    isdigit@c:	
   881                           ; 1 bytes @ 0x1
   882                           
   883  0001'                    isspace@c:	
   884                           ; 1 bytes @ 0x1
   885                           
   886                           
   887                           ; 1 bytes @ 0x1
   888  0001'                    	ds	1
   889  0002'                    ??_ADC_Read:	
   890  0002'                    ??_strcat:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0002'                    USART_SendString@out:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0002'                    strcpy@to:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0002'                    ___wmul@multiplicand:	
   900                           ; 1 bytes @ 0x2
   901                           
   902  0002'                    ___awmod@dividend:	
   903                           ; 2 bytes @ 0x2
   904                           
   905  0002'                    memset@n:	
   906                           ; 2 bytes @ 0x2
   907                           
   908                           
   909                           ; 2 bytes @ 0x2
   910  0002'                    	ds	1
   911  0003'                    ___ftpack@exp:	
   912  0003'                    strcat@cp:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0003'                    strcpy@cp:	
   916                           ; 1 bytes @ 0x3
   917                           
   918  0003'                    __div_to_l_@f2:	
   919                           ; 1 bytes @ 0x3
   920                           
   921  0003'                    __tdiv_to_l_@f2:	
   922                           ; 3 bytes @ 0x3
   923                           
   924  0003'                    ___ftge@ff2:	
   925                           ; 3 bytes @ 0x3
   926                           
   927                           
   928                           ; 3 bytes @ 0x3
   929  0003'                    	ds	1
   930  0004'                    ??_memset:	
   931  0004'                    ??___wmul:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0004'                    ??___awmod:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0004'                    ___ftpack@sign:	
   938                           ; 1 bytes @ 0x4
   939                           
   940  0004'                    strcat@to:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0004'                    ___wmul@product:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0004'                    ___lmul@multiplicand:	
   947                           ; 2 bytes @ 0x4
   948                           
   949  0004'                    ___aldiv@dividend:	
   950                           ; 4 bytes @ 0x4
   951                           
   952  0004'                    ___llmod@dividend:	
   953                           ; 4 bytes @ 0x4
   954                           
   955                           
   956                           ; 4 bytes @ 0x4
   957  0004'                    	ds	1
   958  0005'                    ??___ftpack:	
   959  0005'                    ___awmod@counter:	
   960                           ; 1 bytes @ 0x5
   961                           
   962  0005'                    memset@p:	
   963                           ; 1 bytes @ 0x5
   964                           
   965  0005'                    ADC_Read@digital:	
   966                           ; 1 bytes @ 0x5
   967                           
   968                           
   969                           ; 2 bytes @ 0x5
   970  0005'                    	ds	1
   971  0006'                    ??__tdiv_to_l_:	
   972  0006'                    ??__div_to_l_:	
   973                           ; 1 bytes @ 0x6
   974                           
   975  0006'                    ??___ftge:	
   976                           ; 1 bytes @ 0x6
   977                           
   978  0006'                    ___awmod@sign:	
   979                           ; 1 bytes @ 0x6
   980                           
   981  0006'                    memset@p1:	
   982                           ; 1 bytes @ 0x6
   983                           
   984                           
   985                           ; 1 bytes @ 0x6
   986  0006'                    	ds	1
   987  0007'                    ?___awdiv:	
   988  0007'                    ___awdiv@divisor:	
   989                           ; 2 bytes @ 0x7
   990                           
   991                           
   992                           ; 2 bytes @ 0x7
   993  0007'                    	ds	1
   994  0008'                    ??___lmul:	
   995  0008'                    ??___aldiv:	
   996                           ; 1 bytes @ 0x8
   997                           
   998  0008'                    ??___llmod:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001  0008'                    ?___altoft:	
  1002                           ; 1 bytes @ 0x8
  1003                           
  1004  0008'                    ?___awtoft:	
  1005                           ; 3 bytes @ 0x8
  1006                           
  1007  0008'                    ?___lltoft:	
  1008                           ; 3 bytes @ 0x8
  1009                           
  1010  0008'                    ___awtoft@c:	
  1011                           ; 3 bytes @ 0x8
  1012                           
  1013  0008'                    ___altoft@c:	
  1014                           ; 2 bytes @ 0x8
  1015                           
  1016  0008'                    ___lltoft@c:	
  1017                           ; 4 bytes @ 0x8
  1018                           
  1019                           
  1020                           ; 4 bytes @ 0x8
  1021  0008'                    	ds	1
  1022  0009'                    ___aldiv@counter:	
  1023  0009'                    ___llmod@counter:	
  1024                           ; 1 bytes @ 0x9
  1025                           
  1026  0009'                    ___awdiv@dividend:	
  1027                           ; 1 bytes @ 0x9
  1028                           
  1029  0009'                    ___lmul@product:	
  1030                           ; 2 bytes @ 0x9
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x9
  1034  0009'                    	ds	1
  1035  000A'                    ?___lldiv:	
  1036  000A'                    ___aldiv@sign:	
  1037                           ; 4 bytes @ 0xA
  1038                           
  1039  000A'                    __tdiv_to_l_@quot:	
  1040                           ; 1 bytes @ 0xA
  1041                           
  1042  000A'                    ___lldiv@divisor:	
  1043                           ; 4 bytes @ 0xA
  1044                           
  1045                           
  1046                           ; 4 bytes @ 0xA
  1047  000A'                    	ds	1
  1048  000B'                    ??___awdiv:	
  1049  000B'                    ??___awtoft:	
  1050                           ; 1 bytes @ 0xB
  1051                           
  1052  000B'                    ___aldiv@quotient:	
  1053                           ; 1 bytes @ 0xB
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0xB
  1057  000B'                    	ds	1
  1058  000C'                    ??___altoft:	
  1059  000C'                    ??___lltoft:	
  1060                           ; 1 bytes @ 0xC
  1061                           
  1062  000C'                    ___awdiv@counter:	
  1063                           ; 1 bytes @ 0xC
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0xC
  1067  000C'                    	ds	1
  1068  000D'                    ?_atol:	
  1069  000D'                    ___awdiv@sign:	
  1070                           ; 4 bytes @ 0xD
  1071                           
  1072  000D'                    ___awtoft@sign:	
  1073                           ; 1 bytes @ 0xD
  1074                           
  1075  000D'                    ___lltoft@exp:	
  1076                           ; 1 bytes @ 0xD
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0xD
  1080  000D'                    	ds	1
  1081  000E'                    ___altoft@exp:	
  1082  000E'                    __tdiv_to_l_@cntr:	
  1083                           ; 1 bytes @ 0xE
  1084                           
  1085  000E'                    ___awdiv@quotient:	
  1086                           ; 1 bytes @ 0xE
  1087                           
  1088  000E'                    __div_to_l_@quot:	
  1089                           ; 2 bytes @ 0xE
  1090                           
  1091  000E'                    ___lldiv@dividend:	
  1092                           ; 4 bytes @ 0xE
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0xE
  1096  000E'                    	ds	1
  1097  000F'                    ?_USART_Init:	
  1098  000F'                    ___altoft@sign:	
  1099                           ; 1 bytes @ 0xF
  1100                           
  1101  000F'                    __tdiv_to_l_@exp1:	
  1102                           ; 1 bytes @ 0xF
  1103                           
  1104  000F'                    USART_Init@baud_rate:	
  1105                           ; 1 bytes @ 0xF
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0xF
  1109  000F'                    	ds	1
  1110  0010'                    ?___bmul:	
  1111  0010'                    ___bmul@multiplicand:	
  1112                           ; 1 bytes @ 0x10
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0x10
  1116  0010'                    	ds	1
  1117  0011'                    ??_atol:	
  1118  0011'                    ??___bmul:	
  1119                           ; 1 bytes @ 0x11
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x11
  1123  0011'                    	ds	1
  1124  0012'                    ??___lldiv:	
  1125  0012'                    ___bmul@product:	
  1126                           ; 1 bytes @ 0x12
  1127                           
  1128  0012'                    __div_to_l_@cntr:	
  1129                           ; 1 bytes @ 0x12
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x12
  1133  0012'                    	ds	1
  1134  0013'                    ??_USART_Init:	
  1135  0013'                    ___bmul@multiplier:	
  1136                           ; 1 bytes @ 0x13
  1137                           
  1138  0013'                    __div_to_l_@exp1:	
  1139                           ; 1 bytes @ 0x13
  1140                           
  1141  0013'                    ___lldiv@quotient:	
  1142                           ; 1 bytes @ 0x13
  1143                           
  1144  0013'                    _USART_Init$921:	
  1145                           ; 4 bytes @ 0x13
  1146                           
  1147                           
  1148                           ; 4 bytes @ 0x13
  1149  0013'                    	ds	1
  1150  0014'                    ?___ftmul:	
  1151  0014'                    ___ftmul@f1:	
  1152                           ; 3 bytes @ 0x14
  1153                           
  1154                           
  1155                           ; 3 bytes @ 0x14
  1156  0014'                    	ds	1
  1157  0015'                    atol@sign:	
  1158                           
  1159                           ; 1 bytes @ 0x15
  1160  0015'                    	ds	1
  1161  0016'                    atol@a:	
  1162                           
  1163                           ; 4 bytes @ 0x16
  1164  0016'                    	ds	1
  1165  0017'                    ___lldiv@counter:	
  1166  0017'                    ___ftmul@f2:	
  1167                           ; 1 bytes @ 0x17
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0x17
  1171  0017'                    	ds	3
  1172  001A'                    ??___ftmul:	
  1173  001A'                    atol@s:	
  1174                           ; 1 bytes @ 0x1A
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0x1A
  1178  001A'                    	ds	1
  1179  001B'                    atol@c:	
  1180                           
  1181                           ; 1 bytes @ 0x1B
  1182  001B'                    	ds	1
  1183  001C'                    ?_get_gpstime:	
  1184                           
  1185                           ; 4 bytes @ 0x1C
  1186  001C'                    	ds	2
  1187  001E'                    ___ftmul@exp:	
  1188                           
  1189                           ; 1 bytes @ 0x1E
  1190  001E'                    	ds	1
  1191  001F'                    ___ftmul@f3_as_product:	
  1192                           
  1193                           ; 3 bytes @ 0x1F
  1194  001F'                    	ds	1
  1195  0020'                    ??_get_gpstime:	
  1196                           
  1197                           ; 1 bytes @ 0x20
  1198  0020'                    	ds	1
  1199  0021'                    get_gpstime@Time_Buffer:	
  1200                           
  1201                           ; 15 bytes @ 0x21
  1202  0021'                    	ds	1
  1203  0022'                    ___ftmul@cntr:	
  1204                           
  1205                           ; 1 bytes @ 0x22
  1206  0022'                    	ds	1
  1207  0023'                    ___ftmul@sign:	
  1208                           
  1209                           ; 1 bytes @ 0x23
  1210  0023'                    	ds	1
  1211  0024'                    ?_fround:	
  1212  0024'                    ?_scale:	
  1213                           ; 3 bytes @ 0x24
  1214                           
  1215  0024'                    ?___ftdiv:	
  1216                           ; 3 bytes @ 0x24
  1217                           
  1218  0024'                    ?___ftneg:	
  1219                           ; 3 bytes @ 0x24
  1220                           
  1221  0024'                    ___ftdiv@f2:	
  1222                           ; 3 bytes @ 0x24
  1223                           
  1224  0024'                    ___ftneg@f1:	
  1225                           ; 3 bytes @ 0x24
  1226                           
  1227                           
  1228                           ; 3 bytes @ 0x24
  1229  0024'                    	ds	3
  1230  0027'                    ??_fround:	
  1231  0027'                    ??_scale:	
  1232                           ; 1 bytes @ 0x27
  1233                           
  1234  0027'                    ??___ftneg:	
  1235                           ; 1 bytes @ 0x27
  1236                           
  1237  0027'                    ___ftdiv@f1:	
  1238                           ; 1 bytes @ 0x27
  1239                           
  1240                           
  1241                           ; 3 bytes @ 0x27
  1242  0027'                    	ds	2
  1243  0029'                    _scale$926:	
  1244                           
  1245                           ; 3 bytes @ 0x29
  1246  0029'                    	ds	1
  1247  002A'                    ??___ftdiv:	
  1248                           
  1249                           ; 1 bytes @ 0x2A
  1250  002A'                    	ds	2
  1251  002C'                    scale@scl:	
  1252                           
  1253                           ; 1 bytes @ 0x2C
  1254  002C'                    	ds	1
  1255  002D'                    _fround$925:	
  1256                           
  1257                           ; 3 bytes @ 0x2D
  1258  002D'                    	ds	1
  1259  002E'                    ___ftdiv@cntr:	
  1260                           
  1261                           ; 1 bytes @ 0x2E
  1262  002E'                    	ds	1
  1263  002F'                    ___ftdiv@f3:	
  1264                           
  1265                           ; 3 bytes @ 0x2F
  1266  002F'                    	ds	1
  1267  0030'                    _fround$924:	
  1268  0030'                    get_gpstime@_Time:	
  1269                           ; 3 bytes @ 0x30
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x30
  1273  0030'                    	ds	2
  1274  0032'                    ___ftdiv@exp:	
  1275                           
  1276                           ; 1 bytes @ 0x32
  1277  0032'                    	ds	1
  1278  0033'                    fround@prec:	
  1279  0033'                    ___ftdiv@sign:	
  1280                           ; 1 bytes @ 0x33
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0x33
  1284  0033'                    	ds	1
  1285  0034'                    ?_strtod:	
  1286  0034'                    ?___ftadd:	
  1287                           ; 3 bytes @ 0x34
  1288                           
  1289  0034'                    ?___fttol:	
  1290                           ; 3 bytes @ 0x34
  1291                           
  1292  0034'                    get_gpstime@index:	
  1293                           ; 4 bytes @ 0x34
  1294                           
  1295  0034'                    strtod@res:	
  1296                           ; 1 bytes @ 0x34
  1297                           
  1298  0034'                    ___ftadd@f1:	
  1299                           ; 1 bytes @ 0x34
  1300                           
  1301  0034'                    ___fttol@f1:	
  1302                           ; 3 bytes @ 0x34
  1303                           
  1304                           
  1305                           ; 3 bytes @ 0x34
  1306  0034'                    	ds	3
  1307  0037'                    ??_strtod:	
  1308  0037'                    ___ftadd@f2:	
  1309                           ; 1 bytes @ 0x37
  1310                           
  1311                           
  1312                           ; 3 bytes @ 0x37
  1313  0037'                    	ds	1
  1314  0038'                    ??___fttol:	
  1315                           
  1316                           ; 1 bytes @ 0x38
  1317  0038'                    	ds	2
  1318  003A'                    ??___ftadd:	
  1319                           
  1320                           ; 1 bytes @ 0x3A
  1321  003A'                    	ds	1
  1322  003B'                    ??_atof:	
  1323  003B'                    atof@s:	
  1324                           ; 1 bytes @ 0x3B
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0x3B
  1328  003B'                    	ds	1
  1329  003C'                    ??_get_latitude:	
  1330  003C'                    ??_get_longitude:	
  1331                           ; 1 bytes @ 0x3C
  1332                           
  1333  003C'                    ___fttol@sign1:	
  1334                           ; 1 bytes @ 0x3C
  1335                           
  1336                           
  1337                           ; 1 bytes @ 0x3C
  1338  003C'                    	ds	1
  1339  003D'                    ___fttol@lval:	
  1340                           
  1341                           ; 4 bytes @ 0x3D
  1342  003D'                    	ds	1
  1343  003E'                    ___ftadd@sign:	
  1344                           
  1345                           ; 1 bytes @ 0x3E
  1346  003E'                    	ds	1
  1347  003F'                    ___ftadd@exp2:	
  1348                           
  1349                           ; 1 bytes @ 0x3F
  1350  003F'                    	ds	1
  1351  0040'                    ___ftadd@exp1:	
  1352                           
  1353                           ; 1 bytes @ 0x40
  1354  0040'                    	ds	1
  1355  0041'                    ?___ftsub:	
  1356  0041'                    ___fttol@exp1:	
  1357                           ; 3 bytes @ 0x41
  1358                           
  1359  0041'                    ___ftsub@f2:	
  1360                           ; 1 bytes @ 0x41
  1361                           
  1362                           
  1363                           ; 3 bytes @ 0x41
  1364  0041'                    	ds	1
  1365  0042'                    ?_convert_to_degrees:	
  1366  0042'                    convert_to_degrees@NMEA_lat_long:	
  1367                           ; 3 bytes @ 0x42
  1368                           
  1369                           
  1370                           ; 3 bytes @ 0x42
  1371  0042'                    	ds	2
  1372  0044'                    ___ftsub@f1:	
  1373                           
  1374                           ; 3 bytes @ 0x44
  1375  0044'                    	ds	1
  1376  0045'                    ??_convert_to_degrees:	
  1377  0045'                    convert_to_degrees@minutes:	
  1378                           ; 1 bytes @ 0x45
  1379                           
  1380                           
  1381                           ; 3 bytes @ 0x45
  1382  0045'                    	ds	2
  1383  0047'                    ??___ftsub:	
  1384  0047'                    ?_sprintf:	
  1385                           ; 1 bytes @ 0x47
  1386                           
  1387  0047'                    sprintf@sp:	
  1388                           ; 2 bytes @ 0x47
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0x47
  1392  0047'                    	ds	1
  1393  0048'                    convert_to_degrees@dec_deg:	
  1394                           
  1395                           ; 3 bytes @ 0x48
  1396  0048'                    	ds	1
  1397  0049'                    sprintf@f:	
  1398                           
  1399                           ; 1 bytes @ 0x49
  1400  0049'                    	ds	2
  1401  004B'                    convert_to_degrees@degrees:	
  1402                           
  1403                           ; 2 bytes @ 0x4B
  1404  004B'                    	ds	2
  1405  004D'                    convert_to_degrees@decimal:	
  1406                           
  1407                           ; 3 bytes @ 0x4D
  1408  004D'                    	ds	3
  1409                           
  1410                           	psect	maintext
  1411  0000'                    __pmaintext:	
  1412 ;;
  1413 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1414 ;;
  1415 ;; *************** function _main *****************
  1416 ;; Defined at:
  1417 ;;		line 38 in file "gps_test.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  GPS_Buffer     15   53[BANK1 ] unsigned char [15]
  1422 ;;  Time            4    0[BANK3 ] unsigned long 
  1423 ;;  Longitude       3    3[BANK2 ] float 
  1424 ;;  Latitude        3    0[BANK2 ] float 
  1425 ;;  Altitude        3    0        float 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : B00/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         0       0      17       4       6
  1437 ;;      Temps:          0       0       3       0       0
  1438 ;;      Totals:         0       0      20       4       6
  1439 ;;Total ram usage:       30 bytes
  1440 ;; Hardware stack levels required when called:    6
  1441 ;; This function calls:
  1442 ;;		_ADC_Init
  1443 ;;		_ADC_Read
  1444 ;;		_USART_Init
  1445 ;;		_USART_SendString
  1446 ;;		___awdiv
  1447 ;;		___awmod
  1448 ;;		___awtoft
  1449 ;;		___ftdiv
  1450 ;;		___ftmul
  1451 ;;		___fttol
  1452 ;;		_convert_time_to_UTC
  1453 ;;		_convert_to_degrees
  1454 ;;		_get_gpstime
  1455 ;;		_get_latitude
  1456 ;;		_get_longitude
  1457 ;;		_memset
  1458 ;;		_sprintf
  1459 ;;		_strcat
  1460 ;;		_strcpy
  1461 ;; This function is called by:
  1462 ;;		Startup code after reset
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _main
  1468  0000'                    _main:	
  1469                           
  1470                           ;gps_test.c: 39: unsigned long int Time;
  1471                           ;gps_test.c: 40: float Latitude,Longitude,Altitude;
  1472                           ;gps_test.c: 41: char GPS_Buffer[15];
  1473                           ;gps_test.c: 43: INTCONbits.GIE=1;
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1477  0000' 178B               	bsf	11,7	;volatile
  1478                           
  1479                           ;gps_test.c: 44: INTCONbits.PEIE=1;
  1480  0001' 170B               	bsf	11,6	;volatile
  1481                           
  1482                           ;gps_test.c: 45: PIE1bits.RCIE=1;
  1483  0002' 1683               	bsf	3,5	;RP0=1, select bank1
  1484  0003' 1303               	bcf	3,6	;RP1=0, select bank1
  1485  0004' 168C               	bsf	12,5	;volatile
  1486                           
  1487                           ;gps_test.c: 46: USART_Init(9600);
  1488  0005' 3000               	movlw	0
  1489  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  1490  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  1491  0008' 0092'              	movwf	USART_Init@baud_rate+3
  1492  0009' 3000               	movlw	0
  1493  000A' 0091'              	movwf	USART_Init@baud_rate+2
  1494  000B' 3025               	movlw	37
  1495  000C' 0090'              	movwf	USART_Init@baud_rate+1
  1496  000D' 3080               	movlw	128
  1497  000E' 008F'              	movwf	USART_Init@baud_rate
  1498  000F' 120A' 118A' 2000' 120A' 118A' 	fcall	_USART_Init
  1499                           
  1500                           ;gps_test.c: 47: ADC_Init();
  1501  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_Init
  1502  0019'                    l145:	
  1503                           ;gps_test.c: 52: while(1){
  1504                           
  1505                           
  1506                           ;gps_test.c: 54: value_adc = ADC_Read(0);
  1507  0019' 3000               	movlw	0
  1508  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  1509  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  1510  001C' 0080'              	movwf	ADC_Read@channel
  1511  001D' 0081'              	movwf	ADC_Read@channel+1
  1512  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_Read
  1513  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  1514  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  1515  0025' 0801'              	movf	?_ADC_Read+1,w
  1516  0026' 1683               	bsf	3,5	;RP0=1, select bank3
  1517  0027' 1703               	bsf	3,6	;RP1=1, select bank3
  1518  0028' 0080'              	movwf	(_value_adc+1)^(0+384)
  1519  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  1520  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  1521  002B' 0800'              	movf	?_ADC_Read,w
  1522  002C' 1683               	bsf	3,5	;RP0=1, select bank3
  1523  002D' 1703               	bsf	3,6	;RP1=1, select bank3
  1524  002E' 0080'              	movwf	_value_adc^(0+384)
  1525                           
  1526                           ;gps_test.c: 55: temp = value_adc;
  1527  002F' 0800'              	movf	(_value_adc+1)^(0+384),w
  1528  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  1529  0031' 1303               	bcf	3,6	;RP1=0, select bank0
  1530  0032' 0089'              	movwf	___awtoft@c+1
  1531  0033' 1683               	bsf	3,5	;RP0=1, select bank3
  1532  0034' 1703               	bsf	3,6	;RP1=1, select bank3
  1533  0035' 0800'              	movf	_value_adc^(0+384),w
  1534  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  1535  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  1536  0038' 0088'              	movwf	___awtoft@c
  1537  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  1538  003E' 1283               	bcf	3,5	;RP0=0, select bank0
  1539  003F' 1303               	bcf	3,6	;RP1=0, select bank0
  1540  0040' 0808'              	movf	?___awtoft,w
  1541  0041' 1683               	bsf	3,5	;RP0=1, select bank1
  1542  0042' 1303               	bcf	3,6	;RP1=0, select bank1
  1543  0043' 0080'              	movwf	_temp^(0+128)
  1544  0044' 1283               	bcf	3,5	;RP0=0, select bank0
  1545  0045' 1303               	bcf	3,6	;RP1=0, select bank0
  1546  0046' 0809'              	movf	?___awtoft+1,w
  1547  0047' 1683               	bsf	3,5	;RP0=1, select bank1
  1548  0048' 1303               	bcf	3,6	;RP1=0, select bank1
  1549  0049' 0080'              	movwf	(_temp+1)^(0+128)
  1550  004A' 1283               	bcf	3,5	;RP0=0, select bank0
  1551  004B' 1303               	bcf	3,6	;RP1=0, select bank0
  1552  004C' 080A'              	movf	?___awtoft+2,w
  1553  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  1554  004E' 1303               	bcf	3,6	;RP1=0, select bank1
  1555  004F' 0080'              	movwf	(_temp+2)^(0+128)
  1556                           
  1557                           ;gps_test.c: 56: temp = (temp * 500.0) / 1023.0;
  1558  0050' 30C0               	movlw	192
  1559  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  1560  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  1561  0053' 00A4'              	movwf	___ftdiv@f2
  1562  0054' 307F               	movlw	127
  1563  0055' 00A5'              	movwf	___ftdiv@f2+1
  1564  0056' 3044               	movlw	68
  1565  0057' 00A6'              	movwf	___ftdiv@f2+2
  1566  0058' 3000               	movlw	0
  1567  0059' 0094'              	movwf	___ftmul@f1
  1568  005A' 30FA               	movlw	250
  1569  005B' 0095'              	movwf	___ftmul@f1+1
  1570  005C' 3043               	movlw	67
  1571  005D' 0096'              	movwf	___ftmul@f1+2
  1572  005E' 1683               	bsf	3,5	;RP0=1, select bank1
  1573  005F' 1303               	bcf	3,6	;RP1=0, select bank1
  1574  0060' 0800'              	movf	_temp^(0+128),w
  1575  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  1576  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  1577  0063' 0097'              	movwf	___ftmul@f2
  1578  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  1579  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  1580  0066' 0800'              	movf	(_temp+1)^(0+128),w
  1581  0067' 1283               	bcf	3,5	;RP0=0, select bank0
  1582  0068' 1303               	bcf	3,6	;RP1=0, select bank0
  1583  0069' 0098'              	movwf	___ftmul@f2+1
  1584  006A' 1683               	bsf	3,5	;RP0=1, select bank1
  1585  006B' 1303               	bcf	3,6	;RP1=0, select bank1
  1586  006C' 0800'              	movf	(_temp+2)^(0+128),w
  1587  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  1588  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  1589  006F' 0099'              	movwf	___ftmul@f2+2
  1590  0070' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  1591  0075' 1283               	bcf	3,5	;RP0=0, select bank0
  1592  0076' 1303               	bcf	3,6	;RP1=0, select bank0
  1593  0077' 0814'              	movf	?___ftmul,w
  1594  0078' 00A7'              	movwf	___ftdiv@f1
  1595  0079' 0815'              	movf	?___ftmul+1,w
  1596  007A' 00A8'              	movwf	___ftdiv@f1+1
  1597  007B' 0816'              	movf	?___ftmul+2,w
  1598  007C' 00A9'              	movwf	___ftdiv@f1+2
  1599  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  1600  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  1601  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  1602  0084' 0824'              	movf	?___ftdiv,w
  1603  0085' 1683               	bsf	3,5	;RP0=1, select bank1
  1604  0086' 1303               	bcf	3,6	;RP1=0, select bank1
  1605  0087' 0080'              	movwf	_temp^(0+128)
  1606  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  1607  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  1608  008A' 0825'              	movf	?___ftdiv+1,w
  1609  008B' 1683               	bsf	3,5	;RP0=1, select bank1
  1610  008C' 1303               	bcf	3,6	;RP1=0, select bank1
  1611  008D' 0080'              	movwf	(_temp+1)^(0+128)
  1612  008E' 1283               	bcf	3,5	;RP0=0, select bank0
  1613  008F' 1303               	bcf	3,6	;RP1=0, select bank0
  1614  0090' 0826'              	movf	?___ftdiv+2,w
  1615  0091' 1683               	bsf	3,5	;RP0=1, select bank1
  1616  0092' 1303               	bcf	3,6	;RP1=0, select bank1
  1617  0093' 0080'              	movwf	(_temp+2)^(0+128)
  1618                           
  1619                           ;gps_test.c: 57: lm35 = (char) temp;
  1620  0094' 0800'              	movf	_temp^(0+128),w
  1621  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  1622  0096' 1303               	bcf	3,6	;RP1=0, select bank0
  1623  0097' 00B4'              	movwf	___fttol@f1
  1624  0098' 1683               	bsf	3,5	;RP0=1, select bank1
  1625  0099' 1303               	bcf	3,6	;RP1=0, select bank1
  1626  009A' 0800'              	movf	(_temp+1)^(0+128),w
  1627  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  1628  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  1629  009D' 00B5'              	movwf	___fttol@f1+1
  1630  009E' 1683               	bsf	3,5	;RP0=1, select bank1
  1631  009F' 1303               	bcf	3,6	;RP1=0, select bank1
  1632  00A0' 0800'              	movf	(_temp+2)^(0+128),w
  1633  00A1' 1283               	bcf	3,5	;RP0=0, select bank0
  1634  00A2' 1303               	bcf	3,6	;RP1=0, select bank0
  1635  00A3' 00B6'              	movwf	___fttol@f1+2
  1636  00A4' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  1637  00A9' 1283               	bcf	3,5	;RP0=0, select bank0
  1638  00AA' 1303               	bcf	3,6	;RP1=0, select bank0
  1639  00AB' 0834'              	movf	?___fttol,w
  1640  00AC' 1683               	bsf	3,5	;RP0=1, select bank1
  1641  00AD' 1303               	bcf	3,6	;RP1=0, select bank1
  1642  00AE' 0080'              	movwf	??_main^(0+128)
  1643  00AF' 0800'              	movf	??_main^(0+128),w
  1644  00B0' 0080'              	movwf	_lm35^(0+128)
  1645                           
  1646                           ;gps_test.c: 58: Temperature[0] = (lm35 / 100) + '0';
  1647  00B1' 3064               	movlw	100
  1648  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
  1649  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
  1650  00B4' 0087'              	movwf	___awdiv@divisor
  1651  00B5' 3000               	movlw	0
  1652  00B6' 0088'              	movwf	___awdiv@divisor+1
  1653  00B7' 1683               	bsf	3,5	;RP0=1, select bank1
  1654  00B8' 1303               	bcf	3,6	;RP1=0, select bank1
  1655  00B9' 0800'              	movf	_lm35^(0+128),w
  1656  00BA' 0080'              	movwf	??_main^(0+128)
  1657  00BB' 0181'              	clrf	(??_main^(0+128)+1)
  1658  00BC' 0800'              	movf	??_main^(0+128),w
  1659  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  1660  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  1661  00BF' 0089'              	movwf	___awdiv@dividend
  1662  00C0' 1683               	bsf	3,5	;RP0=1, select bank1
  1663  00C1' 1303               	bcf	3,6	;RP1=0, select bank1
  1664  00C2' 0800'              	movf	(??_main+1)^(0+128),w
  1665  00C3' 1283               	bcf	3,5	;RP0=0, select bank0
  1666  00C4' 1303               	bcf	3,6	;RP1=0, select bank0
  1667  00C5' 008A'              	movwf	___awdiv@dividend+1
  1668  00C6' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  1669  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  1670  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  1671  00CD' 0807'              	movf	?___awdiv,w
  1672  00CE' 3E30               	addlw	48
  1673  00CF' 1683               	bsf	3,5	;RP0=1, select bank1
  1674  00D0' 1303               	bcf	3,6	;RP1=0, select bank1
  1675  00D1' 0080'              	movwf	(??_main+2)^(0+128)
  1676  00D2' 0800'              	movf	(??_main+2)^(0+128),w
  1677  00D3' 1683               	bsf	3,5	;RP0=1, select bank3
  1678  00D4' 1703               	bsf	3,6	;RP1=1, select bank3
  1679  00D5' 0080'              	movwf	_Temperature^(0+384)
  1680                           
  1681                           ;gps_test.c: 59: Temperature[1] = (lm35 % 100) / 10 + '0';
  1682  00D6' 300A               	movlw	10
  1683  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  1684  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  1685  00D9' 0087'              	movwf	___awdiv@divisor
  1686  00DA' 3000               	movlw	0
  1687  00DB' 0088'              	movwf	___awdiv@divisor+1
  1688  00DC' 1683               	bsf	3,5	;RP0=1, select bank1
  1689  00DD' 1303               	bcf	3,6	;RP1=0, select bank1
  1690  00DE' 0800'              	movf	_lm35^(0+128),w
  1691  00DF' 0080'              	movwf	??_main^(0+128)
  1692  00E0' 0181'              	clrf	(??_main^(0+128)+1)
  1693  00E1' 0800'              	movf	??_main^(0+128),w
  1694  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
  1695  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
  1696  00E4' 0082'              	movwf	___awmod@dividend
  1697  00E5' 1683               	bsf	3,5	;RP0=1, select bank1
  1698  00E6' 1303               	bcf	3,6	;RP1=0, select bank1
  1699  00E7' 0800'              	movf	(??_main+1)^(0+128),w
  1700  00E8' 1283               	bcf	3,5	;RP0=0, select bank0
  1701  00E9' 1303               	bcf	3,6	;RP1=0, select bank0
  1702  00EA' 0083'              	movwf	___awmod@dividend+1
  1703  00EB' 3064               	movlw	100
  1704  00EC' 0080'              	movwf	___awmod@divisor
  1705  00ED' 3000               	movlw	0
  1706  00EE' 0081'              	movwf	___awmod@divisor+1
  1707  00EF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  1708  00F4' 1283               	bcf	3,5	;RP0=0, select bank0
  1709  00F5' 1303               	bcf	3,6	;RP1=0, select bank0
  1710  00F6' 0801'              	movf	?___awmod+1,w
  1711  00F7' 008A'              	movwf	___awdiv@dividend+1
  1712  00F8' 0800'              	movf	?___awmod,w
  1713  00F9' 0089'              	movwf	___awdiv@dividend
  1714  00FA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  1715  00FF' 1283               	bcf	3,5	;RP0=0, select bank0
  1716  0100' 1303               	bcf	3,6	;RP1=0, select bank0
  1717  0101' 0807'              	movf	?___awdiv,w
  1718  0102' 3E30               	addlw	48
  1719  0103' 1683               	bsf	3,5	;RP0=1, select bank1
  1720  0104' 1303               	bcf	3,6	;RP1=0, select bank1
  1721  0105' 0080'              	movwf	(??_main+2)^(0+128)
  1722  0106' 0800'              	movf	(??_main+2)^(0+128),w
  1723  0107' 1683               	bsf	3,5	;RP0=1, select bank3
  1724  0108' 1703               	bsf	3,6	;RP1=1, select bank3
  1725  0109' 0081'              	movwf	(_Temperature^(0+384)+1)
  1726                           
  1727                           ;gps_test.c: 60: Temperature[2] = (lm35 % 100) % 10 + '0';
  1728  010A' 1683               	bsf	3,5	;RP0=1, select bank1
  1729  010B' 1303               	bcf	3,6	;RP1=0, select bank1
  1730  010C' 0800'              	movf	_lm35^(0+128),w
  1731  010D' 0080'              	movwf	??_main^(0+128)
  1732  010E' 0181'              	clrf	(??_main^(0+128)+1)
  1733  010F' 0800'              	movf	??_main^(0+128),w
  1734  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  1735  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  1736  0112' 0082'              	movwf	___awmod@dividend
  1737  0113' 1683               	bsf	3,5	;RP0=1, select bank1
  1738  0114' 1303               	bcf	3,6	;RP1=0, select bank1
  1739  0115' 0800'              	movf	(??_main+1)^(0+128),w
  1740  0116' 1283               	bcf	3,5	;RP0=0, select bank0
  1741  0117' 1303               	bcf	3,6	;RP1=0, select bank0
  1742  0118' 0083'              	movwf	___awmod@dividend+1
  1743  0119' 3064               	movlw	100
  1744  011A' 0080'              	movwf	___awmod@divisor
  1745  011B' 3000               	movlw	0
  1746  011C' 0081'              	movwf	___awmod@divisor+1
  1747  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  1748  0122' 1283               	bcf	3,5	;RP0=0, select bank0
  1749  0123' 1303               	bcf	3,6	;RP1=0, select bank0
  1750  0124' 0801'              	movf	?___awmod+1,w
  1751  0125' 1683               	bsf	3,5	;RP0=1, select bank1
  1752  0126' 1303               	bcf	3,6	;RP1=0, select bank1
  1753  0127' 0080'              	movwf	(_main$922+1)^(0+128)
  1754  0128' 1283               	bcf	3,5	;RP0=0, select bank0
  1755  0129' 1303               	bcf	3,6	;RP1=0, select bank0
  1756  012A' 0800'              	movf	?___awmod,w
  1757  012B' 1683               	bsf	3,5	;RP0=1, select bank1
  1758  012C' 1303               	bcf	3,6	;RP1=0, select bank1
  1759  012D' 0080'              	movwf	_main$922^(0+128)
  1760                           
  1761                           ;gps_test.c: 60: Temperature[2] = (lm35 % 100) % 10 + '0';
  1762  012E' 300A               	movlw	10
  1763  012F' 1283               	bcf	3,5	;RP0=0, select bank0
  1764  0130' 1303               	bcf	3,6	;RP1=0, select bank0
  1765  0131' 0080'              	movwf	___awmod@divisor
  1766  0132' 3000               	movlw	0
  1767  0133' 0081'              	movwf	___awmod@divisor+1
  1768  0134' 1683               	bsf	3,5	;RP0=1, select bank1
  1769  0135' 1303               	bcf	3,6	;RP1=0, select bank1
  1770  0136' 0800'              	movf	(_main$922+1)^(0+128),w
  1771  0137' 1283               	bcf	3,5	;RP0=0, select bank0
  1772  0138' 1303               	bcf	3,6	;RP1=0, select bank0
  1773  0139' 0083'              	movwf	___awmod@dividend+1
  1774  013A' 1683               	bsf	3,5	;RP0=1, select bank1
  1775  013B' 1303               	bcf	3,6	;RP1=0, select bank1
  1776  013C' 0800'              	movf	_main$922^(0+128),w
  1777  013D' 1283               	bcf	3,5	;RP0=0, select bank0
  1778  013E' 1303               	bcf	3,6	;RP1=0, select bank0
  1779  013F' 0082'              	movwf	___awmod@dividend
  1780  0140' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  1781  0145' 1283               	bcf	3,5	;RP0=0, select bank0
  1782  0146' 1303               	bcf	3,6	;RP1=0, select bank0
  1783  0147' 0800'              	movf	?___awmod,w
  1784  0148' 3E30               	addlw	48
  1785  0149' 1683               	bsf	3,5	;RP0=1, select bank1
  1786  014A' 1303               	bcf	3,6	;RP1=0, select bank1
  1787  014B' 0080'              	movwf	??_main^(0+128)
  1788  014C' 0800'              	movf	??_main^(0+128),w
  1789  014D' 1683               	bsf	3,5	;RP0=1, select bank3
  1790  014E' 1703               	bsf	3,6	;RP1=1, select bank3
  1791  014F' 0082'              	movwf	(_Temperature^(0+384)+2)
  1792                           
  1793                           ;gps_test.c: 61: Temperature[3] = 0;
  1794  0150' 0183'              	clrf	(_Temperature^(0+384)+3)
  1795                           
  1796                           ;gps_test.c: 68: if(IsItGGAString == 1){
  1797  0151' 1683               	bsf	3,5	;RP0=1, select bank1
  1798  0152' 1303               	bcf	3,6	;RP1=0, select bank1
  1799  0153' 0300'              	decf	_IsItGGAString^(0+128),w	;volatile
  1800  0154' 1D03               	btfss	3,2
  1801  0155' 2800'              	goto	l145
  1802                           
  1803                           ;gps_test.c: 70: memset(GPS_Buffer,0,15);
  1804  0156' 3000               	movlw	0
  1805  0157' 1283               	bcf	3,5	;RP0=0, select bank0
  1806  0158' 1303               	bcf	3,6	;RP1=0, select bank0
  1807  0159' 0080'              	movwf	memset@c
  1808  015A' 0081'              	movwf	memset@c+1
  1809  015B' 300F               	movlw	15
  1810  015C' 0082'              	movwf	memset@n
  1811  015D' 3000               	movlw	0
  1812  015E' 0083'              	movwf	memset@n+1
  1813  015F' 3000'              	movlw	(low (main@GPS_Buffer| 0))& (0+255)
  1814  0160' 120A' 118A' 2000' 120A' 118A' 	fcall	_memset
  1815                           
  1816                           ;gps_test.c: 71: Time = get_gpstime();
  1817  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	_get_gpstime
  1818  016A' 1283               	bcf	3,5	;RP0=0, select bank0
  1819  016B' 1303               	bcf	3,6	;RP1=0, select bank0
  1820  016C' 081F'              	movf	?_get_gpstime+3,w
  1821  016D' 1683               	bsf	3,5	;RP0=1, select bank3
  1822  016E' 1703               	bsf	3,6	;RP1=1, select bank3
  1823  016F' 0080'              	movwf	(main@Time+3)^(0+384)
  1824  0170' 1283               	bcf	3,5	;RP0=0, select bank0
  1825  0171' 1303               	bcf	3,6	;RP1=0, select bank0
  1826  0172' 081E'              	movf	?_get_gpstime+2,w
  1827  0173' 1683               	bsf	3,5	;RP0=1, select bank3
  1828  0174' 1703               	bsf	3,6	;RP1=1, select bank3
  1829  0175' 0080'              	movwf	(main@Time+2)^(0+384)
  1830  0176' 1283               	bcf	3,5	;RP0=0, select bank0
  1831  0177' 1303               	bcf	3,6	;RP1=0, select bank0
  1832  0178' 081D'              	movf	?_get_gpstime+1,w
  1833  0179' 1683               	bsf	3,5	;RP0=1, select bank3
  1834  017A' 1703               	bsf	3,6	;RP1=1, select bank3
  1835  017B' 0080'              	movwf	(main@Time+1)^(0+384)
  1836  017C' 1283               	bcf	3,5	;RP0=0, select bank0
  1837  017D' 1303               	bcf	3,6	;RP1=0, select bank0
  1838  017E' 081C'              	movf	?_get_gpstime,w
  1839  017F' 1683               	bsf	3,5	;RP0=1, select bank3
  1840  0180' 1703               	bsf	3,6	;RP1=1, select bank3
  1841  0181' 0080'              	movwf	main@Time^(0+384)
  1842                           
  1843                           ;gps_test.c: 72: convert_time_to_UTC(Time);
  1844  0182' 0800'              	movf	(main@Time+3)^(0+384),w
  1845  0183' 1683               	bsf	3,5	;RP0=1, select bank1
  1846  0184' 1303               	bcf	3,6	;RP1=0, select bank1
  1847  0185' 0080'              	movwf	(convert_time_to_UTC@UTC_Time+3)^(0+128)
  1848  0186' 1683               	bsf	3,5	;RP0=1, select bank3
  1849  0187' 1703               	bsf	3,6	;RP1=1, select bank3
  1850  0188' 0800'              	movf	(main@Time+2)^(0+384),w
  1851  0189' 1683               	bsf	3,5	;RP0=1, select bank1
  1852  018A' 1303               	bcf	3,6	;RP1=0, select bank1
  1853  018B' 0080'              	movwf	(convert_time_to_UTC@UTC_Time+2)^(0+128)
  1854  018C' 1683               	bsf	3,5	;RP0=1, select bank3
  1855  018D' 1703               	bsf	3,6	;RP1=1, select bank3
  1856  018E' 0800'              	movf	(main@Time+1)^(0+384),w
  1857  018F' 1683               	bsf	3,5	;RP0=1, select bank1
  1858  0190' 1303               	bcf	3,6	;RP1=0, select bank1
  1859  0191' 0080'              	movwf	(convert_time_to_UTC@UTC_Time+1)^(0+128)
  1860  0192' 1683               	bsf	3,5	;RP0=1, select bank3
  1861  0193' 1703               	bsf	3,6	;RP1=1, select bank3
  1862  0194' 0800'              	movf	main@Time^(0+384),w
  1863  0195' 1683               	bsf	3,5	;RP0=1, select bank1
  1864  0196' 1303               	bcf	3,6	;RP1=0, select bank1
  1865  0197' 0080'              	movwf	convert_time_to_UTC@UTC_Time^(0+128)
  1866  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	_convert_time_to_UTC
  1867                           
  1868                           ;gps_test.c: 73: strcpy(stringBT, Data_Buffer);
  1869  019D' 3000'              	movlw	(low (_Data_Buffer| (0+256)))& (0+255)
  1870  019E' 1683               	bsf	3,5	;RP0=1, select bank1
  1871  019F' 1303               	bcf	3,6	;RP1=0, select bank1
  1872  01A0' 0080'              	movwf	??_main^(0+128)
  1873  01A1' 0800'              	movf	??_main^(0+128),w
  1874  01A2' 1283               	bcf	3,5	;RP0=0, select bank0
  1875  01A3' 1303               	bcf	3,6	;RP1=0, select bank0
  1876  01A4' 0080'              	movwf	strcpy@from
  1877  01A5' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  1878  01A6' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcpy
  1879                           
  1880                           ;gps_test.c: 74: strcat(stringBT, ",");
  1881  01AB' 3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1882  01AC' 1283               	bcf	3,5	;RP0=0, select bank0
  1883  01AD' 1303               	bcf	3,6	;RP1=0, select bank0
  1884  01AE' 0080'              	movwf	strcat@from
  1885  01AF' 3080               	movlw	128
  1886  01B0' 0081'              	movwf	strcat@from+1
  1887  01B1' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  1888  01B2' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  1889                           
  1890                           ;gps_test.c: 76: Latitude = get_latitude(GGA_Pointers[0]);
  1891  01B7' 1683               	bsf	3,5	;RP0=1, select bank3
  1892  01B8' 1703               	bsf	3,6	;RP1=1, select bank3
  1893  01B9' 0800'              	movf	_GGA_Pointers^(0+384),w
  1894  01BA' 120A' 118A' 2000' 120A' 118A' 	fcall	_get_latitude
  1895  01BF' 1683               	bsf	3,5	;RP0=1, select bank1
  1896  01C0' 1303               	bcf	3,6	;RP1=0, select bank1
  1897  01C1' 0800'              	movf	?_get_latitude^(0+128),w
  1898  01C2' 1283               	bcf	3,5	;RP0=0, select bank2
  1899  01C3' 1703               	bsf	3,6	;RP1=1, select bank2
  1900  01C4' 0080'              	movwf	main@Latitude^(0+256)
  1901  01C5' 1683               	bsf	3,5	;RP0=1, select bank1
  1902  01C6' 1303               	bcf	3,6	;RP1=0, select bank1
  1903  01C7' 0800'              	movf	(?_get_latitude+1)^(0+128),w
  1904  01C8' 1283               	bcf	3,5	;RP0=0, select bank2
  1905  01C9' 1703               	bsf	3,6	;RP1=1, select bank2
  1906  01CA' 0080'              	movwf	(main@Latitude+1)^(0+256)
  1907  01CB' 1683               	bsf	3,5	;RP0=1, select bank1
  1908  01CC' 1303               	bcf	3,6	;RP1=0, select bank1
  1909  01CD' 0800'              	movf	(?_get_latitude+2)^(0+128),w
  1910  01CE' 1283               	bcf	3,5	;RP0=0, select bank2
  1911  01CF' 1703               	bsf	3,6	;RP1=1, select bank2
  1912  01D0' 0080'              	movwf	(main@Latitude+2)^(0+256)
  1913                           
  1914                           ;gps_test.c: 77: Latitude = convert_to_degrees(Latitude);
  1915  01D1' 0800'              	movf	main@Latitude^(0+256),w
  1916  01D2' 1283               	bcf	3,5	;RP0=0, select bank0
  1917  01D3' 1303               	bcf	3,6	;RP1=0, select bank0
  1918  01D4' 00C2'              	movwf	convert_to_degrees@NMEA_lat_long
  1919  01D5' 1283               	bcf	3,5	;RP0=0, select bank2
  1920  01D6' 1703               	bsf	3,6	;RP1=1, select bank2
  1921  01D7' 0800'              	movf	(main@Latitude+1)^(0+256),w
  1922  01D8' 1283               	bcf	3,5	;RP0=0, select bank0
  1923  01D9' 1303               	bcf	3,6	;RP1=0, select bank0
  1924  01DA' 00C3'              	movwf	convert_to_degrees@NMEA_lat_long+1
  1925  01DB' 1283               	bcf	3,5	;RP0=0, select bank2
  1926  01DC' 1703               	bsf	3,6	;RP1=1, select bank2
  1927  01DD' 0800'              	movf	(main@Latitude+2)^(0+256),w
  1928  01DE' 1283               	bcf	3,5	;RP0=0, select bank0
  1929  01DF' 1303               	bcf	3,6	;RP1=0, select bank0
  1930  01E0' 00C4'              	movwf	convert_to_degrees@NMEA_lat_long+2
  1931  01E1' 120A' 118A' 2000' 120A' 118A' 	fcall	_convert_to_degrees
  1932  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  1933  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  1934  01E8' 0842'              	movf	?_convert_to_degrees,w
  1935  01E9' 1283               	bcf	3,5	;RP0=0, select bank2
  1936  01EA' 1703               	bsf	3,6	;RP1=1, select bank2
  1937  01EB' 0080'              	movwf	main@Latitude^(0+256)
  1938  01EC' 1283               	bcf	3,5	;RP0=0, select bank0
  1939  01ED' 1303               	bcf	3,6	;RP1=0, select bank0
  1940  01EE' 0843'              	movf	?_convert_to_degrees+1,w
  1941  01EF' 1283               	bcf	3,5	;RP0=0, select bank2
  1942  01F0' 1703               	bsf	3,6	;RP1=1, select bank2
  1943  01F1' 0080'              	movwf	(main@Latitude+1)^(0+256)
  1944  01F2' 1283               	bcf	3,5	;RP0=0, select bank0
  1945  01F3' 1303               	bcf	3,6	;RP1=0, select bank0
  1946  01F4' 0844'              	movf	?_convert_to_degrees+2,w
  1947  01F5' 1283               	bcf	3,5	;RP0=0, select bank2
  1948  01F6' 1703               	bsf	3,6	;RP1=1, select bank2
  1949  01F7' 0080'              	movwf	(main@Latitude+2)^(0+256)
  1950                           
  1951                           ;gps_test.c: 78: sprintf(GPS_Buffer,"%.05f",Latitude);
  1952  01F8' 3000'              	movlw	(low (main@GPS_Buffer| 0))& (0+255)
  1953  01F9' 1283               	bcf	3,5	;RP0=0, select bank0
  1954  01FA' 1303               	bcf	3,6	;RP1=0, select bank0
  1955  01FB' 00C7'              	movwf	sprintf@sp
  1956  01FC' 3000               	movlw	0
  1957  01FD' 00C8'              	movwf	sprintf@sp+1
  1958  01FE' 3080               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1959  01FF' 1683               	bsf	3,5	;RP0=1, select bank1
  1960  0200' 1303               	bcf	3,6	;RP1=0, select bank1
  1961  0201' 0080'              	movwf	??_main^(0+128)
  1962  0202' 0800'              	movf	??_main^(0+128),w
  1963  0203' 1283               	bcf	3,5	;RP0=0, select bank0
  1964  0204' 1303               	bcf	3,6	;RP1=0, select bank0
  1965  0205' 00C9'              	movwf	sprintf@f
  1966  0206' 1283               	bcf	3,5	;RP0=0, select bank2
  1967  0207' 1703               	bsf	3,6	;RP1=1, select bank2
  1968  0208' 0800'              	movf	main@Latitude^(0+256),w
  1969  0209' 1283               	bcf	3,5	;RP0=0, select bank0
  1970  020A' 1303               	bcf	3,6	;RP1=0, select bank0
  1971  020B' 00CA'              	movwf	?_sprintf+3
  1972  020C' 1283               	bcf	3,5	;RP0=0, select bank2
  1973  020D' 1703               	bsf	3,6	;RP1=1, select bank2
  1974  020E' 0800'              	movf	(main@Latitude+1)^(0+256),w
  1975  020F' 1283               	bcf	3,5	;RP0=0, select bank0
  1976  0210' 1303               	bcf	3,6	;RP1=0, select bank0
  1977  0211' 00CB'              	movwf	?_sprintf+4
  1978  0212' 1283               	bcf	3,5	;RP0=0, select bank2
  1979  0213' 1703               	bsf	3,6	;RP1=1, select bank2
  1980  0214' 0800'              	movf	(main@Latitude+2)^(0+256),w
  1981  0215' 1283               	bcf	3,5	;RP0=0, select bank0
  1982  0216' 1303               	bcf	3,6	;RP1=0, select bank0
  1983  0217' 00CC'              	movwf	?_sprintf+5
  1984  0218' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1985                           
  1986                           ;gps_test.c: 79: strcat(stringBT, GPS_Buffer);
  1987  021D' 3000'              	movlw	(low (main@GPS_Buffer| 0))& (0+255)
  1988  021E' 1283               	bcf	3,5	;RP0=0, select bank0
  1989  021F' 1303               	bcf	3,6	;RP1=0, select bank0
  1990  0220' 0080'              	movwf	strcat@from
  1991  0221' 3000               	movlw	0
  1992  0222' 0081'              	movwf	strcat@from+1
  1993  0223' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  1994  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  1995                           
  1996                           ;gps_test.c: 80: strcat(stringBT, ",");
  1997  0229' 3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1998  022A' 1283               	bcf	3,5	;RP0=0, select bank0
  1999  022B' 1303               	bcf	3,6	;RP1=0, select bank0
  2000  022C' 0080'              	movwf	strcat@from
  2001  022D' 3080               	movlw	128
  2002  022E' 0081'              	movwf	strcat@from+1
  2003  022F' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  2004  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  2005                           
  2006                           ;gps_test.c: 82: memset(GPS_Buffer,0,15);
  2007  0235' 3000               	movlw	0
  2008  0236' 1283               	bcf	3,5	;RP0=0, select bank0
  2009  0237' 1303               	bcf	3,6	;RP1=0, select bank0
  2010  0238' 0080'              	movwf	memset@c
  2011  0239' 0081'              	movwf	memset@c+1
  2012  023A' 300F               	movlw	15
  2013  023B' 0082'              	movwf	memset@n
  2014  023C' 3000               	movlw	0
  2015  023D' 0083'              	movwf	memset@n+1
  2016  023E' 3000'              	movlw	(low (main@GPS_Buffer| 0))& (0+255)
  2017  023F' 120A' 118A' 2000' 120A' 118A' 	fcall	_memset
  2018                           
  2019                           ;gps_test.c: 83: Longitude = get_longitude(GGA_Pointers[2]);
  2020  0244' 1683               	bsf	3,5	;RP0=1, select bank3
  2021  0245' 1703               	bsf	3,6	;RP1=1, select bank3
  2022  0246' 0802'              	movf	(_GGA_Pointers^(0+384)+2),w
  2023  0247' 120A' 118A' 2000' 120A' 118A' 	fcall	_get_longitude
  2024  024C' 1683               	bsf	3,5	;RP0=1, select bank1
  2025  024D' 1303               	bcf	3,6	;RP1=0, select bank1
  2026  024E' 0800'              	movf	?_get_longitude^(0+128),w
  2027  024F' 1283               	bcf	3,5	;RP0=0, select bank2
  2028  0250' 1703               	bsf	3,6	;RP1=1, select bank2
  2029  0251' 0080'              	movwf	main@Longitude^(0+256)
  2030  0252' 1683               	bsf	3,5	;RP0=1, select bank1
  2031  0253' 1303               	bcf	3,6	;RP1=0, select bank1
  2032  0254' 0800'              	movf	(?_get_longitude+1)^(0+128),w
  2033  0255' 1283               	bcf	3,5	;RP0=0, select bank2
  2034  0256' 1703               	bsf	3,6	;RP1=1, select bank2
  2035  0257' 0080'              	movwf	(main@Longitude+1)^(0+256)
  2036  0258' 1683               	bsf	3,5	;RP0=1, select bank1
  2037  0259' 1303               	bcf	3,6	;RP1=0, select bank1
  2038  025A' 0800'              	movf	(?_get_longitude+2)^(0+128),w
  2039  025B' 1283               	bcf	3,5	;RP0=0, select bank2
  2040  025C' 1703               	bsf	3,6	;RP1=1, select bank2
  2041  025D' 0080'              	movwf	(main@Longitude+2)^(0+256)
  2042                           
  2043                           ;gps_test.c: 84: Longitude = convert_to_degrees(Longitude);
  2044  025E' 0800'              	movf	main@Longitude^(0+256),w
  2045  025F' 1283               	bcf	3,5	;RP0=0, select bank0
  2046  0260' 1303               	bcf	3,6	;RP1=0, select bank0
  2047  0261' 00C2'              	movwf	convert_to_degrees@NMEA_lat_long
  2048  0262' 1283               	bcf	3,5	;RP0=0, select bank2
  2049  0263' 1703               	bsf	3,6	;RP1=1, select bank2
  2050  0264' 0800'              	movf	(main@Longitude+1)^(0+256),w
  2051  0265' 1283               	bcf	3,5	;RP0=0, select bank0
  2052  0266' 1303               	bcf	3,6	;RP1=0, select bank0
  2053  0267' 00C3'              	movwf	convert_to_degrees@NMEA_lat_long+1
  2054  0268' 1283               	bcf	3,5	;RP0=0, select bank2
  2055  0269' 1703               	bsf	3,6	;RP1=1, select bank2
  2056  026A' 0800'              	movf	(main@Longitude+2)^(0+256),w
  2057  026B' 1283               	bcf	3,5	;RP0=0, select bank0
  2058  026C' 1303               	bcf	3,6	;RP1=0, select bank0
  2059  026D' 00C4'              	movwf	convert_to_degrees@NMEA_lat_long+2
  2060  026E' 120A' 118A' 2000' 120A' 118A' 	fcall	_convert_to_degrees
  2061  0273' 1283               	bcf	3,5	;RP0=0, select bank0
  2062  0274' 1303               	bcf	3,6	;RP1=0, select bank0
  2063  0275' 0842'              	movf	?_convert_to_degrees,w
  2064  0276' 1283               	bcf	3,5	;RP0=0, select bank2
  2065  0277' 1703               	bsf	3,6	;RP1=1, select bank2
  2066  0278' 0080'              	movwf	main@Longitude^(0+256)
  2067  0279' 1283               	bcf	3,5	;RP0=0, select bank0
  2068  027A' 1303               	bcf	3,6	;RP1=0, select bank0
  2069  027B' 0843'              	movf	?_convert_to_degrees+1,w
  2070  027C' 1283               	bcf	3,5	;RP0=0, select bank2
  2071  027D' 1703               	bsf	3,6	;RP1=1, select bank2
  2072  027E' 0080'              	movwf	(main@Longitude+1)^(0+256)
  2073  027F' 1283               	bcf	3,5	;RP0=0, select bank0
  2074  0280' 1303               	bcf	3,6	;RP1=0, select bank0
  2075  0281' 0844'              	movf	?_convert_to_degrees+2,w
  2076  0282' 1283               	bcf	3,5	;RP0=0, select bank2
  2077  0283' 1703               	bsf	3,6	;RP1=1, select bank2
  2078  0284' 0080'              	movwf	(main@Longitude+2)^(0+256)
  2079                           
  2080                           ;gps_test.c: 85: sprintf(GPS_Buffer,"%.05f",Longitude);
  2081  0285' 3000'              	movlw	(low (main@GPS_Buffer| 0))& (0+255)
  2082  0286' 1283               	bcf	3,5	;RP0=0, select bank0
  2083  0287' 1303               	bcf	3,6	;RP1=0, select bank0
  2084  0288' 00C7'              	movwf	sprintf@sp
  2085  0289' 3000               	movlw	0
  2086  028A' 00C8'              	movwf	sprintf@sp+1
  2087  028B' 3080               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2088  028C' 1683               	bsf	3,5	;RP0=1, select bank1
  2089  028D' 1303               	bcf	3,6	;RP1=0, select bank1
  2090  028E' 0080'              	movwf	??_main^(0+128)
  2091  028F' 0800'              	movf	??_main^(0+128),w
  2092  0290' 1283               	bcf	3,5	;RP0=0, select bank0
  2093  0291' 1303               	bcf	3,6	;RP1=0, select bank0
  2094  0292' 00C9'              	movwf	sprintf@f
  2095  0293' 1283               	bcf	3,5	;RP0=0, select bank2
  2096  0294' 1703               	bsf	3,6	;RP1=1, select bank2
  2097  0295' 0800'              	movf	main@Longitude^(0+256),w
  2098  0296' 1283               	bcf	3,5	;RP0=0, select bank0
  2099  0297' 1303               	bcf	3,6	;RP1=0, select bank0
  2100  0298' 00CA'              	movwf	?_sprintf+3
  2101  0299' 1283               	bcf	3,5	;RP0=0, select bank2
  2102  029A' 1703               	bsf	3,6	;RP1=1, select bank2
  2103  029B' 0800'              	movf	(main@Longitude+1)^(0+256),w
  2104  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  2105  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  2106  029E' 00CB'              	movwf	?_sprintf+4
  2107  029F' 1283               	bcf	3,5	;RP0=0, select bank2
  2108  02A0' 1703               	bsf	3,6	;RP1=1, select bank2
  2109  02A1' 0800'              	movf	(main@Longitude+2)^(0+256),w
  2110  02A2' 1283               	bcf	3,5	;RP0=0, select bank0
  2111  02A3' 1303               	bcf	3,6	;RP1=0, select bank0
  2112  02A4' 00CC'              	movwf	?_sprintf+5
  2113  02A5' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  2114                           
  2115                           ;gps_test.c: 86: strcat(stringBT, GPS_Buffer);
  2116  02AA' 3000'              	movlw	(low (main@GPS_Buffer| 0))& (0+255)
  2117  02AB' 1283               	bcf	3,5	;RP0=0, select bank0
  2118  02AC' 1303               	bcf	3,6	;RP1=0, select bank0
  2119  02AD' 0080'              	movwf	strcat@from
  2120  02AE' 3000               	movlw	0
  2121  02AF' 0081'              	movwf	strcat@from+1
  2122  02B0' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  2123  02B1' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  2124                           
  2125                           ;gps_test.c: 87: strcat(stringBT, ",");
  2126  02B6' 3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2127  02B7' 1283               	bcf	3,5	;RP0=0, select bank0
  2128  02B8' 1303               	bcf	3,6	;RP1=0, select bank0
  2129  02B9' 0080'              	movwf	strcat@from
  2130  02BA' 3080               	movlw	128
  2131  02BB' 0081'              	movwf	strcat@from+1
  2132  02BC' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  2133  02BD' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  2134                           
  2135                           ;gps_test.c: 89: strcat(stringBT, Temperature);
  2136  02C2' 3000'              	movlw	(low (_Temperature| (0+256)))& (0+255)
  2137  02C3' 1283               	bcf	3,5	;RP0=0, select bank0
  2138  02C4' 1303               	bcf	3,6	;RP1=0, select bank0
  2139  02C5' 0080'              	movwf	strcat@from
  2140  02C6' 3001               	movlw	1
  2141  02C7' 0081'              	movwf	strcat@from+1
  2142  02C8' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  2143  02C9' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  2144                           
  2145                           ;gps_test.c: 90: strcat(stringBT, "\r\n");
  2146  02CE' 3086               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2147  02CF' 1283               	bcf	3,5	;RP0=0, select bank0
  2148  02D0' 1303               	bcf	3,6	;RP1=0, select bank0
  2149  02D1' 0080'              	movwf	strcat@from
  2150  02D2' 3080               	movlw	128
  2151  02D3' 0081'              	movwf	strcat@from+1
  2152  02D4' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  2153  02D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  2154                           
  2155                           ;gps_test.c: 91: USART_SendString(stringBT);
  2156  02DA' 3000'              	movlw	(low (_stringBT| (0+256)))& (0+255)
  2157  02DB' 120A' 118A' 2000' 120A' 118A' 	fcall	_USART_SendString
  2158  02E0' 2800'              	goto	l145
  2159  02E1'                    __end_of_main:	
  2160                           
  2161                           	psect	text1
  2162  0000'                    __ptext1:	
  2163 ;; *************** function _strcpy *****************
  2164 ;; Defined at:
  2165 ;;		line 8 in file "D:\mplab\sources\common\strcpy.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  to              1    wreg     PTR unsigned char 
  2168 ;;		 -> stringBT(50), 
  2169 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  2170 ;;		 -> Data_Buffer(15), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  to              1    2[BANK0 ] PTR unsigned char 
  2173 ;;		 -> stringBT(50), 
  2174 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  2175 ;;		 -> stringBT(50), 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      PTR unsigned char 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         0       1       0       0       0
  2186 ;;      Locals:         0       2       0       0       0
  2187 ;;      Temps:          0       1       0       0       0
  2188 ;;      Totals:         0       4       0       0       0
  2189 ;;Total ram usage:        4 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _strcpy
  2201  0000'                    _strcpy:	
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0]
  2205                           ;strcpy@to stored from wreg
  2206  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2207  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2208  0002' 0082'              	movwf	strcpy@to
  2209  0003' 0802'              	movf	strcpy@to,w
  2210  0004' 0081'              	movwf	??_strcpy
  2211  0005' 0801'              	movf	??_strcpy,w
  2212  0006' 0083'              	movwf	strcpy@cp
  2213  0007'                    l5050:	
  2214  0007' 0800'              	movf	strcpy@from,w
  2215  0008' 0084               	movwf	4
  2216  0009' 1783               	bsf	3,7	;select IRP bank2
  2217  000A' 0800               	movf	0,w
  2218  000B' 0081'              	movwf	??_strcpy
  2219  000C' 0803'              	movf	strcpy@cp,w
  2220  000D' 0084               	movwf	4
  2221  000E' 0801'              	movf	??_strcpy,w
  2222  000F' 0080               	movwf	0
  2223  0010' 0800               	movf	0,w
  2224  0011' 1903               	btfsc	3,2
  2225  0012' 0008               	return
  2226  0013' 3001               	movlw	1
  2227  0014' 0081'              	movwf	??_strcpy
  2228  0015' 0801'              	movf	??_strcpy,w
  2229  0016' 0783'              	addwf	strcpy@cp,f
  2230  0017' 3001               	movlw	1
  2231  0018' 0081'              	movwf	??_strcpy
  2232  0019' 0801'              	movf	??_strcpy,w
  2233  001A' 0780'              	addwf	strcpy@from,f
  2234  001B' 2800'              	goto	l5050
  2235  001C'                    __end_of_strcpy:	
  2236                           ;	Return value of _strcpy is never used
  2237                           
  2238                           
  2239                           	psect	text2
  2240  0000'                    __ptext2:	
  2241 ;; *************** function _strcat *****************
  2242 ;; Defined at:
  2243 ;;		line 8 in file "D:\mplab\sources\common\strcat.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  to              1    wreg     PTR unsigned char 
  2246 ;;		 -> stringBT(50), 
  2247 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  2248 ;;		 -> STR_6(3), STR_5(2), STR_3(2), STR_1(2), 
  2249 ;;		 -> main@GPS_Buffer(15), Temperature(5), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  to              1    4[BANK0 ] PTR unsigned char 
  2252 ;;		 -> stringBT(50), 
  2253 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  2254 ;;		 -> stringBT(50), 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      PTR unsigned char 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       2       0       0       0
  2265 ;;      Locals:         0       2       0       0       0
  2266 ;;      Temps:          0       1       0       0       0
  2267 ;;      Totals:         0       5       0       0       0
  2268 ;;Total ram usage:        5 bytes
  2269 ;; Hardware stack levels used:    2
  2270 ;; Hardware stack levels required when called:    1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _strcat
  2280  0000'                    _strcat:	
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2284                           ;strcat@to stored from wreg
  2285  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2286  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2287  0002' 0084'              	movwf	strcat@to
  2288  0003' 0804'              	movf	strcat@to,w
  2289  0004' 0082'              	movwf	??_strcat
  2290  0005' 0802'              	movf	??_strcat,w
  2291  0006' 0083'              	movwf	strcat@cp
  2292  0007'                    l5056:	
  2293  0007' 0803'              	movf	strcat@cp,w
  2294  0008' 0084               	movwf	4
  2295  0009' 1783               	bsf	3,7	;select IRP bank2
  2296  000A' 0800               	movf	0,w
  2297  000B' 1903               	btfsc	3,2
  2298  000C' 2800'              	goto	l5062
  2299  000D' 3001               	movlw	1
  2300  000E' 0082'              	movwf	??_strcat
  2301  000F' 0802'              	movf	??_strcat,w
  2302  0010' 0783'              	addwf	strcat@cp,f
  2303  0011' 2800'              	goto	l5056
  2304  0012'                    l5058:	
  2305  0012' 3001               	movlw	1
  2306  0013' 0082'              	movwf	??_strcat
  2307  0014' 0802'              	movf	??_strcat,w
  2308  0015' 0783'              	addwf	strcat@cp,f
  2309  0016' 3001               	movlw	1
  2310  0017' 0780'              	addwf	strcat@from,f
  2311  0018' 1803               	skipnc
  2312  0019' 0A81'              	incf	strcat@from+1,f
  2313  001A'                    l5062:	
  2314  001A' 0801'              	movf	strcat@from+1,w
  2315  001B' 00FF               	movwf	127
  2316  001C' 0800'              	movf	strcat@from,w
  2317  001D' 0084               	movwf	4
  2318  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2319  0023' 0082'              	movwf	??_strcat
  2320  0024' 0803'              	movf	strcat@cp,w
  2321  0025' 0084               	movwf	4
  2322  0026' 0802'              	movf	??_strcat,w
  2323  0027' 1783               	bsf	3,7	;select IRP bank2
  2324  0028' 0080               	movwf	0
  2325  0029' 0800               	movf	0,w
  2326  002A' 1903               	btfsc	3,2
  2327  002B' 0008               	return
  2328  002C' 2800'              	goto	l5058
  2329  002D'                    __end_of_strcat:	
  2330                           ;	Return value of _strcat is never used
  2331                           
  2332                           
  2333                           	psect	text3
  2334  0000'                    __ptext3:	
  2335 ;; *************** function _memset *****************
  2336 ;; Defined at:
  2337 ;;		line 8 in file "D:\mplab\sources\common\memset.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  p1              1    wreg     PTR void 
  2340 ;;		 -> main@GPS_Buffer(15), 
  2341 ;;  c               2    0[BANK0 ] int 
  2342 ;;  n               2    2[BANK0 ] unsigned int 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  p1              1    6[BANK0 ] PTR void 
  2345 ;;		 -> main@GPS_Buffer(15), 
  2346 ;;  p               1    5[BANK0 ] PTR unsigned char 
  2347 ;;		 -> main@GPS_Buffer(15), 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      PTR void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       4       0       0       0
  2358 ;;      Locals:         0       2       0       0       0
  2359 ;;      Temps:          0       1       0       0       0
  2360 ;;      Totals:         0       7       0       0       0
  2361 ;;Total ram usage:        7 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _memset
  2373  0000'                    _memset:	
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2377                           ;memset@p1 stored from wreg
  2378  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2379  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2380  0002' 0086'              	movwf	memset@p1
  2381  0003' 0806'              	movf	memset@p1,w
  2382  0004' 0084'              	movwf	??_memset
  2383  0005' 0804'              	movf	??_memset,w
  2384  0006' 0085'              	movwf	memset@p
  2385  0007'                    l5026:	
  2386  0007' 3001               	movlw	1
  2387  0008' 0282'              	subwf	memset@n,f
  2388  0009' 3000               	movlw	0
  2389  000A' 1C03               	skipc
  2390  000B' 0383'              	decf	memset@n+1,f
  2391  000C' 0283'              	subwf	memset@n+1,f
  2392  000D' 0A02'              	incf	memset@n,w
  2393  000E' 1903               	btfsc	3,2
  2394  000F' 0A03'              	incf	memset@n+1,w
  2395  0010' 1903               	btfsc	3,2
  2396  0011' 0008               	return
  2397  0012' 0800'              	movf	memset@c,w
  2398  0013' 0084'              	movwf	??_memset
  2399  0014' 0805'              	movf	memset@p,w
  2400  0015' 0084               	movwf	4
  2401  0016' 0804'              	movf	??_memset,w
  2402  0017' 1383               	bcf	3,7	;select IRP bank0
  2403  0018' 0080               	movwf	0
  2404  0019' 3001               	movlw	1
  2405  001A' 0084'              	movwf	??_memset
  2406  001B' 0804'              	movf	??_memset,w
  2407  001C' 0785'              	addwf	memset@p,f
  2408  001D' 2800'              	goto	l5026
  2409  001E'                    __end_of_memset:	
  2410                           ;	Return value of _memset is never used
  2411                           
  2412                           
  2413                           	psect	text4
  2414  0000'                    __ptext4:	
  2415 ;; *************** function _get_longitude *****************
  2416 ;; Defined at:
  2417 ;;		line 157 in file "gps_test.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  long_pointer    1    wreg     unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  long_pointer    1   47[BANK1 ] unsigned char 
  2422 ;;  Long_Buffer    15   29[BANK1 ] unsigned char [15]
  2423 ;;  _longitude      3   44[BANK1 ] float 
  2424 ;;  long_index      1   49[BANK1 ] unsigned char 
  2425 ;;  index           1   48[BANK1 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  3   26[BANK1 ] float 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       3       0       0
  2436 ;;      Locals:         0       0      21       0       0
  2437 ;;      Temps:          0       1       0       0       0
  2438 ;;      Totals:         0       1      24       0       0
  2439 ;;Total ram usage:       25 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    5
  2442 ;; This function calls:
  2443 ;;		_atof
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _get_longitude
  2451  0000'                    _get_longitude:	
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _get_longitude: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2455                           ;get_longitude@long_pointer stored from wreg
  2456  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2457  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2458  0002' 0080'              	movwf	get_longitude@long_pointer^(0+128)
  2459                           
  2460                           ;gps_test.c: 158: unsigned char long_index;
  2461                           ;gps_test.c: 159: unsigned char index = long_pointer+1;
  2462  0003' 0800'              	movf	get_longitude@long_pointer^(0+128),w
  2463  0004' 3E01               	addlw	1
  2464  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  2465  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  2466  0007' 00BC'              	movwf	??_get_longitude
  2467  0008' 083C'              	movf	??_get_longitude,w
  2468  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  2469  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  2470  000B' 0080'              	movwf	get_longitude@index^(0+128)
  2471                           
  2472                           ;gps_test.c: 160: char Long_Buffer[15];
  2473                           ;gps_test.c: 161: float _longitude;
  2474                           ;gps_test.c: 162: long_index=0;
  2475  000C' 0180'              	clrf	get_longitude@long_index^(0+128)
  2476  000D'                    l173:	
  2477                           ;gps_test.c: 165: for( ; GGA_Buffer[index]!=','; index++){
  2478                           
  2479  000D' 0800'              	movf	get_longitude@index^(0+128),w
  2480  000E' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  2481  000F' 0084               	movwf	4
  2482  0010' 302C               	movlw	44
  2483  0011' 1783               	bsf	3,7	;select IRP bank2
  2484  0012' 0600               	xorwf	0,w
  2485  0013' 1903               	btfsc	3,2
  2486  0014' 2800'              	goto	l5106
  2487                           
  2488                           ;gps_test.c: 166: Long_Buffer[long_index]= GGA_Buffer[index];
  2489  0015' 0800'              	movf	get_longitude@index^(0+128),w
  2490  0016' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  2491  0017' 0084               	movwf	4
  2492  0018' 1783               	bsf	3,7	;select IRP bank2
  2493  0019' 0800               	movf	0,w
  2494  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  2495  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  2496  001C' 00BC'              	movwf	??_get_longitude
  2497  001D' 1683               	bsf	3,5	;RP0=1, select bank1
  2498  001E' 1303               	bcf	3,6	;RP1=0, select bank1
  2499  001F' 0800'              	movf	get_longitude@long_index^(0+128),w
  2500  0020' 3E00'              	addlw	(low (get_longitude@Long_Buffer| 0))& (0+255)
  2501  0021' 0084               	movwf	4
  2502  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  2503  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  2504  0024' 083C'              	movf	??_get_longitude,w
  2505  0025' 1383               	bcf	3,7	;select IRP bank1
  2506  0026' 0080               	movwf	0
  2507                           
  2508                           ;gps_test.c: 167: long_index++;
  2509  0027' 3001               	movlw	1
  2510  0028' 00BC'              	movwf	??_get_longitude
  2511  0029' 083C'              	movf	??_get_longitude,w
  2512  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  2513  002B' 1303               	bcf	3,6	;RP1=0, select bank1
  2514  002C' 0780'              	addwf	get_longitude@long_index^(0+128),f
  2515  002D' 3001               	movlw	1
  2516  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  2517  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  2518  0030' 00BC'              	movwf	??_get_longitude
  2519  0031' 083C'              	movf	??_get_longitude,w
  2520  0032' 1683               	bsf	3,5	;RP0=1, select bank1
  2521  0033' 1303               	bcf	3,6	;RP1=0, select bank1
  2522  0034' 0780'              	addwf	get_longitude@index^(0+128),f
  2523  0035' 2800'              	goto	l173
  2524  0036'                    l5106:	
  2525                           
  2526                           ;gps_test.c: 168: }
  2527                           ;gps_test.c: 169: long_index++;
  2528  0036' 3001               	movlw	1
  2529  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  2530  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  2531  0039' 00BC'              	movwf	??_get_longitude
  2532  003A' 083C'              	movf	??_get_longitude,w
  2533  003B' 1683               	bsf	3,5	;RP0=1, select bank1
  2534  003C' 1303               	bcf	3,6	;RP1=0, select bank1
  2535  003D' 0780'              	addwf	get_longitude@long_index^(0+128),f
  2536                           
  2537                           ;gps_test.c: 170: E_W = GGA_Buffer[long_index];
  2538  003E' 0800'              	movf	get_longitude@long_index^(0+128),w
  2539  003F' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  2540  0040' 0084               	movwf	4
  2541  0041' 0800               	movf	0,w
  2542  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  2543  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  2544  0044' 00BC'              	movwf	??_get_longitude
  2545  0045' 083C'              	movf	??_get_longitude,w
  2546  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  2547  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  2548  0048' 0080'              	movwf	_E_W^(0+128)
  2549                           
  2550                           ;gps_test.c: 171: _longitude = atof(Long_Buffer);
  2551  0049' 3000'              	movlw	(low (get_longitude@Long_Buffer| 0))& (0+255)
  2552  004A' 120A' 118A' 2000'  	fcall	_atof
  2553  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  2554  004E' 1303               	bcf	3,6	;RP1=0, select bank1
  2555  004F' 0800'              	movf	?_atof^(0+128),w
  2556  0050' 0080'              	movwf	get_longitude@_longitude^(0+128)
  2557  0051' 0800'              	movf	(?_atof+1)^(0+128),w
  2558  0052' 0080'              	movwf	(get_longitude@_longitude+1)^(0+128)
  2559  0053' 0800'              	movf	(?_atof+2)^(0+128),w
  2560  0054' 0080'              	movwf	(get_longitude@_longitude+2)^(0+128)
  2561                           
  2562                           ;gps_test.c: 172: return _longitude;
  2563  0055' 0800'              	movf	get_longitude@_longitude^(0+128),w
  2564  0056' 0080'              	movwf	?_get_longitude^(0+128)
  2565  0057' 0800'              	movf	(get_longitude@_longitude+1)^(0+128),w
  2566  0058' 0080'              	movwf	(?_get_longitude+1)^(0+128)
  2567  0059' 0800'              	movf	(get_longitude@_longitude+2)^(0+128),w
  2568  005A' 0080'              	movwf	(?_get_longitude+2)^(0+128)
  2569  005B' 0008               	return
  2570  005C'                    __end_of_get_longitude:	
  2571                           
  2572                           	psect	text5
  2573  0000'                    __ptext5:	
  2574 ;; *************** function _get_latitude *****************
  2575 ;; Defined at:
  2576 ;;		line 140 in file "gps_test.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  lat_pointer     1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  lat_pointer     1   47[BANK1 ] unsigned char 
  2581 ;;  Lat_Buffer     15   29[BANK1 ] unsigned char [15]
  2582 ;;  _latitude       3   44[BANK1 ] float 
  2583 ;;  lat_index       1   49[BANK1 ] unsigned char 
  2584 ;;  index           1   48[BANK1 ] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  3   26[BANK1 ] float 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       3       0       0
  2595 ;;      Locals:         0       0      21       0       0
  2596 ;;      Temps:          0       1       0       0       0
  2597 ;;      Totals:         0       1      24       0       0
  2598 ;;Total ram usage:       25 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    5
  2601 ;; This function calls:
  2602 ;;		_atof
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function _get_latitude
  2610  0000'                    _get_latitude:	
  2611                           
  2612                           ;incstack = 0
  2613                           ; Regs used in _get_latitude: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2614                           ;get_latitude@lat_pointer stored from wreg
  2615  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2616  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2617  0002' 0080'              	movwf	get_latitude@lat_pointer^(0+128)
  2618                           
  2619                           ;gps_test.c: 141: unsigned char lat_index = lat_pointer+1;
  2620  0003' 0800'              	movf	get_latitude@lat_pointer^(0+128),w
  2621  0004' 3E01               	addlw	1
  2622  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  2623  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  2624  0007' 00BC'              	movwf	??_get_latitude
  2625  0008' 083C'              	movf	??_get_latitude,w
  2626  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  2627  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  2628  000B' 0080'              	movwf	get_latitude@lat_index^(0+128)
  2629                           
  2630                           ;gps_test.c: 142: unsigned char index = 0;
  2631  000C' 0180'              	clrf	get_latitude@index^(0+128)
  2632  000D'                    l167:	
  2633                           ;gps_test.c: 143: char Lat_Buffer[15];
  2634                           ;gps_test.c: 144: float _latitude;
  2635                           ;gps_test.c: 147: for(;GGA_Buffer[lat_index]!=',';lat_index++){
  2636                           
  2637  000D' 0800'              	movf	get_latitude@lat_index^(0+128),w
  2638  000E' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  2639  000F' 0084               	movwf	4
  2640  0010' 302C               	movlw	44
  2641  0011' 1783               	bsf	3,7	;select IRP bank2
  2642  0012' 0600               	xorwf	0,w
  2643  0013' 1903               	btfsc	3,2
  2644  0014' 2800'              	goto	l5074
  2645                           
  2646                           ;gps_test.c: 148: Lat_Buffer[index]= GGA_Buffer[lat_index];
  2647  0015' 0800'              	movf	get_latitude@lat_index^(0+128),w
  2648  0016' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  2649  0017' 0084               	movwf	4
  2650  0018' 1783               	bsf	3,7	;select IRP bank2
  2651  0019' 0800               	movf	0,w
  2652  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  2653  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  2654  001C' 00BC'              	movwf	??_get_latitude
  2655  001D' 1683               	bsf	3,5	;RP0=1, select bank1
  2656  001E' 1303               	bcf	3,6	;RP1=0, select bank1
  2657  001F' 0800'              	movf	get_latitude@index^(0+128),w
  2658  0020' 3E00'              	addlw	(low (get_latitude@Lat_Buffer| 0))& (0+255)
  2659  0021' 0084               	movwf	4
  2660  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  2661  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  2662  0024' 083C'              	movf	??_get_latitude,w
  2663  0025' 1383               	bcf	3,7	;select IRP bank1
  2664  0026' 0080               	movwf	0
  2665                           
  2666                           ;gps_test.c: 149: index++;
  2667  0027' 3001               	movlw	1
  2668  0028' 00BC'              	movwf	??_get_latitude
  2669  0029' 083C'              	movf	??_get_latitude,w
  2670  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  2671  002B' 1303               	bcf	3,6	;RP1=0, select bank1
  2672  002C' 0780'              	addwf	get_latitude@index^(0+128),f
  2673  002D' 3001               	movlw	1
  2674  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  2675  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  2676  0030' 00BC'              	movwf	??_get_latitude
  2677  0031' 083C'              	movf	??_get_latitude,w
  2678  0032' 1683               	bsf	3,5	;RP0=1, select bank1
  2679  0033' 1303               	bcf	3,6	;RP1=0, select bank1
  2680  0034' 0780'              	addwf	get_latitude@lat_index^(0+128),f
  2681  0035' 2800'              	goto	l167
  2682  0036'                    l5074:	
  2683                           
  2684                           ;gps_test.c: 150: }
  2685                           ;gps_test.c: 151: lat_index++;
  2686  0036' 3001               	movlw	1
  2687  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  2688  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  2689  0039' 00BC'              	movwf	??_get_latitude
  2690  003A' 083C'              	movf	??_get_latitude,w
  2691  003B' 1683               	bsf	3,5	;RP0=1, select bank1
  2692  003C' 1303               	bcf	3,6	;RP1=0, select bank1
  2693  003D' 0780'              	addwf	get_latitude@lat_index^(0+128),f
  2694                           
  2695                           ;gps_test.c: 152: N_S = GGA_Buffer[lat_index];
  2696  003E' 0800'              	movf	get_latitude@lat_index^(0+128),w
  2697  003F' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  2698  0040' 0084               	movwf	4
  2699  0041' 0800               	movf	0,w
  2700  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  2701  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  2702  0044' 00BC'              	movwf	??_get_latitude
  2703  0045' 083C'              	movf	??_get_latitude,w
  2704  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  2705  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  2706  0048' 0080'              	movwf	_N_S^(0+128)
  2707                           
  2708                           ;gps_test.c: 153: _latitude = atof(Lat_Buffer);
  2709  0049' 3000'              	movlw	(low (get_latitude@Lat_Buffer| 0))& (0+255)
  2710  004A' 120A' 118A' 2000'  	fcall	_atof
  2711  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  2712  004E' 1303               	bcf	3,6	;RP1=0, select bank1
  2713  004F' 0800'              	movf	?_atof^(0+128),w
  2714  0050' 0080'              	movwf	get_latitude@_latitude^(0+128)
  2715  0051' 0800'              	movf	(?_atof+1)^(0+128),w
  2716  0052' 0080'              	movwf	(get_latitude@_latitude+1)^(0+128)
  2717  0053' 0800'              	movf	(?_atof+2)^(0+128),w
  2718  0054' 0080'              	movwf	(get_latitude@_latitude+2)^(0+128)
  2719                           
  2720                           ;gps_test.c: 154: return _latitude;
  2721  0055' 0800'              	movf	get_latitude@_latitude^(0+128),w
  2722  0056' 0080'              	movwf	?_get_latitude^(0+128)
  2723  0057' 0800'              	movf	(get_latitude@_latitude+1)^(0+128),w
  2724  0058' 0080'              	movwf	(?_get_latitude+1)^(0+128)
  2725  0059' 0800'              	movf	(get_latitude@_latitude+2)^(0+128),w
  2726  005A' 0080'              	movwf	(?_get_latitude+2)^(0+128)
  2727  005B' 0008               	return
  2728  005C'                    __end_of_get_latitude:	
  2729                           
  2730                           	psect	text6
  2731  0000'                    __ptext6:	
  2732 ;; *************** function _atof *****************
  2733 ;; Defined at:
  2734 ;;		line 200 in file "D:\mplab\sources\common\atof.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  s               1    wreg     PTR const unsigned char 
  2737 ;;		 -> get_longitude@Long_Buffer(15), get_latitude@Lat_Buffer(15), 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  s               1   59[BANK0 ] PTR const unsigned char 
  2740 ;;		 -> get_longitude@Long_Buffer(15), get_latitude@Lat_Buffer(15), 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  3   22[BANK1 ] PTR const unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       0       4       0       0
  2751 ;;      Locals:         0       1       0       0       0
  2752 ;;      Temps:          0       0       0       0       0
  2753 ;;      Totals:         0       1       4       0       0
  2754 ;;Total ram usage:        5 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    4
  2757 ;; This function calls:
  2758 ;;		_strtod
  2759 ;; This function is called by:
  2760 ;;		_get_latitude
  2761 ;;		_get_longitude
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _atof
  2767  0000'                    _atof:	
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _atof: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2771                           ;atof@s stored from wreg
  2772  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2773  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2774  0002' 00BB'              	movwf	atof@s
  2775  0003' 01B4'              	clrf	strtod@res
  2776  0004' 083B'              	movf	atof@s,w
  2777  0005' 120A' 118A' 2000'  	fcall	_strtod
  2778  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  2779  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  2780  000A' 0834'              	movf	?_strtod,w
  2781  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  2782  000C' 1303               	bcf	3,6	;RP1=0, select bank1
  2783  000D' 0080'              	movwf	?_atof^(0+128)
  2784  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  2785  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  2786  0010' 0835'              	movf	?_strtod+1,w
  2787  0011' 1683               	bsf	3,5	;RP0=1, select bank1
  2788  0012' 1303               	bcf	3,6	;RP1=0, select bank1
  2789  0013' 0080'              	movwf	(?_atof+1)^(0+128)
  2790  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  2791  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  2792  0016' 0836'              	movf	?_strtod+2,w
  2793  0017' 1683               	bsf	3,5	;RP0=1, select bank1
  2794  0018' 1303               	bcf	3,6	;RP1=0, select bank1
  2795  0019' 0080'              	movwf	(?_atof+2)^(0+128)
  2796  001A' 0008               	return
  2797  001B'                    __end_of_atof:	
  2798                           
  2799                           	psect	text7
  2800  0000'                    __ptext7:	
  2801 ;; *************** function _strtod *****************
  2802 ;; Defined at:
  2803 ;;		line 35 in file "D:\mplab\sources\common\atof.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  s               1    wreg     PTR const unsigned char 
  2806 ;;		 -> get_longitude@Long_Buffer(15), get_latitude@Lat_Buffer(15), 
  2807 ;;  res             1   52[BANK0 ] PTR PTR const unsigned c
  2808 ;;		 -> NULL(0), 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  s               1   21[BANK1 ] PTR const unsigned char 
  2811 ;;		 -> get_longitude@Long_Buffer(15), get_latitude@Lat_Buffer(15), 
  2812 ;;  _u              4   17[BANK1 ] struct .
  2813 ;;  expon           1   16[BANK1 ] char 
  2814 ;;  flags           1   15[BANK1 ] unsigned char 
  2815 ;;  eexp            1   14[BANK1 ] char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  3   52[BANK0 ] char 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       3       0       0       0
  2826 ;;      Locals:         0       0      22       0       0
  2827 ;;      Temps:          0       4       0       0       0
  2828 ;;      Totals:         0       7      22       0       0
  2829 ;;Total ram usage:       29 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    3
  2832 ;; This function calls:
  2833 ;;		___altoft
  2834 ;;		___bmul
  2835 ;;		___ftdiv
  2836 ;;		___ftge
  2837 ;;		___ftmul
  2838 ;;		___ftneg
  2839 ;;		___lmul
  2840 ;;		_isdigit
  2841 ;;		_isspace
  2842 ;; This function is called by:
  2843 ;;		_atof
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _strtod
  2849  0000'                    _strtod:	
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _strtod: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2853                           ;strtod@s stored from wreg
  2854  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2855  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2856  0002' 0080'              	movwf	strtod@s^(0+128)
  2857  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  2858  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  2859  0005' 0834'              	movf	strtod@res,w
  2860  0006' 1903               	btfsc	3,2
  2861  0007' 2800'              	goto	l4358
  2862  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  2863  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  2864  000A' 0800'              	movf	strtod@s^(0+128),w
  2865  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  2866  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  2867  000D' 00B7'              	movwf	??_strtod
  2868  000E' 0834'              	movf	strtod@res,w
  2869  000F' 0084               	movwf	4
  2870  0010' 0837'              	movf	??_strtod,w
  2871  0011' 1383               	bcf	3,7	;select IRP bank0
  2872  0012' 0080               	movwf	0
  2873  0013'                    l4358:	
  2874  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  2875  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  2876  0015' 0800'              	movf	strtod@s^(0+128),w
  2877  0016' 0084               	movwf	4
  2878  0017' 1383               	bcf	3,7	;select IRP bank0
  2879  0018' 0800               	movf	0,w
  2880  0019' 0080'              	movwf	strtod@eexp^(0+128)
  2881  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_isspace
  2882  001F' 1C03               	btfss	3,0
  2883  0020' 2800'              	goto	l4360
  2884  0021' 3001               	movlw	1
  2885  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  2886  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  2887  0024' 00B7'              	movwf	??_strtod
  2888  0025' 0837'              	movf	??_strtod,w
  2889  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  2890  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  2891  0028' 0780'              	addwf	strtod@s^(0+128),f
  2892  0029' 2800'              	goto	l4358
  2893  002A'                    l4360:	
  2894  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  2895  002B' 1303               	bcf	3,6	;RP1=0, select bank1
  2896  002C' 0180'              	clrf	strtod@flags^(0+128)
  2897  002D' 302D               	movlw	45
  2898  002E' 0600'              	xorwf	strtod@eexp^(0+128),w
  2899  002F' 1D03               	btfss	3,2
  2900  0030' 2800'              	goto	l4368
  2901  0031' 0180'              	clrf	strtod@flags^(0+128)
  2902  0032' 0A80'              	incf	strtod@flags^(0+128),f
  2903  0033' 2800'              	goto	l4370
  2904  0034'                    l4368:	
  2905  0034' 302B               	movlw	43
  2906  0035' 0600'              	xorwf	strtod@eexp^(0+128),w
  2907  0036' 1D03               	btfss	3,2
  2908  0037' 2800'              	goto	l4372
  2909  0038'                    l4370:	
  2910  0038' 3001               	movlw	1
  2911  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  2912  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  2913  003B' 00B7'              	movwf	??_strtod
  2914  003C' 0837'              	movf	??_strtod,w
  2915  003D' 1683               	bsf	3,5	;RP0=1, select bank1
  2916  003E' 1303               	bcf	3,6	;RP1=0, select bank1
  2917  003F' 0780'              	addwf	strtod@s^(0+128),f
  2918  0040'                    l4372:	
  2919  0040' 0180'              	clrf	strtod@eexp^(0+128)
  2920  0041' 3000               	movlw	0
  2921  0042' 0080'              	movwf	(strtod@_u+3)^(0+128)
  2922  0043' 3000               	movlw	0
  2923  0044' 0080'              	movwf	(strtod@_u+2)^(0+128)
  2924  0045' 3000               	movlw	0
  2925  0046' 0080'              	movwf	(strtod@_u+1)^(0+128)
  2926  0047' 3000               	movlw	0
  2927  0048' 0080'              	movwf	strtod@_u^(0+128)
  2928  0049' 0180'              	clrf	strtod@expon^(0+128)
  2929  004A' 2800'              	goto	l4378
  2930  004B'                    l4380:	
  2931  004B' 0800'              	movf	strtod@s^(0+128),w
  2932  004C' 0084               	movwf	4
  2933  004D' 302E               	movlw	46
  2934  004E' 1383               	bcf	3,7	;select IRP bank0
  2935  004F' 0600               	xorwf	0,w
  2936  0050' 1D03               	btfss	3,2
  2937  0051' 2800'              	goto	l4386
  2938  0052' 1600'              	bsf	strtod@flags^(0+128),4
  2939  0053'                    L1:	
  2940  0053' 3001               	movlw	1
  2941  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  2942  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  2943  0056' 00B7'              	movwf	??_strtod
  2944  0057' 0837'              	movf	??_strtod,w
  2945  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  2946  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  2947  005A' 0780'              	addwf	strtod@s^(0+128),f
  2948  005B'                    l4378:	
  2949  005B' 1E00'              	btfss	strtod@flags^(0+128),4
  2950  005C' 2800'              	goto	l4380
  2951  005D'                    l4386:	
  2952  005D' 0800'              	movf	strtod@s^(0+128),w
  2953  005E' 0084               	movwf	4
  2954  005F' 1383               	bcf	3,7	;select IRP bank0
  2955  0060' 0800               	movf	0,w
  2956  0061' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2957  0066' 1C03               	btfss	3,0
  2958  0067' 2800'              	goto	l4406
  2959  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  2960  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  2961  006A' 1480'              	bsf	strtod@flags^(0+128),1
  2962  006B' 3005               	movlw	5
  2963  006C' 0080'              	movwf	_strtod$598^(0+128)
  2964  006D' 3000               	movlw	0
  2965  006E' 0081'              	movwf	(_strtod$598^(0+128)+1)
  2966  006F' 0800'              	movf	strtod@eexp^(0+128),w
  2967  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  2968  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  2969  0072' 00B7'              	movwf	??_strtod
  2970  0073' 01B8'              	clrf	??_strtod+1
  2971  0074' 1BB7'              	btfsc	??_strtod,7
  2972  0075' 03B8'              	decf	??_strtod+1,f
  2973  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  2974  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  2975  0078' 0800'              	movf	_strtod$598^(0+128),w
  2976  0079' 3E03               	addlw	3
  2977  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  2978  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  2979  007C' 00B9'              	movwf	??_strtod+2
  2980  007D' 1683               	bsf	3,5	;RP0=1, select bank1
  2981  007E' 1303               	bcf	3,6	;RP1=0, select bank1
  2982  007F' 0800'              	movf	(_strtod$598+1)^(0+128),w
  2983  0080' 1803               	skipnc
  2984  0081' 3E01               	addlw	1
  2985  0082' 3E00               	addlw	0
  2986  0083' 1283               	bcf	3,5	;RP0=0, select bank0
  2987  0084' 1303               	bcf	3,6	;RP1=0, select bank0
  2988  0085' 00BA'              	movwf	??_strtod+3
  2989  0086' 0838'              	movf	??_strtod+1,w
  2990  0087' 063A'              	xorwf	??_strtod+3,w
  2991  0088' 1D03               	skipz
  2992  0089' 2800'              	goto	u7085
  2993  008A' 0837'              	movf	??_strtod,w
  2994  008B' 0639'              	xorwf	??_strtod+2,w
  2995  008C'                    u7085:	
  2996  008C' 1903               	skipnz
  2997  008D' 2800'              	goto	l518
  2998  008E' 1683               	bsf	3,5	;RP0=1, select bank1
  2999  008F' 1303               	bcf	3,6	;RP1=0, select bank1
  3000  0090' 1E00'              	btfss	strtod@flags^(0+128),4
  3001  0091' 2800'              	goto	l523
  3002  0092' 30FF               	movlw	255
  3003  0093' 1283               	bcf	3,5	;RP0=0, select bank0
  3004  0094' 1303               	bcf	3,6	;RP1=0, select bank0
  3005  0095' 00B7'              	movwf	??_strtod
  3006  0096' 0837'              	movf	??_strtod,w
  3007  0097' 1683               	bsf	3,5	;RP0=1, select bank1
  3008  0098' 1303               	bcf	3,6	;RP1=0, select bank1
  3009  0099' 0780'              	addwf	strtod@expon^(0+128),f
  3010  009A'                    l523:	
  3011  009A' 3001               	movlw	1
  3012  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  3013  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  3014  009D' 00B7'              	movwf	??_strtod
  3015  009E' 0837'              	movf	??_strtod,w
  3016  009F' 1683               	bsf	3,5	;RP0=1, select bank1
  3017  00A0' 1303               	bcf	3,6	;RP1=0, select bank1
  3018  00A1' 0780'              	addwf	strtod@eexp^(0+128),f
  3019  00A2' 3000               	movlw	0
  3020  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  3021  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  3022  00A5' 0083'              	movwf	___lmul@multiplier+3
  3023  00A6' 3000               	movlw	0
  3024  00A7' 0082'              	movwf	___lmul@multiplier+2
  3025  00A8' 3000               	movlw	0
  3026  00A9' 0081'              	movwf	___lmul@multiplier+1
  3027  00AA' 300A               	movlw	10
  3028  00AB' 0080'              	movwf	___lmul@multiplier
  3029  00AC' 1683               	bsf	3,5	;RP0=1, select bank1
  3030  00AD' 1303               	bcf	3,6	;RP1=0, select bank1
  3031  00AE' 0800'              	movf	(strtod@_u+3)^(0+128),w
  3032  00AF' 1283               	bcf	3,5	;RP0=0, select bank0
  3033  00B0' 1303               	bcf	3,6	;RP1=0, select bank0
  3034  00B1' 0087'              	movwf	___lmul@multiplicand+3
  3035  00B2' 1683               	bsf	3,5	;RP0=1, select bank1
  3036  00B3' 1303               	bcf	3,6	;RP1=0, select bank1
  3037  00B4' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3038  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  3039  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  3040  00B7' 0086'              	movwf	___lmul@multiplicand+2
  3041  00B8' 1683               	bsf	3,5	;RP0=1, select bank1
  3042  00B9' 1303               	bcf	3,6	;RP1=0, select bank1
  3043  00BA' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3044  00BB' 1283               	bcf	3,5	;RP0=0, select bank0
  3045  00BC' 1303               	bcf	3,6	;RP1=0, select bank0
  3046  00BD' 0085'              	movwf	___lmul@multiplicand+1
  3047  00BE' 1683               	bsf	3,5	;RP0=1, select bank1
  3048  00BF' 1303               	bcf	3,6	;RP1=0, select bank1
  3049  00C0' 0800'              	movf	strtod@_u^(0+128),w
  3050  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  3051  00C2' 1303               	bcf	3,6	;RP1=0, select bank0
  3052  00C3' 0084'              	movwf	___lmul@multiplicand
  3053  00C4' 120A' 118A' 2000' 120A' 118A' 	fcall	___lmul
  3054  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
  3055  00CA' 1303               	bcf	3,6	;RP1=0, select bank0
  3056  00CB' 0803'              	movf	?___lmul+3,w
  3057  00CC' 1683               	bsf	3,5	;RP0=1, select bank1
  3058  00CD' 1303               	bcf	3,6	;RP1=0, select bank1
  3059  00CE' 0080'              	movwf	(strtod@_u+3)^(0+128)
  3060  00CF' 1283               	bcf	3,5	;RP0=0, select bank0
  3061  00D0' 1303               	bcf	3,6	;RP1=0, select bank0
  3062  00D1' 0802'              	movf	?___lmul+2,w
  3063  00D2' 1683               	bsf	3,5	;RP0=1, select bank1
  3064  00D3' 1303               	bcf	3,6	;RP1=0, select bank1
  3065  00D4' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3066  00D5' 1283               	bcf	3,5	;RP0=0, select bank0
  3067  00D6' 1303               	bcf	3,6	;RP1=0, select bank0
  3068  00D7' 0801'              	movf	?___lmul+1,w
  3069  00D8' 1683               	bsf	3,5	;RP0=1, select bank1
  3070  00D9' 1303               	bcf	3,6	;RP1=0, select bank1
  3071  00DA' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3072  00DB' 1283               	bcf	3,5	;RP0=0, select bank0
  3073  00DC' 1303               	bcf	3,6	;RP1=0, select bank0
  3074  00DD' 0800'              	movf	?___lmul,w
  3075  00DE' 1683               	bsf	3,5	;RP0=1, select bank1
  3076  00DF' 1303               	bcf	3,6	;RP1=0, select bank1
  3077  00E0' 0080'              	movwf	strtod@_u^(0+128)
  3078  00E1' 0800'              	movf	strtod@s^(0+128),w
  3079  00E2' 0084               	movwf	4
  3080  00E3' 1383               	bcf	3,7	;select IRP bank0
  3081  00E4' 0800               	movf	0,w
  3082  00E5' 3ED0               	addlw	208
  3083  00E6' 1283               	bcf	3,5	;RP0=0, select bank0
  3084  00E7' 1303               	bcf	3,6	;RP1=0, select bank0
  3085  00E8' 00B7'              	movwf	??_strtod
  3086  00E9' 01B8'              	clrf	??_strtod+1
  3087  00EA' 01B9'              	clrf	??_strtod+2
  3088  00EB' 01BA'              	clrf	??_strtod+3
  3089  00EC' 0837'              	movf	??_strtod,w
  3090  00ED' 1683               	bsf	3,5	;RP0=1, select bank1
  3091  00EE' 1303               	bcf	3,6	;RP1=0, select bank1
  3092  00EF' 0780'              	addwf	strtod@_u^(0+128),f
  3093  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
  3094  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
  3095  00F2' 0838'              	movf	??_strtod+1,w
  3096  00F3' 1103               	clrz
  3097  00F4' 1803               	skipnc
  3098  00F5' 3E01               	addlw	1
  3099  00F6' 1903               	skipnz
  3100  00F7' 2800'              	goto	u7101
  3101  00F8' 1683               	bsf	3,5	;RP0=1, select bank1
  3102  00F9' 1303               	bcf	3,6	;RP1=0, select bank1
  3103  00FA' 0780'              	addwf	(strtod@_u+1)^(0+128),f
  3104  00FB'                    u7101:	
  3105  00FB' 1283               	bcf	3,5	;RP0=0, select bank0
  3106  00FC' 1303               	bcf	3,6	;RP1=0, select bank0
  3107  00FD' 0839'              	movf	??_strtod+2,w
  3108  00FE' 1103               	clrz
  3109  00FF' 1803               	skipnc
  3110  0100' 3E01               	addlw	1
  3111  0101' 1903               	skipnz
  3112  0102' 2800'              	goto	u7102
  3113  0103' 1683               	bsf	3,5	;RP0=1, select bank1
  3114  0104' 1303               	bcf	3,6	;RP1=0, select bank1
  3115  0105' 0780'              	addwf	(strtod@_u+2)^(0+128),f
  3116  0106'                    u7102:	
  3117  0106' 1283               	bcf	3,5	;RP0=0, select bank0
  3118  0107' 1303               	bcf	3,6	;RP1=0, select bank0
  3119  0108' 083A'              	movf	??_strtod+3,w
  3120  0109' 1103               	clrz
  3121  010A' 1803               	skipnc
  3122  010B' 3E01               	addlw	1
  3123  010C' 1903               	skipnz
  3124  010D' 2800'              	goto	u7103
  3125  010E' 1683               	bsf	3,5	;RP0=1, select bank1
  3126  010F' 1303               	bcf	3,6	;RP1=0, select bank1
  3127  0110' 0780'              	addwf	(strtod@_u+3)^(0+128),f
  3128  0111'                    u7103:	
  3129  0111' 1283               	bcf	3,5	;RP0=0, select bank0
  3130  0112' 1303               	bcf	3,6	;RP1=0, select bank0
  3131  0113' 1683               	bsf	3,5	;RP0=1, select bank1
  3132  0114' 1303               	bcf	3,6	;RP1=0, select bank1
  3133  0115' 2800'              	goto	L1
  3134  0116'                    l518:	
  3135  0116' 1683               	bsf	3,5	;RP0=1, select bank1
  3136  0117' 1303               	bcf	3,6	;RP1=0, select bank1
  3137  0118' 1A00'              	btfsc	strtod@flags^(0+128),4
  3138  0119' 2800'              	goto	L1
  3139  011A' 3001               	movlw	1
  3140  011B' 1283               	bcf	3,5	;RP0=0, select bank0
  3141  011C' 1303               	bcf	3,6	;RP1=0, select bank0
  3142  011D' 00B7'              	movwf	??_strtod
  3143  011E' 0837'              	movf	??_strtod,w
  3144  011F' 1683               	bsf	3,5	;RP0=1, select bank1
  3145  0120' 1303               	bcf	3,6	;RP1=0, select bank1
  3146  0121' 0780'              	addwf	strtod@expon^(0+128),f
  3147  0122' 2800'              	goto	L1
  3148  0123'                    l4406:	
  3149  0123' 1683               	bsf	3,5	;RP0=1, select bank1
  3150  0124' 1303               	bcf	3,6	;RP1=0, select bank1
  3151  0125' 0180'              	clrf	strtod@eexp^(0+128)
  3152  0126' 0800'              	movf	strtod@s^(0+128),w
  3153  0127' 0084               	movwf	4
  3154  0128' 3065               	movlw	101
  3155  0129' 1383               	bcf	3,7	;select IRP bank0
  3156  012A' 0600               	xorwf	0,w
  3157  012B' 1903               	btfsc	3,2
  3158  012C' 2800'              	goto	l4412
  3159  012D' 0800'              	movf	strtod@s^(0+128),w
  3160  012E' 0084               	movwf	4
  3161  012F' 3045               	movlw	69
  3162  0130' 0600               	xorwf	0,w
  3163  0131' 1D03               	btfss	3,2
  3164  0132' 2800'              	goto	l4446
  3165  0133'                    l4412:	
  3166  0133' 3001               	movlw	1
  3167  0134' 1283               	bcf	3,5	;RP0=0, select bank0
  3168  0135' 1303               	bcf	3,6	;RP1=0, select bank0
  3169  0136' 00B7'              	movwf	??_strtod
  3170  0137' 0837'              	movf	??_strtod,w
  3171  0138' 1683               	bsf	3,5	;RP0=1, select bank1
  3172  0139' 1303               	bcf	3,6	;RP1=0, select bank1
  3173  013A' 0780'              	addwf	strtod@s^(0+128),f
  3174  013B' 0800'              	movf	strtod@s^(0+128),w
  3175  013C' 0084               	movwf	4
  3176  013D' 302D               	movlw	45
  3177  013E' 0600               	xorwf	0,w
  3178  013F' 1D03               	btfss	3,2
  3179  0140' 2800'              	goto	l4418
  3180  0141' 1580'              	bsf	strtod@flags^(0+128),3
  3181  0142' 2800'              	goto	l4422
  3182  0143'                    l4418:	
  3183  0143' 0800'              	movf	strtod@s^(0+128),w
  3184  0144' 0084               	movwf	4
  3185  0145' 302B               	movlw	43
  3186  0146' 0600               	xorwf	0,w
  3187  0147' 1D03               	btfss	3,2
  3188  0148' 2800'              	goto	l4424
  3189  0149'                    l4422:	
  3190  0149' 3001               	movlw	1
  3191  014A' 1283               	bcf	3,5	;RP0=0, select bank0
  3192  014B' 1303               	bcf	3,6	;RP1=0, select bank0
  3193  014C' 00B7'              	movwf	??_strtod
  3194  014D' 0837'              	movf	??_strtod,w
  3195  014E' 1683               	bsf	3,5	;RP0=1, select bank1
  3196  014F' 1303               	bcf	3,6	;RP1=0, select bank1
  3197  0150' 0780'              	addwf	strtod@s^(0+128),f
  3198  0151'                    l4424:	
  3199  0151' 0800'              	movf	strtod@s^(0+128),w
  3200  0152' 0084               	movwf	4
  3201  0153' 3030               	movlw	48
  3202  0154' 0600               	xorwf	0,w
  3203  0155' 1903               	btfsc	3,2
  3204  0156' 2800'              	goto	l4422
  3205  0157' 0800'              	movf	strtod@s^(0+128),w
  3206  0158' 0084               	movwf	4
  3207  0159' 0800               	movf	0,w
  3208  015A' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  3209  015F' 1C03               	btfss	3,0
  3210  0160' 2800'              	goto	l4442
  3211  0161' 1683               	bsf	3,5	;RP0=1, select bank1
  3212  0162' 1303               	bcf	3,6	;RP1=0, select bank1
  3213  0163' 0800'              	movf	strtod@s^(0+128),w
  3214  0164' 0084               	movwf	4
  3215  0165' 1383               	bcf	3,7	;select IRP bank0
  3216  0166' 0800               	movf	0,w
  3217  0167' 3ED0               	addlw	208
  3218  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  3219  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  3220  016A' 00B7'              	movwf	??_strtod
  3221  016B' 0837'              	movf	??_strtod,w
  3222  016C' 1683               	bsf	3,5	;RP0=1, select bank1
  3223  016D' 1303               	bcf	3,6	;RP1=0, select bank1
  3224  016E' 0080'              	movwf	strtod@eexp^(0+128)
  3225  016F' 3001               	movlw	1
  3226  0170' 1283               	bcf	3,5	;RP0=0, select bank0
  3227  0171' 1303               	bcf	3,6	;RP1=0, select bank0
  3228  0172' 00B7'              	movwf	??_strtod
  3229  0173' 0837'              	movf	??_strtod,w
  3230  0174' 1683               	bsf	3,5	;RP0=1, select bank1
  3231  0175' 1303               	bcf	3,6	;RP1=0, select bank1
  3232  0176' 0780'              	addwf	strtod@s^(0+128),f
  3233  0177' 0800'              	movf	strtod@s^(0+128),w
  3234  0178' 0084               	movwf	4
  3235  0179' 0800               	movf	0,w
  3236  017A' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  3237  017F' 1C03               	btfss	3,0
  3238  0180' 2800'              	goto	l4442
  3239  0181' 1683               	bsf	3,5	;RP0=1, select bank1
  3240  0182' 1303               	bcf	3,6	;RP1=0, select bank1
  3241  0183' 0800'              	movf	strtod@s^(0+128),w
  3242  0184' 0084               	movwf	4
  3243  0185' 300A               	movlw	10
  3244  0186' 1283               	bcf	3,5	;RP0=0, select bank0
  3245  0187' 1303               	bcf	3,6	;RP1=0, select bank0
  3246  0188' 00B7'              	movwf	??_strtod
  3247  0189' 0837'              	movf	??_strtod,w
  3248  018A' 0090'              	movwf	___bmul@multiplicand
  3249  018B' 1683               	bsf	3,5	;RP0=1, select bank1
  3250  018C' 1303               	bcf	3,6	;RP1=0, select bank1
  3251  018D' 0800'              	movf	strtod@eexp^(0+128),w
  3252  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  3253  0193' 1383               	bcf	3,7	;select IRP bank0
  3254  0194' 0700               	addwf	0,w
  3255  0195' 3ED0               	addlw	-48
  3256  0196' 1283               	bcf	3,5	;RP0=0, select bank0
  3257  0197' 1303               	bcf	3,6	;RP1=0, select bank0
  3258  0198' 00B8'              	movwf	??_strtod+1
  3259  0199' 0838'              	movf	??_strtod+1,w
  3260  019A' 1683               	bsf	3,5	;RP0=1, select bank1
  3261  019B' 1303               	bcf	3,6	;RP1=0, select bank1
  3262  019C' 0080'              	movwf	strtod@eexp^(0+128)
  3263  019D' 3001               	movlw	1
  3264  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  3265  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  3266  01A0' 00B7'              	movwf	??_strtod
  3267  01A1' 0837'              	movf	??_strtod,w
  3268  01A2' 1683               	bsf	3,5	;RP0=1, select bank1
  3269  01A3' 1303               	bcf	3,6	;RP1=0, select bank1
  3270  01A4' 0780'              	addwf	strtod@s^(0+128),f
  3271  01A5' 0800'              	movf	strtod@s^(0+128),w
  3272  01A6' 0084               	movwf	4
  3273  01A7' 0800               	movf	0,w
  3274  01A8' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  3275  01AD' 1C03               	btfss	3,0
  3276  01AE' 2800'              	goto	l4442
  3277  01AF' 1683               	bsf	3,5	;RP0=1, select bank1
  3278  01B0' 1303               	bcf	3,6	;RP1=0, select bank1
  3279  01B1' 0800'              	movf	strtod@s^(0+128),w
  3280  01B2' 0084               	movwf	4
  3281  01B3' 300A               	movlw	10
  3282  01B4' 1283               	bcf	3,5	;RP0=0, select bank0
  3283  01B5' 1303               	bcf	3,6	;RP1=0, select bank0
  3284  01B6' 00B7'              	movwf	??_strtod
  3285  01B7' 0837'              	movf	??_strtod,w
  3286  01B8' 0090'              	movwf	___bmul@multiplicand
  3287  01B9' 1683               	bsf	3,5	;RP0=1, select bank1
  3288  01BA' 1303               	bcf	3,6	;RP1=0, select bank1
  3289  01BB' 0800'              	movf	strtod@eexp^(0+128),w
  3290  01BC' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  3291  01C1' 1383               	bcf	3,7	;select IRP bank0
  3292  01C2' 0700               	addwf	0,w
  3293  01C3' 3ED0               	addlw	-48
  3294  01C4' 1283               	bcf	3,5	;RP0=0, select bank0
  3295  01C5' 1303               	bcf	3,6	;RP1=0, select bank0
  3296  01C6' 00B8'              	movwf	??_strtod+1
  3297  01C7' 0838'              	movf	??_strtod+1,w
  3298  01C8' 1683               	bsf	3,5	;RP0=1, select bank1
  3299  01C9' 1303               	bcf	3,6	;RP1=0, select bank1
  3300  01CA' 0080'              	movwf	strtod@eexp^(0+128)
  3301  01CB'                    l4442:	
  3302  01CB' 1683               	bsf	3,5	;RP0=1, select bank1
  3303  01CC' 1303               	bcf	3,6	;RP1=0, select bank1
  3304  01CD' 1D80'              	btfss	strtod@flags^(0+128),3
  3305  01CE' 2800'              	goto	l4446
  3306  01CF' 0980'              	comf	strtod@eexp^(0+128),f
  3307  01D0' 0A80'              	incf	strtod@eexp^(0+128),f
  3308  01D1'                    l4446:	
  3309  01D1' 0800'              	movf	strtod@eexp^(0+128),w
  3310  01D2' 1283               	bcf	3,5	;RP0=0, select bank0
  3311  01D3' 1303               	bcf	3,6	;RP1=0, select bank0
  3312  01D4' 00B7'              	movwf	??_strtod
  3313  01D5' 0837'              	movf	??_strtod,w
  3314  01D6' 1683               	bsf	3,5	;RP0=1, select bank1
  3315  01D7' 1303               	bcf	3,6	;RP1=0, select bank1
  3316  01D8' 0780'              	addwf	strtod@expon^(0+128),f
  3317  01D9' 1283               	bcf	3,5	;RP0=0, select bank0
  3318  01DA' 1303               	bcf	3,6	;RP1=0, select bank0
  3319  01DB' 0834'              	movf	strtod@res,w
  3320  01DC' 1903               	btfsc	3,2
  3321  01DD' 2800'              	goto	l4454
  3322  01DE' 1683               	bsf	3,5	;RP0=1, select bank1
  3323  01DF' 1303               	bcf	3,6	;RP1=0, select bank1
  3324  01E0' 1C80'              	btfss	strtod@flags^(0+128),1
  3325  01E1' 2800'              	goto	l4454
  3326  01E2' 0800'              	movf	strtod@s^(0+128),w
  3327  01E3' 1283               	bcf	3,5	;RP0=0, select bank0
  3328  01E4' 1303               	bcf	3,6	;RP1=0, select bank0
  3329  01E5' 00B7'              	movwf	??_strtod
  3330  01E6' 0834'              	movf	strtod@res,w
  3331  01E7' 0084               	movwf	4
  3332  01E8' 0837'              	movf	??_strtod,w
  3333  01E9' 1383               	bcf	3,7	;select IRP bank0
  3334  01EA' 0080               	movwf	0
  3335  01EB'                    l4454:	
  3336  01EB' 1683               	bsf	3,5	;RP0=1, select bank1
  3337  01EC' 1303               	bcf	3,6	;RP1=0, select bank1
  3338  01ED' 0800'              	movf	(strtod@_u+3)^(0+128),w
  3339  01EE' 1283               	bcf	3,5	;RP0=0, select bank0
  3340  01EF' 1303               	bcf	3,6	;RP1=0, select bank0
  3341  01F0' 008B'              	movwf	___altoft@c+3
  3342  01F1' 1683               	bsf	3,5	;RP0=1, select bank1
  3343  01F2' 1303               	bcf	3,6	;RP1=0, select bank1
  3344  01F3' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3345  01F4' 1283               	bcf	3,5	;RP0=0, select bank0
  3346  01F5' 1303               	bcf	3,6	;RP1=0, select bank0
  3347  01F6' 008A'              	movwf	___altoft@c+2
  3348  01F7' 1683               	bsf	3,5	;RP0=1, select bank1
  3349  01F8' 1303               	bcf	3,6	;RP1=0, select bank1
  3350  01F9' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3351  01FA' 1283               	bcf	3,5	;RP0=0, select bank0
  3352  01FB' 1303               	bcf	3,6	;RP1=0, select bank0
  3353  01FC' 0089'              	movwf	___altoft@c+1
  3354  01FD' 1683               	bsf	3,5	;RP0=1, select bank1
  3355  01FE' 1303               	bcf	3,6	;RP1=0, select bank1
  3356  01FF' 0800'              	movf	strtod@_u^(0+128),w
  3357  0200' 1283               	bcf	3,5	;RP0=0, select bank0
  3358  0201' 1303               	bcf	3,6	;RP1=0, select bank0
  3359  0202' 0088'              	movwf	___altoft@c
  3360  0203' 120A' 118A' 2000' 120A' 118A' 	fcall	___altoft
  3361  0208' 1283               	bcf	3,5	;RP0=0, select bank0
  3362  0209' 1303               	bcf	3,6	;RP1=0, select bank0
  3363  020A' 0808'              	movf	?___altoft,w
  3364  020B' 1683               	bsf	3,5	;RP0=1, select bank1
  3365  020C' 1303               	bcf	3,6	;RP1=0, select bank1
  3366  020D' 0080'              	movwf	strtod@_u^(0+128)
  3367  020E' 1283               	bcf	3,5	;RP0=0, select bank0
  3368  020F' 1303               	bcf	3,6	;RP1=0, select bank0
  3369  0210' 0809'              	movf	?___altoft+1,w
  3370  0211' 1683               	bsf	3,5	;RP0=1, select bank1
  3371  0212' 1303               	bcf	3,6	;RP1=0, select bank1
  3372  0213' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3373  0214' 1283               	bcf	3,5	;RP0=0, select bank0
  3374  0215' 1303               	bcf	3,6	;RP1=0, select bank0
  3375  0216' 080A'              	movf	?___altoft+2,w
  3376  0217' 1683               	bsf	3,5	;RP0=1, select bank1
  3377  0218' 1303               	bcf	3,6	;RP1=0, select bank1
  3378  0219' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3379  021A' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3380  021B' 0400'              	iorwf	(strtod@_u+1)^(0+128),w
  3381  021C' 0400'              	iorwf	strtod@_u^(0+128),w
  3382  021D' 1D03               	skipz
  3383  021E' 2800'              	goto	l540
  3384  021F' 3000               	movlw	0
  3385  0220' 1283               	bcf	3,5	;RP0=0, select bank0
  3386  0221' 1303               	bcf	3,6	;RP1=0, select bank0
  3387  0222' 00B4'              	movwf	?_strtod
  3388  0223' 3000               	movlw	0
  3389  0224' 00B5'              	movwf	?_strtod+1
  3390  0225' 3000               	movlw	0
  3391  0226' 00B6'              	movwf	?_strtod+2
  3392  0227' 0008               	return
  3393  0228'                    l540:	
  3394  0228' 1F80'              	btfss	strtod@expon^(0+128),7
  3395  0229' 2800'              	goto	l4500
  3396  022A' 0980'              	comf	strtod@expon^(0+128),f
  3397  022B' 0A80'              	incf	strtod@expon^(0+128),f
  3398  022C'                    l4468:	
  3399  022C' 0800'              	movf	strtod@expon^(0+128),w
  3400  022D' 3A80               	xorlw	128
  3401  022E' 3E76               	addlw	-138
  3402  022F' 1C03               	btfss	3,0
  3403  0230' 2800'              	goto	l4474
  3404  0231' 3003               	movlw	3
  3405  0232' 1283               	bcf	3,5	;RP0=0, select bank0
  3406  0233' 1303               	bcf	3,6	;RP1=0, select bank0
  3407  0234' 00A4'              	movwf	___ftdiv@f2
  3408  0235' 3015               	movlw	21
  3409  0236' 00A5'              	movwf	___ftdiv@f2+1
  3410  0237' 3050               	movlw	80
  3411  0238' 00A6'              	movwf	___ftdiv@f2+2
  3412  0239' 1683               	bsf	3,5	;RP0=1, select bank1
  3413  023A' 1303               	bcf	3,6	;RP1=0, select bank1
  3414  023B' 0800'              	movf	strtod@_u^(0+128),w
  3415  023C' 1283               	bcf	3,5	;RP0=0, select bank0
  3416  023D' 1303               	bcf	3,6	;RP1=0, select bank0
  3417  023E' 00A7'              	movwf	___ftdiv@f1
  3418  023F' 1683               	bsf	3,5	;RP0=1, select bank1
  3419  0240' 1303               	bcf	3,6	;RP1=0, select bank1
  3420  0241' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3421  0242' 1283               	bcf	3,5	;RP0=0, select bank0
  3422  0243' 1303               	bcf	3,6	;RP1=0, select bank0
  3423  0244' 00A8'              	movwf	___ftdiv@f1+1
  3424  0245' 1683               	bsf	3,5	;RP0=1, select bank1
  3425  0246' 1303               	bcf	3,6	;RP1=0, select bank1
  3426  0247' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3427  0248' 1283               	bcf	3,5	;RP0=0, select bank0
  3428  0249' 1303               	bcf	3,6	;RP1=0, select bank0
  3429  024A' 00A9'              	movwf	___ftdiv@f1+2
  3430  024B' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  3431  0250' 1283               	bcf	3,5	;RP0=0, select bank0
  3432  0251' 1303               	bcf	3,6	;RP1=0, select bank0
  3433  0252' 0824'              	movf	?___ftdiv,w
  3434  0253' 1683               	bsf	3,5	;RP0=1, select bank1
  3435  0254' 1303               	bcf	3,6	;RP1=0, select bank1
  3436  0255' 0080'              	movwf	strtod@_u^(0+128)
  3437  0256' 1283               	bcf	3,5	;RP0=0, select bank0
  3438  0257' 1303               	bcf	3,6	;RP1=0, select bank0
  3439  0258' 0825'              	movf	?___ftdiv+1,w
  3440  0259' 1683               	bsf	3,5	;RP0=1, select bank1
  3441  025A' 1303               	bcf	3,6	;RP1=0, select bank1
  3442  025B' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3443  025C' 1283               	bcf	3,5	;RP0=0, select bank0
  3444  025D' 1303               	bcf	3,6	;RP1=0, select bank0
  3445  025E' 0826'              	movf	?___ftdiv+2,w
  3446  025F' 1683               	bsf	3,5	;RP0=1, select bank1
  3447  0260' 1303               	bcf	3,6	;RP1=0, select bank1
  3448  0261' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3449  0262' 30F6               	movlw	246
  3450  0263' 1283               	bcf	3,5	;RP0=0, select bank0
  3451  0264' 1303               	bcf	3,6	;RP1=0, select bank0
  3452  0265' 00B7'              	movwf	??_strtod
  3453  0266' 0837'              	movf	??_strtod,w
  3454  0267' 1683               	bsf	3,5	;RP0=1, select bank1
  3455  0268' 1303               	bcf	3,6	;RP1=0, select bank1
  3456  0269' 0780'              	addwf	strtod@expon^(0+128),f
  3457  026A' 2800'              	goto	l4468
  3458  026B'                    l4470:	
  3459  026B' 3000               	movlw	0
  3460  026C' 1283               	bcf	3,5	;RP0=0, select bank0
  3461  026D' 1303               	bcf	3,6	;RP1=0, select bank0
  3462  026E' 00A4'              	movwf	___ftdiv@f2
  3463  026F' 3020               	movlw	32
  3464  0270' 00A5'              	movwf	___ftdiv@f2+1
  3465  0271' 3041               	movlw	65
  3466  0272' 00A6'              	movwf	___ftdiv@f2+2
  3467  0273' 1683               	bsf	3,5	;RP0=1, select bank1
  3468  0274' 1303               	bcf	3,6	;RP1=0, select bank1
  3469  0275' 0800'              	movf	strtod@_u^(0+128),w
  3470  0276' 1283               	bcf	3,5	;RP0=0, select bank0
  3471  0277' 1303               	bcf	3,6	;RP1=0, select bank0
  3472  0278' 00A7'              	movwf	___ftdiv@f1
  3473  0279' 1683               	bsf	3,5	;RP0=1, select bank1
  3474  027A' 1303               	bcf	3,6	;RP1=0, select bank1
  3475  027B' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3476  027C' 1283               	bcf	3,5	;RP0=0, select bank0
  3477  027D' 1303               	bcf	3,6	;RP1=0, select bank0
  3478  027E' 00A8'              	movwf	___ftdiv@f1+1
  3479  027F' 1683               	bsf	3,5	;RP0=1, select bank1
  3480  0280' 1303               	bcf	3,6	;RP1=0, select bank1
  3481  0281' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3482  0282' 1283               	bcf	3,5	;RP0=0, select bank0
  3483  0283' 1303               	bcf	3,6	;RP1=0, select bank0
  3484  0284' 00A9'              	movwf	___ftdiv@f1+2
  3485  0285' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  3486  028A' 1283               	bcf	3,5	;RP0=0, select bank0
  3487  028B' 1303               	bcf	3,6	;RP1=0, select bank0
  3488  028C' 0824'              	movf	?___ftdiv,w
  3489  028D' 1683               	bsf	3,5	;RP0=1, select bank1
  3490  028E' 1303               	bcf	3,6	;RP1=0, select bank1
  3491  028F' 0080'              	movwf	strtod@_u^(0+128)
  3492  0290' 1283               	bcf	3,5	;RP0=0, select bank0
  3493  0291' 1303               	bcf	3,6	;RP1=0, select bank0
  3494  0292' 0825'              	movf	?___ftdiv+1,w
  3495  0293' 1683               	bsf	3,5	;RP0=1, select bank1
  3496  0294' 1303               	bcf	3,6	;RP1=0, select bank1
  3497  0295' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3498  0296' 1283               	bcf	3,5	;RP0=0, select bank0
  3499  0297' 1303               	bcf	3,6	;RP1=0, select bank0
  3500  0298' 0826'              	movf	?___ftdiv+2,w
  3501  0299' 1683               	bsf	3,5	;RP0=1, select bank1
  3502  029A' 1303               	bcf	3,6	;RP1=0, select bank1
  3503  029B' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3504  029C' 30FF               	movlw	255
  3505  029D' 1283               	bcf	3,5	;RP0=0, select bank0
  3506  029E' 1303               	bcf	3,6	;RP1=0, select bank0
  3507  029F' 00B7'              	movwf	??_strtod
  3508  02A0' 0837'              	movf	??_strtod,w
  3509  02A1' 1683               	bsf	3,5	;RP0=1, select bank1
  3510  02A2' 1303               	bcf	3,6	;RP1=0, select bank1
  3511  02A3' 0780'              	addwf	strtod@expon^(0+128),f
  3512  02A4'                    l4474:	
  3513  02A4' 0800'              	movf	strtod@expon^(0+128),w
  3514  02A5' 1D03               	btfss	3,2
  3515  02A6' 2800'              	goto	l4470
  3516  02A7' 3000               	movlw	0
  3517  02A8' 0080'              	movwf	_strtod$599^(0+128)
  3518  02A9' 3080               	movlw	128
  3519  02AA' 0080'              	movwf	(_strtod$599+1)^(0+128)
  3520  02AB' 3000               	movlw	0
  3521  02AC' 0080'              	movwf	(_strtod$599+2)^(0+128)
  3522  02AD' 0800'              	movf	strtod@_u^(0+128),w
  3523  02AE' 1283               	bcf	3,5	;RP0=0, select bank0
  3524  02AF' 1303               	bcf	3,6	;RP1=0, select bank0
  3525  02B0' 0080'              	movwf	___ftge@ff1
  3526  02B1' 1683               	bsf	3,5	;RP0=1, select bank1
  3527  02B2' 1303               	bcf	3,6	;RP1=0, select bank1
  3528  02B3' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3529  02B4' 1283               	bcf	3,5	;RP0=0, select bank0
  3530  02B5' 1303               	bcf	3,6	;RP1=0, select bank0
  3531  02B6' 0081'              	movwf	___ftge@ff1+1
  3532  02B7' 1683               	bsf	3,5	;RP0=1, select bank1
  3533  02B8' 1303               	bcf	3,6	;RP1=0, select bank1
  3534  02B9' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3535  02BA' 1283               	bcf	3,5	;RP0=0, select bank0
  3536  02BB' 1303               	bcf	3,6	;RP1=0, select bank0
  3537  02BC' 0082'              	movwf	___ftge@ff1+2
  3538  02BD' 1683               	bsf	3,5	;RP0=1, select bank1
  3539  02BE' 1303               	bcf	3,6	;RP1=0, select bank1
  3540  02BF' 0800'              	movf	_strtod$599^(0+128),w
  3541  02C0' 1283               	bcf	3,5	;RP0=0, select bank0
  3542  02C1' 1303               	bcf	3,6	;RP1=0, select bank0
  3543  02C2' 0083'              	movwf	___ftge@ff2
  3544  02C3' 1683               	bsf	3,5	;RP0=1, select bank1
  3545  02C4' 1303               	bcf	3,6	;RP1=0, select bank1
  3546  02C5' 0800'              	movf	(_strtod$599+1)^(0+128),w
  3547  02C6' 1283               	bcf	3,5	;RP0=0, select bank0
  3548  02C7' 1303               	bcf	3,6	;RP1=0, select bank0
  3549  02C8' 0084'              	movwf	___ftge@ff2+1
  3550  02C9' 1683               	bsf	3,5	;RP0=1, select bank1
  3551  02CA' 1303               	bcf	3,6	;RP1=0, select bank1
  3552  02CB' 0800'              	movf	(_strtod$599+2)^(0+128),w
  3553  02CC' 1283               	bcf	3,5	;RP0=0, select bank0
  3554  02CD' 1303               	bcf	3,6	;RP1=0, select bank0
  3555  02CE' 0085'              	movwf	___ftge@ff2+2
  3556  02CF' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  3557  02D4' 1803               	btfsc	3,0
  3558  02D5' 2800'              	goto	l563
  3559  02D6' 1683               	bsf	3,5	;RP0=1, select bank1
  3560  02D7' 1303               	bcf	3,6	;RP1=0, select bank1
  3561  02D8' 1C00'              	btfss	strtod@flags^(0+128),0
  3562  02D9' 2800'              	goto	l4496
  3563  02DA' 3000               	movlw	0
  3564  02DB' 0080'              	movwf	_strtod$600^(0+128)
  3565  02DC' 3080               	movlw	128
  3566  02DD' 0080'              	movwf	(_strtod$600+1)^(0+128)
  3567  02DE' 3000               	movlw	0
  3568  02DF' 0080'              	movwf	(_strtod$600+2)^(0+128)
  3569  02E0' 0800'              	movf	_strtod$600^(0+128),w
  3570  02E1' 1283               	bcf	3,5	;RP0=0, select bank0
  3571  02E2' 1303               	bcf	3,6	;RP1=0, select bank0
  3572  02E3' 00A4'              	movwf	___ftneg@f1
  3573  02E4' 1683               	bsf	3,5	;RP0=1, select bank1
  3574  02E5' 1303               	bcf	3,6	;RP1=0, select bank1
  3575  02E6' 0800'              	movf	(_strtod$600+1)^(0+128),w
  3576  02E7' 1283               	bcf	3,5	;RP0=0, select bank0
  3577  02E8' 1303               	bcf	3,6	;RP1=0, select bank0
  3578  02E9' 00A5'              	movwf	___ftneg@f1+1
  3579  02EA' 1683               	bsf	3,5	;RP0=1, select bank1
  3580  02EB' 1303               	bcf	3,6	;RP1=0, select bank1
  3581  02EC' 0800'              	movf	(_strtod$600+2)^(0+128),w
  3582  02ED' 1283               	bcf	3,5	;RP0=0, select bank0
  3583  02EE' 1303               	bcf	3,6	;RP1=0, select bank0
  3584  02EF' 00A6'              	movwf	___ftneg@f1+2
  3585  02F0' 120A' 118A' 2000'  	fcall	___ftneg
  3586  02F3' 1283               	bcf	3,5	;RP0=0, select bank0
  3587  02F4' 1303               	bcf	3,6	;RP1=0, select bank0
  3588  02F5' 0824'              	movf	?___ftneg,w
  3589  02F6' 00B4'              	movwf	?_strtod
  3590  02F7' 0825'              	movf	?___ftneg+1,w
  3591  02F8' 00B5'              	movwf	?_strtod+1
  3592  02F9' 0826'              	movf	?___ftneg+2,w
  3593  02FA' 00B6'              	movwf	?_strtod+2
  3594  02FB' 0008               	return
  3595  02FC'                    l4496:	
  3596  02FC' 3000               	movlw	0
  3597  02FD' 1283               	bcf	3,5	;RP0=0, select bank0
  3598  02FE' 00B4'              	movwf	?_strtod
  3599  02FF' 3080               	movlw	128
  3600  0300' 00B5'              	movwf	?_strtod+1
  3601  0301' 3000               	movlw	0
  3602  0302' 00B6'              	movwf	?_strtod+2
  3603  0303' 0008               	return
  3604  0304'                    l4500:	
  3605  0304' 1683               	bsf	3,5	;RP0=1, select bank1
  3606  0305' 1303               	bcf	3,6	;RP1=0, select bank1
  3607  0306' 0800'              	movf	strtod@expon^(0+128),w
  3608  0307' 3A80               	xorlw	128
  3609  0308' 3E7F               	addlw	-129
  3610  0309' 1803               	btfsc	3,0
  3611  030A' 2800'              	goto	l4508
  3612  030B' 2800'              	goto	l563
  3613  030C'                    l4504:	
  3614  030C' 3003               	movlw	3
  3615  030D' 1283               	bcf	3,5	;RP0=0, select bank0
  3616  030E' 1303               	bcf	3,6	;RP1=0, select bank0
  3617  030F' 0094'              	movwf	___ftmul@f1
  3618  0310' 3015               	movlw	21
  3619  0311' 0095'              	movwf	___ftmul@f1+1
  3620  0312' 3050               	movlw	80
  3621  0313' 0096'              	movwf	___ftmul@f1+2
  3622  0314' 1683               	bsf	3,5	;RP0=1, select bank1
  3623  0315' 1303               	bcf	3,6	;RP1=0, select bank1
  3624  0316' 0800'              	movf	strtod@_u^(0+128),w
  3625  0317' 1283               	bcf	3,5	;RP0=0, select bank0
  3626  0318' 1303               	bcf	3,6	;RP1=0, select bank0
  3627  0319' 0097'              	movwf	___ftmul@f2
  3628  031A' 1683               	bsf	3,5	;RP0=1, select bank1
  3629  031B' 1303               	bcf	3,6	;RP1=0, select bank1
  3630  031C' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3631  031D' 1283               	bcf	3,5	;RP0=0, select bank0
  3632  031E' 1303               	bcf	3,6	;RP1=0, select bank0
  3633  031F' 0098'              	movwf	___ftmul@f2+1
  3634  0320' 1683               	bsf	3,5	;RP0=1, select bank1
  3635  0321' 1303               	bcf	3,6	;RP1=0, select bank1
  3636  0322' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3637  0323' 1283               	bcf	3,5	;RP0=0, select bank0
  3638  0324' 1303               	bcf	3,6	;RP1=0, select bank0
  3639  0325' 0099'              	movwf	___ftmul@f2+2
  3640  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  3641  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  3642  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  3643  032D' 0814'              	movf	?___ftmul,w
  3644  032E' 1683               	bsf	3,5	;RP0=1, select bank1
  3645  032F' 1303               	bcf	3,6	;RP1=0, select bank1
  3646  0330' 0080'              	movwf	strtod@_u^(0+128)
  3647  0331' 1283               	bcf	3,5	;RP0=0, select bank0
  3648  0332' 1303               	bcf	3,6	;RP1=0, select bank0
  3649  0333' 0815'              	movf	?___ftmul+1,w
  3650  0334' 1683               	bsf	3,5	;RP0=1, select bank1
  3651  0335' 1303               	bcf	3,6	;RP1=0, select bank1
  3652  0336' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3653  0337' 1283               	bcf	3,5	;RP0=0, select bank0
  3654  0338' 1303               	bcf	3,6	;RP1=0, select bank0
  3655  0339' 0816'              	movf	?___ftmul+2,w
  3656  033A' 1683               	bsf	3,5	;RP0=1, select bank1
  3657  033B' 1303               	bcf	3,6	;RP1=0, select bank1
  3658  033C' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3659  033D' 30F6               	movlw	246
  3660  033E' 1283               	bcf	3,5	;RP0=0, select bank0
  3661  033F' 1303               	bcf	3,6	;RP1=0, select bank0
  3662  0340' 00B7'              	movwf	??_strtod
  3663  0341' 0837'              	movf	??_strtod,w
  3664  0342' 1683               	bsf	3,5	;RP0=1, select bank1
  3665  0343' 1303               	bcf	3,6	;RP1=0, select bank1
  3666  0344' 0780'              	addwf	strtod@expon^(0+128),f
  3667  0345'                    l4508:	
  3668  0345' 300A               	movlw	10
  3669  0346' 0200'              	subwf	strtod@expon^(0+128),w
  3670  0347' 1C03               	btfss	3,0
  3671  0348' 2800'              	goto	l4514
  3672  0349' 2800'              	goto	l4504
  3673  034A'                    l4510:	
  3674  034A' 3000               	movlw	0
  3675  034B' 1283               	bcf	3,5	;RP0=0, select bank0
  3676  034C' 1303               	bcf	3,6	;RP1=0, select bank0
  3677  034D' 0094'              	movwf	___ftmul@f1
  3678  034E' 3020               	movlw	32
  3679  034F' 0095'              	movwf	___ftmul@f1+1
  3680  0350' 3041               	movlw	65
  3681  0351' 0096'              	movwf	___ftmul@f1+2
  3682  0352' 1683               	bsf	3,5	;RP0=1, select bank1
  3683  0353' 1303               	bcf	3,6	;RP1=0, select bank1
  3684  0354' 0800'              	movf	strtod@_u^(0+128),w
  3685  0355' 1283               	bcf	3,5	;RP0=0, select bank0
  3686  0356' 1303               	bcf	3,6	;RP1=0, select bank0
  3687  0357' 0097'              	movwf	___ftmul@f2
  3688  0358' 1683               	bsf	3,5	;RP0=1, select bank1
  3689  0359' 1303               	bcf	3,6	;RP1=0, select bank1
  3690  035A' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3691  035B' 1283               	bcf	3,5	;RP0=0, select bank0
  3692  035C' 1303               	bcf	3,6	;RP1=0, select bank0
  3693  035D' 0098'              	movwf	___ftmul@f2+1
  3694  035E' 1683               	bsf	3,5	;RP0=1, select bank1
  3695  035F' 1303               	bcf	3,6	;RP1=0, select bank1
  3696  0360' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3697  0361' 1283               	bcf	3,5	;RP0=0, select bank0
  3698  0362' 1303               	bcf	3,6	;RP1=0, select bank0
  3699  0363' 0099'              	movwf	___ftmul@f2+2
  3700  0364' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  3701  0369' 1283               	bcf	3,5	;RP0=0, select bank0
  3702  036A' 1303               	bcf	3,6	;RP1=0, select bank0
  3703  036B' 0814'              	movf	?___ftmul,w
  3704  036C' 1683               	bsf	3,5	;RP0=1, select bank1
  3705  036D' 1303               	bcf	3,6	;RP1=0, select bank1
  3706  036E' 0080'              	movwf	strtod@_u^(0+128)
  3707  036F' 1283               	bcf	3,5	;RP0=0, select bank0
  3708  0370' 1303               	bcf	3,6	;RP1=0, select bank0
  3709  0371' 0815'              	movf	?___ftmul+1,w
  3710  0372' 1683               	bsf	3,5	;RP0=1, select bank1
  3711  0373' 1303               	bcf	3,6	;RP1=0, select bank1
  3712  0374' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3713  0375' 1283               	bcf	3,5	;RP0=0, select bank0
  3714  0376' 1303               	bcf	3,6	;RP1=0, select bank0
  3715  0377' 0816'              	movf	?___ftmul+2,w
  3716  0378' 1683               	bsf	3,5	;RP0=1, select bank1
  3717  0379' 1303               	bcf	3,6	;RP1=0, select bank1
  3718  037A' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3719  037B' 30FF               	movlw	255
  3720  037C' 1283               	bcf	3,5	;RP0=0, select bank0
  3721  037D' 1303               	bcf	3,6	;RP1=0, select bank0
  3722  037E' 00B7'              	movwf	??_strtod
  3723  037F' 0837'              	movf	??_strtod,w
  3724  0380' 1683               	bsf	3,5	;RP0=1, select bank1
  3725  0381' 1303               	bcf	3,6	;RP1=0, select bank1
  3726  0382' 0780'              	addwf	strtod@expon^(0+128),f
  3727  0383'                    l4514:	
  3728  0383' 0800'              	movf	strtod@expon^(0+128),w
  3729  0384' 1D03               	btfss	3,2
  3730  0385' 2800'              	goto	l4510
  3731  0386' 30FF               	movlw	255
  3732  0387' 0080'              	movwf	_strtod$601^(0+128)
  3733  0388' 307F               	movlw	127
  3734  0389' 0080'              	movwf	(_strtod$601+1)^(0+128)
  3735  038A' 307F               	movlw	127
  3736  038B' 0080'              	movwf	(_strtod$601+2)^(0+128)
  3737  038C' 0800'              	movf	_strtod$601^(0+128),w
  3738  038D' 1283               	bcf	3,5	;RP0=0, select bank0
  3739  038E' 1303               	bcf	3,6	;RP1=0, select bank0
  3740  038F' 0080'              	movwf	___ftge@ff1
  3741  0390' 1683               	bsf	3,5	;RP0=1, select bank1
  3742  0391' 1303               	bcf	3,6	;RP1=0, select bank1
  3743  0392' 0800'              	movf	(_strtod$601+1)^(0+128),w
  3744  0393' 1283               	bcf	3,5	;RP0=0, select bank0
  3745  0394' 1303               	bcf	3,6	;RP1=0, select bank0
  3746  0395' 0081'              	movwf	___ftge@ff1+1
  3747  0396' 1683               	bsf	3,5	;RP0=1, select bank1
  3748  0397' 1303               	bcf	3,6	;RP1=0, select bank1
  3749  0398' 0800'              	movf	(_strtod$601+2)^(0+128),w
  3750  0399' 1283               	bcf	3,5	;RP0=0, select bank0
  3751  039A' 1303               	bcf	3,6	;RP1=0, select bank0
  3752  039B' 0082'              	movwf	___ftge@ff1+2
  3753  039C' 1683               	bsf	3,5	;RP0=1, select bank1
  3754  039D' 1303               	bcf	3,6	;RP1=0, select bank1
  3755  039E' 0800'              	movf	strtod@_u^(0+128),w
  3756  039F' 1283               	bcf	3,5	;RP0=0, select bank0
  3757  03A0' 1303               	bcf	3,6	;RP1=0, select bank0
  3758  03A1' 0083'              	movwf	___ftge@ff2
  3759  03A2' 1683               	bsf	3,5	;RP0=1, select bank1
  3760  03A3' 1303               	bcf	3,6	;RP1=0, select bank1
  3761  03A4' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3762  03A5' 1283               	bcf	3,5	;RP0=0, select bank0
  3763  03A6' 1303               	bcf	3,6	;RP1=0, select bank0
  3764  03A7' 0084'              	movwf	___ftge@ff2+1
  3765  03A8' 1683               	bsf	3,5	;RP0=1, select bank1
  3766  03A9' 1303               	bcf	3,6	;RP1=0, select bank1
  3767  03AA' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3768  03AB' 1283               	bcf	3,5	;RP0=0, select bank0
  3769  03AC' 1303               	bcf	3,6	;RP1=0, select bank0
  3770  03AD' 0085'              	movwf	___ftge@ff2+2
  3771  03AE' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  3772  03B3' 1803               	btfsc	3,0
  3773  03B4' 2800'              	goto	l563
  3774  03B5' 1683               	bsf	3,5	;RP0=1, select bank1
  3775  03B6' 1303               	bcf	3,6	;RP1=0, select bank1
  3776  03B7' 1C00'              	btfss	strtod@flags^(0+128),0
  3777  03B8' 2800'              	goto	l4536
  3778  03B9' 3000               	movlw	0
  3779  03BA' 0080'              	movwf	_strtod$602^(0+128)
  3780  03BB' 3080               	movlw	128
  3781  03BC' 0080'              	movwf	(_strtod$602+1)^(0+128)
  3782  03BD' 3000               	movlw	0
  3783  03BE' 0080'              	movwf	(_strtod$602+2)^(0+128)
  3784  03BF' 0800'              	movf	_strtod$602^(0+128),w
  3785  03C0' 1283               	bcf	3,5	;RP0=0, select bank0
  3786  03C1' 1303               	bcf	3,6	;RP1=0, select bank0
  3787  03C2' 00A4'              	movwf	___ftneg@f1
  3788  03C3' 1683               	bsf	3,5	;RP0=1, select bank1
  3789  03C4' 1303               	bcf	3,6	;RP1=0, select bank1
  3790  03C5' 0800'              	movf	(_strtod$602+1)^(0+128),w
  3791  03C6' 1283               	bcf	3,5	;RP0=0, select bank0
  3792  03C7' 1303               	bcf	3,6	;RP1=0, select bank0
  3793  03C8' 00A5'              	movwf	___ftneg@f1+1
  3794  03C9' 1683               	bsf	3,5	;RP0=1, select bank1
  3795  03CA' 1303               	bcf	3,6	;RP1=0, select bank1
  3796  03CB' 0800'              	movf	(_strtod$602+2)^(0+128),w
  3797  03CC' 1283               	bcf	3,5	;RP0=0, select bank0
  3798  03CD' 1303               	bcf	3,6	;RP1=0, select bank0
  3799  03CE' 00A6'              	movwf	___ftneg@f1+2
  3800  03CF' 120A' 118A' 2000'  	fcall	___ftneg
  3801  03D2' 1283               	bcf	3,5	;RP0=0, select bank0
  3802  03D3' 1303               	bcf	3,6	;RP1=0, select bank0
  3803  03D4' 0824'              	movf	?___ftneg,w
  3804  03D5' 00B4'              	movwf	?_strtod
  3805  03D6' 0825'              	movf	?___ftneg+1,w
  3806  03D7' 00B5'              	movwf	?_strtod+1
  3807  03D8' 0826'              	movf	?___ftneg+2,w
  3808  03D9' 00B6'              	movwf	?_strtod+2
  3809  03DA' 0008               	return
  3810  03DB'                    l4536:	
  3811  03DB' 3000               	movlw	0
  3812  03DC' 1283               	bcf	3,5	;RP0=0, select bank0
  3813  03DD' 00B4'              	movwf	?_strtod
  3814  03DE' 3080               	movlw	128
  3815  03DF' 00B5'              	movwf	?_strtod+1
  3816  03E0' 3000               	movlw	0
  3817  03E1' 00B6'              	movwf	?_strtod+2
  3818  03E2' 0008               	return
  3819  03E3'                    l563:	
  3820  03E3' 1683               	bsf	3,5	;RP0=1, select bank1
  3821  03E4' 1303               	bcf	3,6	;RP1=0, select bank1
  3822  03E5' 1C00'              	btfss	strtod@flags^(0+128),0
  3823  03E6' 2800'              	goto	l4542
  3824  03E7' 0800'              	movf	strtod@_u^(0+128),w
  3825  03E8' 1283               	bcf	3,5	;RP0=0, select bank0
  3826  03E9' 1303               	bcf	3,6	;RP1=0, select bank0
  3827  03EA' 00A4'              	movwf	___ftneg@f1
  3828  03EB' 1683               	bsf	3,5	;RP0=1, select bank1
  3829  03EC' 1303               	bcf	3,6	;RP1=0, select bank1
  3830  03ED' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3831  03EE' 1283               	bcf	3,5	;RP0=0, select bank0
  3832  03EF' 1303               	bcf	3,6	;RP1=0, select bank0
  3833  03F0' 00A5'              	movwf	___ftneg@f1+1
  3834  03F1' 1683               	bsf	3,5	;RP0=1, select bank1
  3835  03F2' 1303               	bcf	3,6	;RP1=0, select bank1
  3836  03F3' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3837  03F4' 1283               	bcf	3,5	;RP0=0, select bank0
  3838  03F5' 1303               	bcf	3,6	;RP1=0, select bank0
  3839  03F6' 00A6'              	movwf	___ftneg@f1+2
  3840  03F7' 120A' 118A' 2000'  	fcall	___ftneg
  3841  03FA' 1283               	bcf	3,5	;RP0=0, select bank0
  3842  03FB' 1303               	bcf	3,6	;RP1=0, select bank0
  3843  03FC' 0824'              	movf	?___ftneg,w
  3844  03FD' 1683               	bsf	3,5	;RP0=1, select bank1
  3845  03FE' 1303               	bcf	3,6	;RP1=0, select bank1
  3846  03FF' 0080'              	movwf	strtod@_u^(0+128)
  3847  0400' 1283               	bcf	3,5	;RP0=0, select bank0
  3848  0401' 1303               	bcf	3,6	;RP1=0, select bank0
  3849  0402' 0825'              	movf	?___ftneg+1,w
  3850  0403' 1683               	bsf	3,5	;RP0=1, select bank1
  3851  0404' 1303               	bcf	3,6	;RP1=0, select bank1
  3852  0405' 0080'              	movwf	(strtod@_u+1)^(0+128)
  3853  0406' 1283               	bcf	3,5	;RP0=0, select bank0
  3854  0407' 1303               	bcf	3,6	;RP1=0, select bank0
  3855  0408' 0826'              	movf	?___ftneg+2,w
  3856  0409' 1683               	bsf	3,5	;RP0=1, select bank1
  3857  040A' 1303               	bcf	3,6	;RP1=0, select bank1
  3858  040B' 0080'              	movwf	(strtod@_u+2)^(0+128)
  3859  040C'                    l4542:	
  3860  040C' 0800'              	movf	strtod@_u^(0+128),w
  3861  040D' 1283               	bcf	3,5	;RP0=0, select bank0
  3862  040E' 1303               	bcf	3,6	;RP1=0, select bank0
  3863  040F' 00B4'              	movwf	?_strtod
  3864  0410' 1683               	bsf	3,5	;RP0=1, select bank1
  3865  0411' 1303               	bcf	3,6	;RP1=0, select bank1
  3866  0412' 0800'              	movf	(strtod@_u+1)^(0+128),w
  3867  0413' 1283               	bcf	3,5	;RP0=0, select bank0
  3868  0414' 1303               	bcf	3,6	;RP1=0, select bank0
  3869  0415' 00B5'              	movwf	?_strtod+1
  3870  0416' 1683               	bsf	3,5	;RP0=1, select bank1
  3871  0417' 1303               	bcf	3,6	;RP1=0, select bank1
  3872  0418' 0800'              	movf	(strtod@_u+2)^(0+128),w
  3873  0419' 1283               	bcf	3,5	;RP0=0, select bank0
  3874  041A' 1303               	bcf	3,6	;RP1=0, select bank0
  3875  041B' 00B6'              	movwf	?_strtod+2
  3876  041C' 0008               	return
  3877  041D'                    __end_of_strtod:	
  3878                           
  3879                           	psect	text8
  3880  0000'                    __ptext8:	
  3881 ;; *************** function _isspace *****************
  3882 ;; Defined at:
  3883 ;;		line 8 in file "D:\mplab\sources\common\isspace.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  c               1    wreg     unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  c               1    1[BANK0 ] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;		None               void
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3897 ;;      Params:         0       0       0       0       0
  3898 ;;      Locals:         0       2       0       0       0
  3899 ;;      Temps:          0       0       0       0       0
  3900 ;;      Totals:         0       2       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    1
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_strtod
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function _isspace
  3913  0000'                    _isspace:	
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _isspace: [wreg+status,2+status,0]
  3917                           ;isspace@c stored from wreg
  3918  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3919  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3920  0002' 0081'              	movwf	isspace@c
  3921  0003' 0180'              	clrf	_isspace$690
  3922  0004' 0A80'              	incf	_isspace$690,f
  3923  0005' 3020               	movlw	32
  3924  0006' 0601'              	xorwf	isspace@c,w
  3925  0007' 1903               	btfsc	3,2
  3926  0008' 2800'              	goto	l3896
  3927  0009' 300E               	movlw	14
  3928  000A' 0201'              	subwf	isspace@c,w
  3929  000B' 1803               	skipnc
  3930  000C' 2800'              	goto	l3894
  3931  000D' 3009               	movlw	9
  3932  000E' 0201'              	subwf	isspace@c,w
  3933  000F' 1803               	skipnc
  3934  0010' 2800'              	goto	l3896
  3935  0011'                    l3894:	
  3936  0011' 0180'              	clrf	_isspace$690
  3937  0012'                    l3896:	
  3938  0012' 0C00'              	rrf	_isspace$690,w
  3939  0013' 0008               	return
  3940  0014'                    __end_of_isspace:	
  3941                           
  3942                           	psect	text9
  3943  0000'                    __ptext9:	
  3944 ;; *************** function ___altoft *****************
  3945 ;; Defined at:
  3946 ;;		line 42 in file "D:\mplab\sources\common\altoft.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  c               4    8[BANK0 ] long 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  sign            1   15[BANK0 ] unsigned char 
  3951 ;;  exp             1   14[BANK0 ] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  3    8[BANK0 ] float 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       4       0       0       0
  3962 ;;      Locals:         0       2       0       0       0
  3963 ;;      Temps:          0       2       0       0       0
  3964 ;;      Totals:         0       8       0       0       0
  3965 ;;Total ram usage:        8 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    2
  3968 ;; This function calls:
  3969 ;;		___ftpack
  3970 ;; This function is called by:
  3971 ;;		_strtod
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           
  3976                           ;psect for function ___altoft
  3977  0000'                    ___altoft:	
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3981  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3982  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3983  0002' 018F'              	clrf	___altoft@sign
  3984  0003' 308E               	movlw	142
  3985  0004' 008C'              	movwf	??___altoft
  3986  0005' 080C'              	movf	??___altoft,w
  3987  0006' 008E'              	movwf	___altoft@exp
  3988  0007' 1F8B'              	btfss	___altoft@c+3,7
  3989  0008' 2800'              	goto	l3880
  3990  0009' 0988'              	comf	___altoft@c,f
  3991  000A' 0989'              	comf	___altoft@c+1,f
  3992  000B' 098A'              	comf	___altoft@c+2,f
  3993  000C' 098B'              	comf	___altoft@c+3,f
  3994  000D' 0A88'              	incf	___altoft@c,f
  3995  000E' 1903               	skipnz
  3996  000F' 0A89'              	incf	___altoft@c+1,f
  3997  0010' 1903               	skipnz
  3998  0011' 0A8A'              	incf	___altoft@c+2,f
  3999  0012' 1903               	skipnz
  4000  0013' 0A8B'              	incf	___altoft@c+3,f
  4001  0014' 018F'              	clrf	___altoft@sign
  4002  0015' 0A8F'              	incf	___altoft@sign,f
  4003  0016'                    l3880:	
  4004  0016' 30FF               	movlw	255
  4005  0017' 050B'              	andwf	___altoft@c+3,w
  4006  0018' 1903               	btfsc	3,2
  4007  0019' 2800'              	goto	l3882
  4008  001A' 3001               	movlw	1
  4009  001B'                    u5895:	
  4010  001B' 1003               	clrc
  4011  001C' 0C8B'              	rrf	___altoft@c+3,f
  4012  001D' 0C8A'              	rrf	___altoft@c+2,f
  4013  001E' 0C89'              	rrf	___altoft@c+1,f
  4014  001F' 0C88'              	rrf	___altoft@c,f
  4015  0020' 3EFF               	addlw	-1
  4016  0021' 1D03               	skipz
  4017  0022' 2800'              	goto	u5895
  4018  0023' 3001               	movlw	1
  4019  0024' 008C'              	movwf	??___altoft
  4020  0025' 080C'              	movf	??___altoft,w
  4021  0026' 078E'              	addwf	___altoft@exp,f
  4022  0027' 2800'              	goto	l3880
  4023  0028'                    l3882:	
  4024  0028' 0808'              	movf	___altoft@c,w
  4025  0029' 0080'              	movwf	___ftpack@arg
  4026  002A' 0809'              	movf	___altoft@c+1,w
  4027  002B' 0081'              	movwf	___ftpack@arg+1
  4028  002C' 080A'              	movf	___altoft@c+2,w
  4029  002D' 0082'              	movwf	___ftpack@arg+2
  4030  002E' 080E'              	movf	___altoft@exp,w
  4031  002F' 008C'              	movwf	??___altoft
  4032  0030' 080C'              	movf	??___altoft,w
  4033  0031' 0083'              	movwf	___ftpack@exp
  4034  0032' 080F'              	movf	___altoft@sign,w
  4035  0033' 008D'              	movwf	??___altoft+1
  4036  0034' 080D'              	movf	??___altoft+1,w
  4037  0035' 0084'              	movwf	___ftpack@sign
  4038  0036' 120A' 118A' 2000'  	fcall	___ftpack
  4039  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  4040  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  4041  003B' 0800'              	movf	?___ftpack,w
  4042  003C' 0088'              	movwf	?___altoft
  4043  003D' 0801'              	movf	?___ftpack+1,w
  4044  003E' 0089'              	movwf	?___altoft+1
  4045  003F' 0802'              	movf	?___ftpack+2,w
  4046  0040' 008A'              	movwf	?___altoft+2
  4047  0041' 0008               	return
  4048  0042'                    __end_of___altoft:	
  4049                           
  4050                           	psect	text10
  4051  0000'                    __ptext10:	
  4052 ;; *************** function _get_gpstime *****************
  4053 ;; Defined at:
  4054 ;;		line 125 in file "gps_test.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  Time_Buffer    15   33[BANK0 ] unsigned char [15]
  4059 ;;  _Time           4   48[BANK0 ] unsigned long 
  4060 ;;  index           1   52[BANK0 ] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  4   28[BANK0 ] unsigned long 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       4       0       0       0
  4071 ;;      Locals:         0      20       0       0       0
  4072 ;;      Temps:          0       1       0       0       0
  4073 ;;      Totals:         0      25       0       0       0
  4074 ;;Total ram usage:       25 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    3
  4077 ;; This function calls:
  4078 ;;		_atol
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _get_gpstime
  4086  0000'                    _get_gpstime:	
  4087                           
  4088                           ;gps_test.c: 126: unsigned char index;
  4089                           ;gps_test.c: 127: unsigned char Time_Buffer[15];
  4090                           ;gps_test.c: 128: unsigned long int _Time;
  4091                           ;gps_test.c: 131: for(index = 0;GGA_Buffer[index]!=','; index++){
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in _get_gpstime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4095  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4096  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4097  0002' 01B4'              	clrf	get_gpstime@index
  4098  0003'                    l5034:	
  4099  0003' 0834'              	movf	get_gpstime@index,w
  4100  0004' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  4101  0005' 0084               	movwf	4
  4102  0006' 302C               	movlw	44
  4103  0007' 1783               	bsf	3,7	;select IRP bank2
  4104  0008' 0600               	xorwf	0,w
  4105  0009' 1903               	btfsc	3,2
  4106  000A' 2800'              	goto	l5036
  4107                           
  4108                           ;gps_test.c: 132: Time_Buffer[index] = GGA_Buffer[index];
  4109  000B' 0834'              	movf	get_gpstime@index,w
  4110  000C' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
  4111  000D' 0084               	movwf	4
  4112  000E' 1783               	bsf	3,7	;select IRP bank2
  4113  000F' 0800               	movf	0,w
  4114  0010' 00A0'              	movwf	??_get_gpstime
  4115  0011' 0834'              	movf	get_gpstime@index,w
  4116  0012' 3E00'              	addlw	(low (get_gpstime@Time_Buffer| 0))& (0+255)
  4117  0013' 0084               	movwf	4
  4118  0014' 0820'              	movf	??_get_gpstime,w
  4119  0015' 1383               	bcf	3,7	;select IRP bank0
  4120  0016' 0080               	movwf	0
  4121  0017' 3001               	movlw	1
  4122  0018' 00A0'              	movwf	??_get_gpstime
  4123  0019' 0820'              	movf	??_get_gpstime,w
  4124  001A' 07B4'              	addwf	get_gpstime@index,f
  4125  001B' 2800'              	goto	l5034
  4126  001C'                    l5036:	
  4127                           
  4128                           ;gps_test.c: 133: }
  4129                           ;gps_test.c: 134: _Time= atol(Time_Buffer);
  4130  001C' 3000'              	movlw	(low (get_gpstime@Time_Buffer| 0))& (0+255)
  4131  001D' 120A' 118A' 2000'  	fcall	_atol
  4132  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  4133  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  4134  0022' 0810'              	movf	?_atol+3,w
  4135  0023' 00B3'              	movwf	get_gpstime@_Time+3
  4136  0024' 080F'              	movf	?_atol+2,w
  4137  0025' 00B2'              	movwf	get_gpstime@_Time+2
  4138  0026' 080E'              	movf	?_atol+1,w
  4139  0027' 00B1'              	movwf	get_gpstime@_Time+1
  4140  0028' 080D'              	movf	?_atol,w
  4141  0029' 00B0'              	movwf	get_gpstime@_Time
  4142                           
  4143                           ;gps_test.c: 135: return _Time;
  4144  002A' 0833'              	movf	get_gpstime@_Time+3,w
  4145  002B' 009F'              	movwf	?_get_gpstime+3
  4146  002C' 0832'              	movf	get_gpstime@_Time+2,w
  4147  002D' 009E'              	movwf	?_get_gpstime+2
  4148  002E' 0831'              	movf	get_gpstime@_Time+1,w
  4149  002F' 009D'              	movwf	?_get_gpstime+1
  4150  0030' 0830'              	movf	get_gpstime@_Time,w
  4151  0031' 009C'              	movwf	?_get_gpstime
  4152  0032' 0008               	return
  4153  0033'                    __end_of_get_gpstime:	
  4154                           
  4155                           	psect	text11
  4156  0000'                    __ptext11:	
  4157 ;; *************** function _atol *****************
  4158 ;; Defined at:
  4159 ;;		line 5 in file "D:\mplab\sources\common\atol.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  s               1    wreg     PTR const unsigned char 
  4162 ;;		 -> get_gpstime@Time_Buffer(15), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  s               1   26[BANK0 ] PTR const unsigned char 
  4165 ;;		 -> get_gpstime@Time_Buffer(15), 
  4166 ;;  a               4   22[BANK0 ] long 
  4167 ;;  c               1   27[BANK0 ] unsigned char 
  4168 ;;  sign            1   21[BANK0 ] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  4   13[BANK0 ] long 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       4       0       0       0
  4179 ;;      Locals:         0       7       0       0       0
  4180 ;;      Temps:          0       4       0       0       0
  4181 ;;      Totals:         0      15       0       0       0
  4182 ;;Total ram usage:       15 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    2
  4185 ;; This function calls:
  4186 ;;		___lmul
  4187 ;;		_isdigit
  4188 ;; This function is called by:
  4189 ;;		_get_gpstime
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _atol
  4195  0000'                    _atol:	
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in _atol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4199                           ;atol@s stored from wreg
  4200  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4201  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4202  0002' 009A'              	movwf	atol@s
  4203  0003'                    l593:	
  4204  0003' 081A'              	movf	atol@s,w
  4205  0004' 0084               	movwf	4
  4206  0005' 1383               	bcf	3,7	;select IRP bank0
  4207  0006' 0800               	movf	0,w
  4208  0007' 0091'              	movwf	??_atol
  4209  0008' 0811'              	movf	??_atol,w
  4210  0009' 009B'              	movwf	atol@c
  4211  000A' 3001               	movlw	1
  4212  000B' 0091'              	movwf	??_atol
  4213  000C' 0811'              	movf	??_atol,w
  4214  000D' 079A'              	addwf	atol@s,f
  4215  000E' 3020               	movlw	32
  4216  000F' 061B'              	xorwf	atol@c,w
  4217  0010' 1903               	btfsc	3,2
  4218  0011' 2800'              	goto	l593
  4219  0012' 3009               	movlw	9
  4220  0013' 061B'              	xorwf	atol@c,w
  4221  0014' 1903               	btfsc	3,2
  4222  0015' 2800'              	goto	l593
  4223  0016' 3000               	movlw	0
  4224  0017' 0099'              	movwf	atol@a+3
  4225  0018' 3000               	movlw	0
  4226  0019' 0098'              	movwf	atol@a+2
  4227  001A' 3000               	movlw	0
  4228  001B' 0097'              	movwf	atol@a+1
  4229  001C' 3000               	movlw	0
  4230  001D' 0096'              	movwf	atol@a
  4231  001E' 0195'              	clrf	atol@sign
  4232  001F' 302D               	movlw	45
  4233  0020' 061B'              	xorwf	atol@c,w
  4234  0021' 1D03               	btfss	3,2
  4235  0022' 2800'              	goto	l4904
  4236  0023' 3001               	movlw	1
  4237  0024' 0091'              	movwf	??_atol
  4238  0025' 0811'              	movf	??_atol,w
  4239  0026' 0795'              	addwf	atol@sign,f
  4240  0027' 2800'              	goto	L2
  4241  0028'                    l4904:	
  4242  0028' 302B               	movlw	43
  4243  0029' 061B'              	xorwf	atol@c,w
  4244  002A' 1D03               	btfss	3,2
  4245  002B' 2800'              	goto	l4916
  4246  002C'                    L2:	
  4247  002C' 081A'              	movf	atol@s,w
  4248  002D' 0084               	movwf	4
  4249  002E'                    L3:	
  4250  002E' 0800               	movf	0,w
  4251  002F' 0091'              	movwf	??_atol
  4252  0030' 0811'              	movf	??_atol,w
  4253  0031' 009B'              	movwf	atol@c
  4254  0032' 3001               	movlw	1
  4255  0033' 0091'              	movwf	??_atol
  4256  0034' 0811'              	movf	??_atol,w
  4257  0035' 079A'              	addwf	atol@s,f
  4258  0036'                    l4916:	
  4259  0036' 081B'              	movf	atol@c,w
  4260  0037' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  4261  003C' 1C03               	btfss	3,0
  4262  003D' 2800'              	goto	l4918
  4263  003E' 1283               	bcf	3,5	;RP0=0, select bank0
  4264  003F' 1303               	bcf	3,6	;RP1=0, select bank0
  4265  0040' 081B'              	movf	atol@c,w
  4266  0041' 3ED0               	addlw	208
  4267  0042' 0091'              	movwf	??_atol
  4268  0043' 0192'              	clrf	??_atol+1
  4269  0044' 0193'              	clrf	??_atol+2
  4270  0045' 0194'              	clrf	??_atol+3
  4271  0046' 0819'              	movf	atol@a+3,w
  4272  0047' 0083'              	movwf	___lmul@multiplier+3
  4273  0048' 0818'              	movf	atol@a+2,w
  4274  0049' 0082'              	movwf	___lmul@multiplier+2
  4275  004A' 0817'              	movf	atol@a+1,w
  4276  004B' 0081'              	movwf	___lmul@multiplier+1
  4277  004C' 0816'              	movf	atol@a,w
  4278  004D' 0080'              	movwf	___lmul@multiplier
  4279  004E' 3000               	movlw	0
  4280  004F' 0087'              	movwf	___lmul@multiplicand+3
  4281  0050' 3000               	movlw	0
  4282  0051' 0086'              	movwf	___lmul@multiplicand+2
  4283  0052' 3000               	movlw	0
  4284  0053' 0085'              	movwf	___lmul@multiplicand+1
  4285  0054' 300A               	movlw	10
  4286  0055' 0084'              	movwf	___lmul@multiplicand
  4287  0056' 120A' 118A' 2000' 120A' 118A' 	fcall	___lmul
  4288  005B' 1283               	bcf	3,5	;RP0=0, select bank0
  4289  005C' 1303               	bcf	3,6	;RP1=0, select bank0
  4290  005D' 0800'              	movf	?___lmul,w
  4291  005E' 0791'              	addwf	??_atol,f
  4292  005F' 0801'              	movf	?___lmul+1,w
  4293  0060' 1803               	skipnc
  4294  0061' 0F01'              	incfsz	?___lmul+1,w
  4295  0062' 2800'              	goto	u8100
  4296  0063' 2800'              	goto	u8101
  4297  0064'                    u8100:	
  4298  0064' 0792'              	addwf	??_atol+1,f
  4299  0065'                    u8101:	
  4300  0065' 0802'              	movf	?___lmul+2,w
  4301  0066' 1803               	skipnc
  4302  0067' 0F02'              	incfsz	?___lmul+2,w
  4303  0068' 2800'              	goto	u8102
  4304  0069' 2800'              	goto	u8103
  4305  006A'                    u8102:	
  4306  006A' 0793'              	addwf	??_atol+2,f
  4307  006B'                    u8103:	
  4308  006B' 0803'              	movf	?___lmul+3,w
  4309  006C' 1803               	skipnc
  4310  006D' 0A03'              	incf	?___lmul+3,w
  4311  006E' 0794'              	addwf	??_atol+3,f
  4312  006F' 0814'              	movf	??_atol+3,w
  4313  0070' 0099'              	movwf	atol@a+3
  4314  0071' 0813'              	movf	??_atol+2,w
  4315  0072' 0098'              	movwf	atol@a+2
  4316  0073' 0812'              	movf	??_atol+1,w
  4317  0074' 0097'              	movwf	atol@a+1
  4318  0075' 0811'              	movf	??_atol,w
  4319  0076' 0096'              	movwf	atol@a
  4320  0077' 081A'              	movf	atol@s,w
  4321  0078' 0084               	movwf	4
  4322  0079' 1383               	bcf	3,7	;select IRP bank0
  4323  007A' 2800'              	goto	L3
  4324  007B'                    l4918:	
  4325  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  4326  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  4327  007D' 0815'              	movf	atol@sign,w
  4328  007E' 1903               	btfsc	3,2
  4329  007F' 2800'              	goto	l4924
  4330  0080' 0916'              	comf	atol@a,w
  4331  0081' 008D'              	movwf	?_atol
  4332  0082' 0917'              	comf	atol@a+1,w
  4333  0083' 008E'              	movwf	?_atol+1
  4334  0084' 0918'              	comf	atol@a+2,w
  4335  0085' 008F'              	movwf	?_atol+2
  4336  0086' 0919'              	comf	atol@a+3,w
  4337  0087' 0090'              	movwf	?_atol+3
  4338  0088' 0A8D'              	incf	?_atol,f
  4339  0089' 1903               	skipnz
  4340  008A' 0A8E'              	incf	?_atol+1,f
  4341  008B' 1903               	skipnz
  4342  008C' 0A8F'              	incf	?_atol+2,f
  4343  008D' 1903               	skipnz
  4344  008E' 0A90'              	incf	?_atol+3,f
  4345  008F' 0008               	return
  4346  0090'                    l4924:	
  4347  0090' 0819'              	movf	atol@a+3,w
  4348  0091' 0090'              	movwf	?_atol+3
  4349  0092' 0818'              	movf	atol@a+2,w
  4350  0093' 008F'              	movwf	?_atol+2
  4351  0094' 0817'              	movf	atol@a+1,w
  4352  0095' 008E'              	movwf	?_atol+1
  4353  0096' 0816'              	movf	atol@a,w
  4354  0097' 008D'              	movwf	?_atol
  4355  0098' 0008               	return
  4356  0099'                    __end_of_atol:	
  4357                           
  4358                           	psect	text12
  4359  0000'                    __ptext12:	
  4360 ;; *************** function ___lmul *****************
  4361 ;; Defined at:
  4362 ;;		line 15 in file "D:\mplab\sources\common\Umul32.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4365 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  product         4    9[BANK0 ] unsigned long 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  4    0[BANK0 ] unsigned long 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4377 ;;      Params:         0       8       0       0       0
  4378 ;;      Locals:         0       4       0       0       0
  4379 ;;      Temps:          0       1       0       0       0
  4380 ;;      Totals:         0      13       0       0       0
  4381 ;;Total ram usage:       13 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    1
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_strtod
  4388 ;;		_atol
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function ___lmul
  4394  0000'                    ___lmul:	
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4398  0000' 3000               	movlw	0
  4399  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  4400  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  4401  0003' 008C'              	movwf	___lmul@product+3
  4402  0004' 3000               	movlw	0
  4403  0005' 008B'              	movwf	___lmul@product+2
  4404  0006' 3000               	movlw	0
  4405  0007' 008A'              	movwf	___lmul@product+1
  4406  0008' 3000               	movlw	0
  4407  0009' 0089'              	movwf	___lmul@product
  4408  000A'                    l3844:	
  4409  000A' 1C00'              	btfss	___lmul@multiplier,0
  4410  000B' 2800'              	goto	l3848
  4411  000C' 0804'              	movf	___lmul@multiplicand,w
  4412  000D' 0789'              	addwf	___lmul@product,f
  4413  000E' 0805'              	movf	___lmul@multiplicand+1,w
  4414  000F' 1103               	clrz
  4415  0010' 1803               	skipnc
  4416  0011' 3E01               	addlw	1
  4417  0012' 1D03               	btfss	3,2
  4418  0013' 078A'              	addwf	___lmul@product+1,f
  4419  0014' 0806'              	movf	___lmul@multiplicand+2,w
  4420  0015' 1103               	clrz
  4421  0016' 1803               	skipnc
  4422  0017' 3E01               	addlw	1
  4423  0018' 1D03               	btfss	3,2
  4424  0019' 078B'              	addwf	___lmul@product+2,f
  4425  001A' 0807'              	movf	___lmul@multiplicand+3,w
  4426  001B' 1103               	clrz
  4427  001C' 1803               	skipnc
  4428  001D' 3E01               	addlw	1
  4429  001E' 1D03               	btfss	3,2
  4430  001F' 078C'              	addwf	___lmul@product+3,f
  4431  0020'                    l3848:	
  4432  0020' 3001               	movlw	1
  4433  0021' 0088'              	movwf	??___lmul
  4434  0022'                    u5835:	
  4435  0022' 1003               	clrc
  4436  0023' 0D84'              	rlf	___lmul@multiplicand,f
  4437  0024' 0D85'              	rlf	___lmul@multiplicand+1,f
  4438  0025' 0D86'              	rlf	___lmul@multiplicand+2,f
  4439  0026' 0D87'              	rlf	___lmul@multiplicand+3,f
  4440  0027' 0B88'              	decfsz	??___lmul,f
  4441  0028' 2800'              	goto	u5835
  4442  0029' 3001               	movlw	1
  4443  002A'                    u5845:	
  4444  002A' 1003               	clrc
  4445  002B' 0C83'              	rrf	___lmul@multiplier+3,f
  4446  002C' 0C82'              	rrf	___lmul@multiplier+2,f
  4447  002D' 0C81'              	rrf	___lmul@multiplier+1,f
  4448  002E' 0C80'              	rrf	___lmul@multiplier,f
  4449  002F' 3EFF               	addlw	-1
  4450  0030' 1D03               	skipz
  4451  0031' 2800'              	goto	u5845
  4452  0032' 0803'              	movf	___lmul@multiplier+3,w
  4453  0033' 0402'              	iorwf	___lmul@multiplier+2,w
  4454  0034' 0401'              	iorwf	___lmul@multiplier+1,w
  4455  0035' 0400'              	iorwf	___lmul@multiplier,w
  4456  0036' 1D03               	skipz
  4457  0037' 2800'              	goto	l3844
  4458  0038' 080C'              	movf	___lmul@product+3,w
  4459  0039' 0083'              	movwf	?___lmul+3
  4460  003A' 080B'              	movf	___lmul@product+2,w
  4461  003B' 0082'              	movwf	?___lmul+2
  4462  003C' 080A'              	movf	___lmul@product+1,w
  4463  003D' 0081'              	movwf	?___lmul+1
  4464  003E' 0809'              	movf	___lmul@product,w
  4465  003F' 0080'              	movwf	?___lmul
  4466  0040' 0008               	return
  4467  0041'                    __end_of___lmul:	
  4468                           
  4469                           	psect	text13
  4470  0000'                    __ptext13:	
  4471 ;; *************** function _convert_to_degrees *****************
  4472 ;; Defined at:
  4473 ;;		line 187 in file "gps_test.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  NMEA_lat_lon    3   66[BANK0 ] float 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  decimal         3   77[BANK0 ] float 
  4478 ;;  dec_deg         3   72[BANK0 ] float 
  4479 ;;  minutes         3   69[BANK0 ] float 
  4480 ;;  position        3    0        float 
  4481 ;;  degrees         2   75[BANK0 ] int 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  3   66[BANK0 ] float 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4491 ;;      Params:         0       3       0       0       0
  4492 ;;      Locals:         0      11       0       0       0
  4493 ;;      Temps:          0       0       0       0       0
  4494 ;;      Totals:         0      14       0       0       0
  4495 ;;Total ram usage:       14 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    3
  4498 ;; This function calls:
  4499 ;;		___awtoft
  4500 ;;		___ftadd
  4501 ;;		___ftdiv
  4502 ;;		___ftmul
  4503 ;;		___ftneg
  4504 ;;		___fttol
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _convert_to_degrees
  4512  0000'                    _convert_to_degrees:	
  4513                           
  4514                           ;gps_test.c: 190: float minutes, dec_deg, decimal;
  4515                           ;gps_test.c: 192: int degrees;
  4516                           ;gps_test.c: 194: float position;
  4517                           ;gps_test.c: 196: degrees = (int)(NMEA_lat_long/100.00);
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in _convert_to_degrees: [wreg+status,2+status,0+pclath+cstack]
  4521  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4522  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4523  0002' 0842'              	movf	convert_to_degrees@NMEA_lat_long,w
  4524  0003' 00A7'              	movwf	___ftdiv@f1
  4525  0004' 0843'              	movf	convert_to_degrees@NMEA_lat_long+1,w
  4526  0005' 00A8'              	movwf	___ftdiv@f1+1
  4527  0006' 0844'              	movf	convert_to_degrees@NMEA_lat_long+2,w
  4528  0007' 00A9'              	movwf	___ftdiv@f1+2
  4529  0008' 3000               	movlw	0
  4530  0009' 00A4'              	movwf	___ftdiv@f2
  4531  000A' 30C8               	movlw	200
  4532  000B' 00A5'              	movwf	___ftdiv@f2+1
  4533  000C' 3042               	movlw	66
  4534  000D' 00A6'              	movwf	___ftdiv@f2+2
  4535  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  4536  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  4537  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  4538  0015' 0824'              	movf	?___ftdiv,w
  4539  0016' 00B4'              	movwf	___fttol@f1
  4540  0017' 0825'              	movf	?___ftdiv+1,w
  4541  0018' 00B5'              	movwf	___fttol@f1+1
  4542  0019' 0826'              	movf	?___ftdiv+2,w
  4543  001A' 00B6'              	movwf	___fttol@f1+2
  4544  001B' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  4545  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  4546  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  4547  0022' 0835'              	movf	?___fttol+1,w
  4548  0023' 00CC'              	movwf	convert_to_degrees@degrees+1
  4549  0024' 0834'              	movf	?___fttol,w
  4550  0025' 00CB'              	movwf	convert_to_degrees@degrees
  4551                           
  4552                           ;gps_test.c: 197: minutes = NMEA_lat_long - degrees*100.00;
  4553  0026' 0842'              	movf	convert_to_degrees@NMEA_lat_long,w
  4554  0027' 00B4'              	movwf	___ftadd@f1
  4555  0028' 0843'              	movf	convert_to_degrees@NMEA_lat_long+1,w
  4556  0029' 00B5'              	movwf	___ftadd@f1+1
  4557  002A' 0844'              	movf	convert_to_degrees@NMEA_lat_long+2,w
  4558  002B' 00B6'              	movwf	___ftadd@f1+2
  4559  002C' 084C'              	movf	convert_to_degrees@degrees+1,w
  4560  002D' 0089'              	movwf	___awtoft@c+1
  4561  002E' 084B'              	movf	convert_to_degrees@degrees,w
  4562  002F' 0088'              	movwf	___awtoft@c
  4563  0030' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  4564  0035' 1283               	bcf	3,5	;RP0=0, select bank0
  4565  0036' 1303               	bcf	3,6	;RP1=0, select bank0
  4566  0037' 0808'              	movf	?___awtoft,w
  4567  0038' 0097'              	movwf	___ftmul@f2
  4568  0039' 0809'              	movf	?___awtoft+1,w
  4569  003A' 0098'              	movwf	___ftmul@f2+1
  4570  003B' 080A'              	movf	?___awtoft+2,w
  4571  003C' 0099'              	movwf	___ftmul@f2+2
  4572  003D' 3000               	movlw	0
  4573  003E' 0094'              	movwf	___ftmul@f1
  4574  003F' 30C8               	movlw	200
  4575  0040' 0095'              	movwf	___ftmul@f1+1
  4576  0041' 3042               	movlw	66
  4577  0042' 0096'              	movwf	___ftmul@f1+2
  4578  0043' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  4579  0048' 1283               	bcf	3,5	;RP0=0, select bank0
  4580  0049' 1303               	bcf	3,6	;RP1=0, select bank0
  4581  004A' 0814'              	movf	?___ftmul,w
  4582  004B' 00A4'              	movwf	___ftneg@f1
  4583  004C' 0815'              	movf	?___ftmul+1,w
  4584  004D' 00A5'              	movwf	___ftneg@f1+1
  4585  004E' 0816'              	movf	?___ftmul+2,w
  4586  004F' 00A6'              	movwf	___ftneg@f1+2
  4587  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  4588  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  4589  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  4590  0057' 0824'              	movf	?___ftneg,w
  4591  0058' 00B7'              	movwf	___ftadd@f2
  4592  0059' 0825'              	movf	?___ftneg+1,w
  4593  005A' 00B8'              	movwf	___ftadd@f2+1
  4594  005B' 0826'              	movf	?___ftneg+2,w
  4595  005C' 00B9'              	movwf	___ftadd@f2+2
  4596  005D' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  4597  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  4598  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  4599  0064' 0834'              	movf	?___ftadd,w
  4600  0065' 00C5'              	movwf	convert_to_degrees@minutes
  4601  0066' 0835'              	movf	?___ftadd+1,w
  4602  0067' 00C6'              	movwf	convert_to_degrees@minutes+1
  4603  0068' 0836'              	movf	?___ftadd+2,w
  4604  0069' 00C7'              	movwf	convert_to_degrees@minutes+2
  4605                           
  4606                           ;gps_test.c: 198: dec_deg = minutes / 60.00;
  4607  006A' 3000               	movlw	0
  4608  006B' 00A4'              	movwf	___ftdiv@f2
  4609  006C' 3070               	movlw	112
  4610  006D' 00A5'              	movwf	___ftdiv@f2+1
  4611  006E' 3042               	movlw	66
  4612  006F' 00A6'              	movwf	___ftdiv@f2+2
  4613  0070' 0845'              	movf	convert_to_degrees@minutes,w
  4614  0071' 00A7'              	movwf	___ftdiv@f1
  4615  0072' 0846'              	movf	convert_to_degrees@minutes+1,w
  4616  0073' 00A8'              	movwf	___ftdiv@f1+1
  4617  0074' 0847'              	movf	convert_to_degrees@minutes+2,w
  4618  0075' 00A9'              	movwf	___ftdiv@f1+2
  4619  0076' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  4620  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  4621  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  4622  007D' 0824'              	movf	?___ftdiv,w
  4623  007E' 00C8'              	movwf	convert_to_degrees@dec_deg
  4624  007F' 0825'              	movf	?___ftdiv+1,w
  4625  0080' 00C9'              	movwf	convert_to_degrees@dec_deg+1
  4626  0081' 0826'              	movf	?___ftdiv+2,w
  4627  0082' 00CA'              	movwf	convert_to_degrees@dec_deg+2
  4628                           
  4629                           ;gps_test.c: 199: decimal = degrees + dec_deg;
  4630  0083' 0848'              	movf	convert_to_degrees@dec_deg,w
  4631  0084' 00B4'              	movwf	___ftadd@f1
  4632  0085' 0849'              	movf	convert_to_degrees@dec_deg+1,w
  4633  0086' 00B5'              	movwf	___ftadd@f1+1
  4634  0087' 084A'              	movf	convert_to_degrees@dec_deg+2,w
  4635  0088' 00B6'              	movwf	___ftadd@f1+2
  4636  0089' 084C'              	movf	convert_to_degrees@degrees+1,w
  4637  008A' 0089'              	movwf	___awtoft@c+1
  4638  008B' 084B'              	movf	convert_to_degrees@degrees,w
  4639  008C' 0088'              	movwf	___awtoft@c
  4640  008D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  4641  0092' 1283               	bcf	3,5	;RP0=0, select bank0
  4642  0093' 1303               	bcf	3,6	;RP1=0, select bank0
  4643  0094' 0808'              	movf	?___awtoft,w
  4644  0095' 00B7'              	movwf	___ftadd@f2
  4645  0096' 0809'              	movf	?___awtoft+1,w
  4646  0097' 00B8'              	movwf	___ftadd@f2+1
  4647  0098' 080A'              	movf	?___awtoft+2,w
  4648  0099' 00B9'              	movwf	___ftadd@f2+2
  4649  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  4650  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  4651  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  4652  00A1' 0834'              	movf	?___ftadd,w
  4653  00A2' 00CD'              	movwf	convert_to_degrees@decimal
  4654  00A3' 0835'              	movf	?___ftadd+1,w
  4655  00A4' 00CE'              	movwf	convert_to_degrees@decimal+1
  4656  00A5' 0836'              	movf	?___ftadd+2,w
  4657  00A6' 00CF'              	movwf	convert_to_degrees@decimal+2
  4658                           
  4659                           ;gps_test.c: 200: if (N_S == 'S' || E_W == 'W') {
  4660  00A7' 3053               	movlw	83
  4661  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
  4662  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
  4663  00AA' 0600'              	xorwf	_N_S^(0+128),w
  4664  00AB' 1903               	btfsc	3,2
  4665  00AC' 2800'              	goto	l5090
  4666  00AD' 3057               	movlw	87
  4667  00AE' 0600'              	xorwf	_E_W^(0+128),w
  4668  00AF' 1D03               	btfss	3,2
  4669  00B0' 2800'              	goto	l5092
  4670  00B1'                    l5090:	
  4671                           
  4672                           ;gps_test.c: 201: decimal *= -1;
  4673  00B1' 3000               	movlw	0
  4674  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
  4675  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
  4676  00B4' 0094'              	movwf	___ftmul@f1
  4677  00B5' 3080               	movlw	128
  4678  00B6' 0095'              	movwf	___ftmul@f1+1
  4679  00B7' 30BF               	movlw	191
  4680  00B8' 0096'              	movwf	___ftmul@f1+2
  4681  00B9' 084D'              	movf	convert_to_degrees@decimal,w
  4682  00BA' 0097'              	movwf	___ftmul@f2
  4683  00BB' 084E'              	movf	convert_to_degrees@decimal+1,w
  4684  00BC' 0098'              	movwf	___ftmul@f2+1
  4685  00BD' 084F'              	movf	convert_to_degrees@decimal+2,w
  4686  00BE' 0099'              	movwf	___ftmul@f2+2
  4687  00BF' 120A' 118A' 2000'  	fcall	___ftmul
  4688  00C2' 1283               	bcf	3,5	;RP0=0, select bank0
  4689  00C3' 1303               	bcf	3,6	;RP1=0, select bank0
  4690  00C4' 0814'              	movf	?___ftmul,w
  4691  00C5' 00CD'              	movwf	convert_to_degrees@decimal
  4692  00C6' 0815'              	movf	?___ftmul+1,w
  4693  00C7' 00CE'              	movwf	convert_to_degrees@decimal+1
  4694  00C8' 0816'              	movf	?___ftmul+2,w
  4695  00C9' 00CF'              	movwf	convert_to_degrees@decimal+2
  4696  00CA'                    l5092:	
  4697                           
  4698                           ;gps_test.c: 202: }
  4699                           ;gps_test.c: 204: return decimal;
  4700  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  4701  00CB' 084D'              	movf	convert_to_degrees@decimal,w
  4702  00CC' 00C2'              	movwf	?_convert_to_degrees
  4703  00CD' 084E'              	movf	convert_to_degrees@decimal+1,w
  4704  00CE' 00C3'              	movwf	?_convert_to_degrees+1
  4705  00CF' 084F'              	movf	convert_to_degrees@decimal+2,w
  4706  00D0' 00C4'              	movwf	?_convert_to_degrees+2
  4707  00D1' 0008               	return
  4708  00D2'                    __end_of_convert_to_degrees:	
  4709                           
  4710                           	psect	text14
  4711  0000'                    __ptext14:	
  4712 ;; *************** function ___ftdiv *****************
  4713 ;; Defined at:
  4714 ;;		line 56 in file "D:\mplab\sources\common\ftdiv.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  f2              3   36[BANK0 ] float 
  4717 ;;  f1              3   39[BANK0 ] float 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  f3              3   47[BANK0 ] float 
  4720 ;;  sign            1   51[BANK0 ] unsigned char 
  4721 ;;  exp             1   50[BANK0 ] unsigned char 
  4722 ;;  cntr            1   46[BANK0 ] unsigned char 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  3   36[BANK0 ] float 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0, pclath, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4732 ;;      Params:         0       6       0       0       0
  4733 ;;      Locals:         0       6       0       0       0
  4734 ;;      Temps:          0       4       0       0       0
  4735 ;;      Totals:         0      16       0       0       0
  4736 ;;Total ram usage:       16 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    2
  4739 ;; This function calls:
  4740 ;;		___ftpack
  4741 ;; This function is called by:
  4742 ;;		_main
  4743 ;;		_convert_to_degrees
  4744 ;;		_strtod
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function ___ftdiv
  4750  0000'                    ___ftdiv:	
  4751                           
  4752                           ;incstack = 0
  4753                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4754  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4755  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4756  0002' 0827'              	movf	___ftdiv@f1,w
  4757  0003' 00AA'              	movwf	??___ftdiv
  4758  0004' 0828'              	movf	___ftdiv@f1+1,w
  4759  0005' 00AB'              	movwf	??___ftdiv+1
  4760  0006' 0829'              	movf	___ftdiv@f1+2,w
  4761  0007' 00AC'              	movwf	??___ftdiv+2
  4762  0008' 1003               	clrc
  4763  0009' 0D2B'              	rlf	??___ftdiv+1,w
  4764  000A' 0D2C'              	rlf	??___ftdiv+2,w
  4765  000B' 00AD'              	movwf	??___ftdiv+3
  4766  000C' 082D'              	movf	??___ftdiv+3,w
  4767  000D' 00B2'              	movwf	___ftdiv@exp
  4768  000E' 0832'              	movf	___ftdiv@exp,w
  4769  000F' 1D03               	btfss	3,2
  4770  0010' 2800'              	goto	l4058
  4771  0011' 3000               	movlw	0
  4772  0012' 00A4'              	movwf	?___ftdiv
  4773  0013' 3000               	movlw	0
  4774  0014' 00A5'              	movwf	?___ftdiv+1
  4775  0015' 3000               	movlw	0
  4776  0016' 00A6'              	movwf	?___ftdiv+2
  4777  0017' 0008               	return
  4778  0018'                    l4058:	
  4779  0018' 0824'              	movf	___ftdiv@f2,w
  4780  0019' 00AA'              	movwf	??___ftdiv
  4781  001A' 0825'              	movf	___ftdiv@f2+1,w
  4782  001B' 00AB'              	movwf	??___ftdiv+1
  4783  001C' 0826'              	movf	___ftdiv@f2+2,w
  4784  001D' 00AC'              	movwf	??___ftdiv+2
  4785  001E' 1003               	clrc
  4786  001F' 0D2B'              	rlf	??___ftdiv+1,w
  4787  0020' 0D2C'              	rlf	??___ftdiv+2,w
  4788  0021' 00AD'              	movwf	??___ftdiv+3
  4789  0022' 082D'              	movf	??___ftdiv+3,w
  4790  0023' 00B3'              	movwf	___ftdiv@sign
  4791  0024' 0833'              	movf	___ftdiv@sign,w
  4792  0025' 1D03               	btfss	3,2
  4793  0026' 2800'              	goto	l4064
  4794  0027' 3000               	movlw	0
  4795  0028' 00A4'              	movwf	?___ftdiv
  4796  0029' 3000               	movlw	0
  4797  002A' 00A5'              	movwf	?___ftdiv+1
  4798  002B' 3000               	movlw	0
  4799  002C' 00A6'              	movwf	?___ftdiv+2
  4800  002D' 0008               	return
  4801  002E'                    l4064:	
  4802  002E' 3000               	movlw	0
  4803  002F' 00AF'              	movwf	___ftdiv@f3
  4804  0030' 3000               	movlw	0
  4805  0031' 00B0'              	movwf	___ftdiv@f3+1
  4806  0032' 3000               	movlw	0
  4807  0033' 00B1'              	movwf	___ftdiv@f3+2
  4808  0034' 3089               	movlw	137
  4809  0035' 0733'              	addwf	___ftdiv@sign,w
  4810  0036' 00AA'              	movwf	??___ftdiv
  4811  0037' 082A'              	movf	??___ftdiv,w
  4812  0038' 02B2'              	subwf	___ftdiv@exp,f
  4813  0039' 0827'              	movf	___ftdiv@f1,w
  4814  003A' 00AA'              	movwf	??___ftdiv
  4815  003B' 0828'              	movf	___ftdiv@f1+1,w
  4816  003C' 00AB'              	movwf	??___ftdiv+1
  4817  003D' 0829'              	movf	___ftdiv@f1+2,w
  4818  003E' 00AC'              	movwf	??___ftdiv+2
  4819  003F' 3010               	movlw	16
  4820  0040'                    u6395:	
  4821  0040' 1003               	clrc
  4822  0041' 0CAC'              	rrf	??___ftdiv+2,f
  4823  0042' 0CAB'              	rrf	??___ftdiv+1,f
  4824  0043' 0CAA'              	rrf	??___ftdiv,f
  4825  0044' 3EFF               	addlw	-1
  4826  0045' 1D03               	skipz
  4827  0046' 2800'              	goto	u6395
  4828  0047' 082A'              	movf	??___ftdiv,w
  4829  0048' 00AD'              	movwf	??___ftdiv+3
  4830  0049' 082D'              	movf	??___ftdiv+3,w
  4831  004A' 00B3'              	movwf	___ftdiv@sign
  4832  004B' 0824'              	movf	___ftdiv@f2,w
  4833  004C' 00AA'              	movwf	??___ftdiv
  4834  004D' 0825'              	movf	___ftdiv@f2+1,w
  4835  004E' 00AB'              	movwf	??___ftdiv+1
  4836  004F' 0826'              	movf	___ftdiv@f2+2,w
  4837  0050' 00AC'              	movwf	??___ftdiv+2
  4838  0051' 3010               	movlw	16
  4839  0052'                    u6405:	
  4840  0052' 1003               	clrc
  4841  0053' 0CAC'              	rrf	??___ftdiv+2,f
  4842  0054' 0CAB'              	rrf	??___ftdiv+1,f
  4843  0055' 0CAA'              	rrf	??___ftdiv,f
  4844  0056' 3EFF               	addlw	-1
  4845  0057' 1D03               	skipz
  4846  0058' 2800'              	goto	u6405
  4847  0059' 082A'              	movf	??___ftdiv,w
  4848  005A' 00AD'              	movwf	??___ftdiv+3
  4849  005B' 082D'              	movf	??___ftdiv+3,w
  4850  005C' 06B3'              	xorwf	___ftdiv@sign,f
  4851  005D' 3080               	movlw	128
  4852  005E' 00AA'              	movwf	??___ftdiv
  4853  005F' 082A'              	movf	??___ftdiv,w
  4854  0060' 05B3'              	andwf	___ftdiv@sign,f
  4855  0061' 17A8'              	bsf	___ftdiv@f1+1,7
  4856  0062' 30FF               	movlw	255
  4857  0063' 05A7'              	andwf	___ftdiv@f1,f
  4858  0064' 30FF               	movlw	255
  4859  0065' 05A8'              	andwf	___ftdiv@f1+1,f
  4860  0066' 3000               	movlw	0
  4861  0067' 05A9'              	andwf	___ftdiv@f1+2,f
  4862  0068' 17A5'              	bsf	___ftdiv@f2+1,7
  4863  0069' 30FF               	movlw	255
  4864  006A' 05A4'              	andwf	___ftdiv@f2,f
  4865  006B' 30FF               	movlw	255
  4866  006C' 05A5'              	andwf	___ftdiv@f2+1,f
  4867  006D' 3000               	movlw	0
  4868  006E' 05A6'              	andwf	___ftdiv@f2+2,f
  4869  006F' 3018               	movlw	24
  4870  0070' 00AA'              	movwf	??___ftdiv
  4871  0071' 082A'              	movf	??___ftdiv,w
  4872  0072' 00AE'              	movwf	___ftdiv@cntr
  4873  0073'                    l4078:	
  4874  0073' 3001               	movlw	1
  4875  0074'                    u6415:	
  4876  0074' 1003               	clrc
  4877  0075' 0DAF'              	rlf	___ftdiv@f3,f
  4878  0076' 0DB0'              	rlf	___ftdiv@f3+1,f
  4879  0077' 0DB1'              	rlf	___ftdiv@f3+2,f
  4880  0078' 3EFF               	addlw	-1
  4881  0079' 1D03               	skipz
  4882  007A' 2800'              	goto	u6415
  4883  007B' 0826'              	movf	___ftdiv@f2+2,w
  4884  007C' 0229'              	subwf	___ftdiv@f1+2,w
  4885  007D' 1D03               	skipz
  4886  007E' 2800'              	goto	u6425
  4887  007F' 0825'              	movf	___ftdiv@f2+1,w
  4888  0080' 0228'              	subwf	___ftdiv@f1+1,w
  4889  0081' 1D03               	skipz
  4890  0082' 2800'              	goto	u6425
  4891  0083' 0824'              	movf	___ftdiv@f2,w
  4892  0084' 0227'              	subwf	___ftdiv@f1,w
  4893  0085'                    u6425:	
  4894  0085' 1C03               	skipc
  4895  0086' 2800'              	goto	l4086
  4896  0087' 0824'              	movf	___ftdiv@f2,w
  4897  0088' 02A7'              	subwf	___ftdiv@f1,f
  4898  0089' 0825'              	movf	___ftdiv@f2+1,w
  4899  008A' 1C03               	skipc
  4900  008B' 0F25'              	incfsz	___ftdiv@f2+1,w
  4901  008C' 02A8'              	subwf	___ftdiv@f1+1,f
  4902  008D' 0826'              	movf	___ftdiv@f2+2,w
  4903  008E' 1C03               	skipc
  4904  008F' 0A26'              	incf	___ftdiv@f2+2,w
  4905  0090' 02A9'              	subwf	___ftdiv@f1+2,f
  4906  0091' 142F'              	bsf	___ftdiv@f3,0
  4907  0092'                    l4086:	
  4908  0092' 3001               	movlw	1
  4909  0093'                    u6435:	
  4910  0093' 1003               	clrc
  4911  0094' 0DA7'              	rlf	___ftdiv@f1,f
  4912  0095' 0DA8'              	rlf	___ftdiv@f1+1,f
  4913  0096' 0DA9'              	rlf	___ftdiv@f1+2,f
  4914  0097' 3EFF               	addlw	-1
  4915  0098' 1D03               	skipz
  4916  0099' 2800'              	goto	u6435
  4917  009A' 3001               	movlw	1
  4918  009B' 02AE'              	subwf	___ftdiv@cntr,f
  4919  009C' 1D03               	btfss	3,2
  4920  009D' 2800'              	goto	l4078
  4921  009E' 082F'              	movf	___ftdiv@f3,w
  4922  009F' 0080'              	movwf	___ftpack@arg
  4923  00A0' 0830'              	movf	___ftdiv@f3+1,w
  4924  00A1' 0081'              	movwf	___ftpack@arg+1
  4925  00A2' 0831'              	movf	___ftdiv@f3+2,w
  4926  00A3' 0082'              	movwf	___ftpack@arg+2
  4927  00A4' 0832'              	movf	___ftdiv@exp,w
  4928  00A5' 00AA'              	movwf	??___ftdiv
  4929  00A6' 082A'              	movf	??___ftdiv,w
  4930  00A7' 0083'              	movwf	___ftpack@exp
  4931  00A8' 0833'              	movf	___ftdiv@sign,w
  4932  00A9' 00AB'              	movwf	??___ftdiv+1
  4933  00AA' 082B'              	movf	??___ftdiv+1,w
  4934  00AB' 0084'              	movwf	___ftpack@sign
  4935  00AC' 120A' 118A' 2000'  	fcall	___ftpack
  4936  00AF' 1283               	bcf	3,5	;RP0=0, select bank0
  4937  00B0' 1303               	bcf	3,6	;RP1=0, select bank0
  4938  00B1' 0800'              	movf	?___ftpack,w
  4939  00B2' 00A4'              	movwf	?___ftdiv
  4940  00B3' 0801'              	movf	?___ftpack+1,w
  4941  00B4' 00A5'              	movwf	?___ftdiv+1
  4942  00B5' 0802'              	movf	?___ftpack+2,w
  4943  00B6' 00A6'              	movwf	?___ftdiv+2
  4944  00B7' 0008               	return
  4945  00B8'                    __end_of___ftdiv:	
  4946                           
  4947                           	psect	text15
  4948  0000'                    __ptext15:	
  4949 ;; *************** function ___awtoft *****************
  4950 ;; Defined at:
  4951 ;;		line 32 in file "D:\mplab\sources\common\awtoft.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  c               2    8[BANK0 ] int 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  sign            1   13[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  3    8[BANK0 ] float 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         0       3       0       0       0
  4966 ;;      Locals:         0       1       0       0       0
  4967 ;;      Temps:          0       2       0       0       0
  4968 ;;      Totals:         0       6       0       0       0
  4969 ;;Total ram usage:        6 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    2
  4972 ;; This function calls:
  4973 ;;		___ftpack
  4974 ;; This function is called by:
  4975 ;;		_main
  4976 ;;		_convert_to_degrees
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function ___awtoft
  4982  0000'                    ___awtoft:	
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4986  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4987  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4988  0002' 018D'              	clrf	___awtoft@sign
  4989  0003' 1F89'              	btfss	___awtoft@c+1,7
  4990  0004' 2800'              	goto	l4980
  4991  0005' 0988'              	comf	___awtoft@c,f
  4992  0006' 0989'              	comf	___awtoft@c+1,f
  4993  0007' 0A88'              	incf	___awtoft@c,f
  4994  0008' 1903               	skipnz
  4995  0009' 0A89'              	incf	___awtoft@c+1,f
  4996  000A' 018D'              	clrf	___awtoft@sign
  4997  000B' 0A8D'              	incf	___awtoft@sign,f
  4998  000C'                    l4980:	
  4999  000C' 0808'              	movf	___awtoft@c,w
  5000  000D' 0080'              	movwf	___ftpack@arg
  5001  000E' 0809'              	movf	___awtoft@c+1,w
  5002  000F' 0081'              	movwf	___ftpack@arg+1
  5003  0010' 0182'              	clrf	___ftpack@arg+2
  5004  0011' 308E               	movlw	142
  5005  0012' 008B'              	movwf	??___awtoft
  5006  0013' 080B'              	movf	??___awtoft,w
  5007  0014' 0083'              	movwf	___ftpack@exp
  5008  0015' 080D'              	movf	___awtoft@sign,w
  5009  0016' 008C'              	movwf	??___awtoft+1
  5010  0017' 080C'              	movf	??___awtoft+1,w
  5011  0018' 0084'              	movwf	___ftpack@sign
  5012  0019' 120A' 118A' 2000'  	fcall	___ftpack
  5013  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  5014  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  5015  001E' 0800'              	movf	?___ftpack,w
  5016  001F' 0088'              	movwf	?___awtoft
  5017  0020' 0801'              	movf	?___ftpack+1,w
  5018  0021' 0089'              	movwf	?___awtoft+1
  5019  0022' 0802'              	movf	?___ftpack+2,w
  5020  0023' 008A'              	movwf	?___awtoft+2
  5021  0024' 0008               	return
  5022  0025'                    __end_of___awtoft:	
  5023                           
  5024                           	psect	text16
  5025  0000'                    __ptext16:	
  5026 ;; *************** function _convert_time_to_UTC *****************
  5027 ;; Defined at:
  5028 ;;		line 175 in file "gps_test.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  UTC_Time        4   28[BANK1 ] unsigned long 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  sec             2   41[BANK1 ] unsigned int 
  5033 ;;  min             2   39[BANK1 ] unsigned int 
  5034 ;;  hour            2   37[BANK1 ] unsigned int 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5044 ;;      Params:         0       0       4       0       0
  5045 ;;      Locals:         0       0      10       0       0
  5046 ;;      Temps:          0       0       1       0       0
  5047 ;;      Totals:         0       0      15       0       0
  5048 ;;Total ram usage:       15 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    5
  5051 ;; This function calls:
  5052 ;;		___lldiv
  5053 ;;		___llmod
  5054 ;;		_sprintf
  5055 ;; This function is called by:
  5056 ;;		_main
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _convert_time_to_UTC
  5062  0000'                    _convert_time_to_UTC:	
  5063                           
  5064                           ;gps_test.c: 177: unsigned int hour, min, sec;
  5065                           ;gps_test.c: 179: hour = (UTC_Time / 10000);
  5066                           
  5067                           ;incstack = 0
  5068                           ; Regs used in _convert_time_to_UTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5069  0000' 3000               	movlw	0
  5070  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5071  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5072  0003' 008D'              	movwf	___lldiv@divisor+3
  5073  0004' 3000               	movlw	0
  5074  0005' 008C'              	movwf	___lldiv@divisor+2
  5075  0006' 3027               	movlw	39
  5076  0007' 008B'              	movwf	___lldiv@divisor+1
  5077  0008' 3010               	movlw	16
  5078  0009' 008A'              	movwf	___lldiv@divisor
  5079  000A' 1683               	bsf	3,5	;RP0=1, select bank1
  5080  000B' 1303               	bcf	3,6	;RP1=0, select bank1
  5081  000C' 0800'              	movf	(convert_time_to_UTC@UTC_Time+3)^(0+128),w
  5082  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  5083  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  5084  000F' 0091'              	movwf	___lldiv@dividend+3
  5085  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  5086  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  5087  0012' 0800'              	movf	(convert_time_to_UTC@UTC_Time+2)^(0+128),w
  5088  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  5089  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  5090  0015' 0090'              	movwf	___lldiv@dividend+2
  5091  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  5092  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  5093  0018' 0800'              	movf	(convert_time_to_UTC@UTC_Time+1)^(0+128),w
  5094  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  5095  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  5096  001B' 008F'              	movwf	___lldiv@dividend+1
  5097  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  5098  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  5099  001E' 0800'              	movf	convert_time_to_UTC@UTC_Time^(0+128),w
  5100  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  5101  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  5102  0021' 008E'              	movwf	___lldiv@dividend
  5103  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  5104  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  5105  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  5106  0029' 080B'              	movf	?___lldiv+1,w
  5107  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  5108  002B' 1303               	bcf	3,6	;RP1=0, select bank1
  5109  002C' 0080'              	movwf	(convert_time_to_UTC@hour+1)^(0+128)
  5110  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  5111  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  5112  002F' 080A'              	movf	?___lldiv,w
  5113  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  5114  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  5115  0032' 0080'              	movwf	convert_time_to_UTC@hour^(0+128)
  5116                           
  5117                           ;gps_test.c: 180: min = (UTC_Time % 10000) / 100;
  5118  0033' 3000               	movlw	0
  5119  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  5120  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  5121  0036' 008D'              	movwf	___lldiv@divisor+3
  5122  0037' 3000               	movlw	0
  5123  0038' 008C'              	movwf	___lldiv@divisor+2
  5124  0039' 3000               	movlw	0
  5125  003A' 008B'              	movwf	___lldiv@divisor+1
  5126  003B' 3064               	movlw	100
  5127  003C' 008A'              	movwf	___lldiv@divisor
  5128  003D' 1683               	bsf	3,5	;RP0=1, select bank1
  5129  003E' 1303               	bcf	3,6	;RP1=0, select bank1
  5130  003F' 0800'              	movf	(convert_time_to_UTC@UTC_Time+3)^(0+128),w
  5131  0040' 1283               	bcf	3,5	;RP0=0, select bank0
  5132  0041' 1303               	bcf	3,6	;RP1=0, select bank0
  5133  0042' 0087'              	movwf	___llmod@dividend+3
  5134  0043' 1683               	bsf	3,5	;RP0=1, select bank1
  5135  0044' 1303               	bcf	3,6	;RP1=0, select bank1
  5136  0045' 0800'              	movf	(convert_time_to_UTC@UTC_Time+2)^(0+128),w
  5137  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  5138  0047' 1303               	bcf	3,6	;RP1=0, select bank0
  5139  0048' 0086'              	movwf	___llmod@dividend+2
  5140  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  5141  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  5142  004B' 0800'              	movf	(convert_time_to_UTC@UTC_Time+1)^(0+128),w
  5143  004C' 1283               	bcf	3,5	;RP0=0, select bank0
  5144  004D' 1303               	bcf	3,6	;RP1=0, select bank0
  5145  004E' 0085'              	movwf	___llmod@dividend+1
  5146  004F' 1683               	bsf	3,5	;RP0=1, select bank1
  5147  0050' 1303               	bcf	3,6	;RP1=0, select bank1
  5148  0051' 0800'              	movf	convert_time_to_UTC@UTC_Time^(0+128),w
  5149  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  5150  0053' 1303               	bcf	3,6	;RP1=0, select bank0
  5151  0054' 0084'              	movwf	___llmod@dividend
  5152  0055' 3000               	movlw	0
  5153  0056' 0083'              	movwf	___llmod@divisor+3
  5154  0057' 3000               	movlw	0
  5155  0058' 0082'              	movwf	___llmod@divisor+2
  5156  0059' 3027               	movlw	39
  5157  005A' 0081'              	movwf	___llmod@divisor+1
  5158  005B' 3010               	movlw	16
  5159  005C' 0080'              	movwf	___llmod@divisor
  5160  005D' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  5161  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  5162  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  5163  0064' 0803'              	movf	?___llmod+3,w
  5164  0065' 0091'              	movwf	___lldiv@dividend+3
  5165  0066' 0802'              	movf	?___llmod+2,w
  5166  0067' 0090'              	movwf	___lldiv@dividend+2
  5167  0068' 0801'              	movf	?___llmod+1,w
  5168  0069' 008F'              	movwf	___lldiv@dividend+1
  5169  006A' 0800'              	movf	?___llmod,w
  5170  006B' 008E'              	movwf	___lldiv@dividend
  5171  006C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  5172  0071' 1283               	bcf	3,5	;RP0=0, select bank0
  5173  0072' 1303               	bcf	3,6	;RP1=0, select bank0
  5174  0073' 080B'              	movf	?___lldiv+1,w
  5175  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  5176  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  5177  0076' 0080'              	movwf	(convert_time_to_UTC@min+1)^(0+128)
  5178  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  5179  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  5180  0079' 080A'              	movf	?___lldiv,w
  5181  007A' 1683               	bsf	3,5	;RP0=1, select bank1
  5182  007B' 1303               	bcf	3,6	;RP1=0, select bank1
  5183  007C' 0080'              	movwf	convert_time_to_UTC@min^(0+128)
  5184                           
  5185                           ;gps_test.c: 181: sec = (UTC_Time % 10000) % 100;
  5186  007D' 0800'              	movf	(convert_time_to_UTC@UTC_Time+3)^(0+128),w
  5187  007E' 1283               	bcf	3,5	;RP0=0, select bank0
  5188  007F' 1303               	bcf	3,6	;RP1=0, select bank0
  5189  0080' 0087'              	movwf	___llmod@dividend+3
  5190  0081' 1683               	bsf	3,5	;RP0=1, select bank1
  5191  0082' 1303               	bcf	3,6	;RP1=0, select bank1
  5192  0083' 0800'              	movf	(convert_time_to_UTC@UTC_Time+2)^(0+128),w
  5193  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  5194  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  5195  0086' 0086'              	movwf	___llmod@dividend+2
  5196  0087' 1683               	bsf	3,5	;RP0=1, select bank1
  5197  0088' 1303               	bcf	3,6	;RP1=0, select bank1
  5198  0089' 0800'              	movf	(convert_time_to_UTC@UTC_Time+1)^(0+128),w
  5199  008A' 1283               	bcf	3,5	;RP0=0, select bank0
  5200  008B' 1303               	bcf	3,6	;RP1=0, select bank0
  5201  008C' 0085'              	movwf	___llmod@dividend+1
  5202  008D' 1683               	bsf	3,5	;RP0=1, select bank1
  5203  008E' 1303               	bcf	3,6	;RP1=0, select bank1
  5204  008F' 0800'              	movf	convert_time_to_UTC@UTC_Time^(0+128),w
  5205  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  5206  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  5207  0092' 0084'              	movwf	___llmod@dividend
  5208  0093' 3000               	movlw	0
  5209  0094' 0083'              	movwf	___llmod@divisor+3
  5210  0095' 3000               	movlw	0
  5211  0096' 0082'              	movwf	___llmod@divisor+2
  5212  0097' 3027               	movlw	39
  5213  0098' 0081'              	movwf	___llmod@divisor+1
  5214  0099' 3010               	movlw	16
  5215  009A' 0080'              	movwf	___llmod@divisor
  5216  009B' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  5217  00A0' 1283               	bcf	3,5	;RP0=0, select bank0
  5218  00A1' 1303               	bcf	3,6	;RP1=0, select bank0
  5219  00A2' 0803'              	movf	?___llmod+3,w
  5220  00A3' 1683               	bsf	3,5	;RP0=1, select bank1
  5221  00A4' 1303               	bcf	3,6	;RP1=0, select bank1
  5222  00A5' 0080'              	movwf	(_convert_time_to_UTC$923+3)^(0+128)
  5223  00A6' 1283               	bcf	3,5	;RP0=0, select bank0
  5224  00A7' 1303               	bcf	3,6	;RP1=0, select bank0
  5225  00A8' 0802'              	movf	?___llmod+2,w
  5226  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
  5227  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
  5228  00AB' 0080'              	movwf	(_convert_time_to_UTC$923+2)^(0+128)
  5229  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  5230  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  5231  00AE' 0801'              	movf	?___llmod+1,w
  5232  00AF' 1683               	bsf	3,5	;RP0=1, select bank1
  5233  00B0' 1303               	bcf	3,6	;RP1=0, select bank1
  5234  00B1' 0080'              	movwf	(_convert_time_to_UTC$923+1)^(0+128)
  5235  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
  5236  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
  5237  00B4' 0800'              	movf	?___llmod,w
  5238  00B5' 1683               	bsf	3,5	;RP0=1, select bank1
  5239  00B6' 1303               	bcf	3,6	;RP1=0, select bank1
  5240  00B7' 0080'              	movwf	_convert_time_to_UTC$923^(0+128)
  5241                           
  5242                           ;gps_test.c: 181: sec = (UTC_Time % 10000) % 100;
  5243  00B8' 3000               	movlw	0
  5244  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  5245  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  5246  00BB' 0083'              	movwf	___llmod@divisor+3
  5247  00BC' 3000               	movlw	0
  5248  00BD' 0082'              	movwf	___llmod@divisor+2
  5249  00BE' 3000               	movlw	0
  5250  00BF' 0081'              	movwf	___llmod@divisor+1
  5251  00C0' 3064               	movlw	100
  5252  00C1' 0080'              	movwf	___llmod@divisor
  5253  00C2' 1683               	bsf	3,5	;RP0=1, select bank1
  5254  00C3' 1303               	bcf	3,6	;RP1=0, select bank1
  5255  00C4' 0800'              	movf	(_convert_time_to_UTC$923+3)^(0+128),w
  5256  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  5257  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  5258  00C7' 0087'              	movwf	___llmod@dividend+3
  5259  00C8' 1683               	bsf	3,5	;RP0=1, select bank1
  5260  00C9' 1303               	bcf	3,6	;RP1=0, select bank1
  5261  00CA' 0800'              	movf	(_convert_time_to_UTC$923+2)^(0+128),w
  5262  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  5263  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  5264  00CD' 0086'              	movwf	___llmod@dividend+2
  5265  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  5266  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  5267  00D0' 0800'              	movf	(_convert_time_to_UTC$923+1)^(0+128),w
  5268  00D1' 1283               	bcf	3,5	;RP0=0, select bank0
  5269  00D2' 1303               	bcf	3,6	;RP1=0, select bank0
  5270  00D3' 0085'              	movwf	___llmod@dividend+1
  5271  00D4' 1683               	bsf	3,5	;RP0=1, select bank1
  5272  00D5' 1303               	bcf	3,6	;RP1=0, select bank1
  5273  00D6' 0800'              	movf	_convert_time_to_UTC$923^(0+128),w
  5274  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  5275  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  5276  00D9' 0084'              	movwf	___llmod@dividend
  5277  00DA' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  5278  00DF' 1283               	bcf	3,5	;RP0=0, select bank0
  5279  00E0' 1303               	bcf	3,6	;RP1=0, select bank0
  5280  00E1' 0801'              	movf	?___llmod+1,w
  5281  00E2' 1683               	bsf	3,5	;RP0=1, select bank1
  5282  00E3' 1303               	bcf	3,6	;RP1=0, select bank1
  5283  00E4' 0080'              	movwf	(convert_time_to_UTC@sec+1)^(0+128)
  5284  00E5' 1283               	bcf	3,5	;RP0=0, select bank0
  5285  00E6' 1303               	bcf	3,6	;RP1=0, select bank0
  5286  00E7' 0800'              	movf	?___llmod,w
  5287  00E8' 1683               	bsf	3,5	;RP0=1, select bank1
  5288  00E9' 1303               	bcf	3,6	;RP1=0, select bank1
  5289  00EA' 0080'              	movwf	convert_time_to_UTC@sec^(0+128)
  5290                           
  5291                           ;gps_test.c: 183: sprintf(Data_Buffer, "%d:%d:%d", hour,min,sec);
  5292  00EB' 3000'              	movlw	(low (_Data_Buffer| (0+256)))& (0+255)
  5293  00EC' 1283               	bcf	3,5	;RP0=0, select bank0
  5294  00ED' 1303               	bcf	3,6	;RP1=0, select bank0
  5295  00EE' 00C7'              	movwf	sprintf@sp
  5296  00EF' 3001               	movlw	1
  5297  00F0' 00C8'              	movwf	sprintf@sp+1
  5298  00F1' 3077               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  5299  00F2' 1683               	bsf	3,5	;RP0=1, select bank1
  5300  00F3' 1303               	bcf	3,6	;RP1=0, select bank1
  5301  00F4' 0080'              	movwf	??_convert_time_to_UTC^(0+128)
  5302  00F5' 0800'              	movf	??_convert_time_to_UTC^(0+128),w
  5303  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
  5304  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
  5305  00F8' 00C9'              	movwf	sprintf@f
  5306  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
  5307  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
  5308  00FB' 0800'              	movf	(convert_time_to_UTC@hour+1)^(0+128),w
  5309  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
  5310  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
  5311  00FE' 00CB'              	movwf	?_sprintf+4
  5312  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
  5313  0100' 1303               	bcf	3,6	;RP1=0, select bank1
  5314  0101' 0800'              	movf	convert_time_to_UTC@hour^(0+128),w
  5315  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  5316  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  5317  0104' 00CA'              	movwf	?_sprintf+3
  5318  0105' 1683               	bsf	3,5	;RP0=1, select bank1
  5319  0106' 1303               	bcf	3,6	;RP1=0, select bank1
  5320  0107' 0800'              	movf	(convert_time_to_UTC@min+1)^(0+128),w
  5321  0108' 1283               	bcf	3,5	;RP0=0, select bank0
  5322  0109' 1303               	bcf	3,6	;RP1=0, select bank0
  5323  010A' 00CD'              	movwf	?_sprintf+6
  5324  010B' 1683               	bsf	3,5	;RP0=1, select bank1
  5325  010C' 1303               	bcf	3,6	;RP1=0, select bank1
  5326  010D' 0800'              	movf	convert_time_to_UTC@min^(0+128),w
  5327  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  5328  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  5329  0110' 00CC'              	movwf	?_sprintf+5
  5330  0111' 1683               	bsf	3,5	;RP0=1, select bank1
  5331  0112' 1303               	bcf	3,6	;RP1=0, select bank1
  5332  0113' 0800'              	movf	(convert_time_to_UTC@sec+1)^(0+128),w
  5333  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  5334  0115' 1303               	bcf	3,6	;RP1=0, select bank0
  5335  0116' 00CF'              	movwf	?_sprintf+8
  5336  0117' 1683               	bsf	3,5	;RP0=1, select bank1
  5337  0118' 1303               	bcf	3,6	;RP1=0, select bank1
  5338  0119' 0800'              	movf	convert_time_to_UTC@sec^(0+128),w
  5339  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  5340  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  5341  011C' 00CE'              	movwf	?_sprintf+7
  5342  011D' 120A' 118A' 2000'  	fcall	_sprintf
  5343  0120' 0008               	return
  5344  0121'                    __end_of_convert_time_to_UTC:	
  5345                           
  5346                           	psect	text17
  5347  0000'                    __ptext17:	
  5348 ;; *************** function _sprintf *****************
  5349 ;; Defined at:
  5350 ;;		line 492 in file "D:\mplab\sources\common\doprnt.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  sp              2   71[BANK0 ] PTR unsigned char 
  5353 ;;		 -> Data_Buffer(15), main@GPS_Buffer(15), 
  5354 ;;  f               1   73[BANK0 ] PTR const unsigned char 
  5355 ;;		 -> STR_7(9), STR_4(6), STR_2(6), 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  val             4   18[BANK1 ] unsigned long 
  5358 ;;  tmpval          4   14[BANK1 ] struct .
  5359 ;;  fval            3   24[BANK1 ] struct .
  5360 ;;  prec            2   22[BANK1 ] int 
  5361 ;;  exp             2   12[BANK1 ] int 
  5362 ;;  flag            2   10[BANK1 ] unsigned short 
  5363 ;;  cp              2    0        PTR const unsigned char 
  5364 ;;  len             2    0        unsigned int 
  5365 ;;  width           2    0        int 
  5366 ;;  c               1   27[BANK1 ] char 
  5367 ;;  ap              1    9[BANK1 ] PTR void [1]
  5368 ;;		 -> ?_sprintf(2), 
  5369 ;;  d               1    0        unsigned char 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2   71[BANK0 ] int 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5379 ;;      Params:         0       9       0       0       0
  5380 ;;      Locals:         0       0      22       0       0
  5381 ;;      Temps:          0       0       6       0       0
  5382 ;;      Totals:         0       9      28       0       0
  5383 ;;Total ram usage:       37 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    4
  5386 ;; This function calls:
  5387 ;;		___awdiv
  5388 ;;		___ftadd
  5389 ;;		___ftge
  5390 ;;		___ftmul
  5391 ;;		___ftneg
  5392 ;;		___ftsub
  5393 ;;		___fttol
  5394 ;;		___lldiv
  5395 ;;		___llmod
  5396 ;;		___lltoft
  5397 ;;		___wmul
  5398 ;;		__div_to_l_
  5399 ;;		__tdiv_to_l_
  5400 ;;		_fround
  5401 ;;		_isdigit
  5402 ;;		_scale
  5403 ;; This function is called by:
  5404 ;;		_main
  5405 ;;		_convert_time_to_UTC
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _sprintf
  5411  0000'                    _sprintf:	
  5412                           
  5413                           ;doprnt.c: 494: va_list ap;
  5414                           ;doprnt.c: 499: signed char c;
  5415                           ;doprnt.c: 501: int width;
  5416                           ;doprnt.c: 504: int prec;
  5417                           ;doprnt.c: 508: unsigned short flag;
  5418                           ;doprnt.c: 515: char d;
  5419                           ;doprnt.c: 516: double fval;
  5420                           ;doprnt.c: 517: int exp;
  5421                           ;doprnt.c: 523: union {
  5422                           ;doprnt.c: 524: unsigned long vd;
  5423                           ;doprnt.c: 525: double integ;
  5424                           ;doprnt.c: 526: } tmpval;
  5425                           ;doprnt.c: 528: unsigned long val;
  5426                           ;doprnt.c: 529: unsigned len;
  5427                           ;doprnt.c: 530: const char * cp;
  5428                           ;doprnt.c: 533: *ap = __va_start();
  5429                           
  5430                           ;incstack = 0
  5431                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5432  0000' 3000'              	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  5433  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  5434  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  5435  0003' 0080'              	movwf	??_sprintf^(0+128)
  5436  0004' 0800'              	movf	??_sprintf^(0+128),w
  5437  0005' 0080'              	movwf	sprintf@ap^(0+128)
  5438  0006'                    l4878:	
  5439                           ;doprnt.c: 536: while(c = *f++) {
  5440                           
  5441  0006' 3001               	movlw	1
  5442  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  5443  0008' 07C9'              	addwf	sprintf@f,f
  5444  0009' 30FF               	movlw	-1
  5445  000A' 0749'              	addwf	sprintf@f,w
  5446  000B' 0084               	movwf	4
  5447  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5448  0011' 1683               	bsf	3,5	;RP0=1, select bank1
  5449  0012' 1303               	bcf	3,6	;RP1=0, select bank1
  5450  0013' 0080'              	movwf	??_sprintf^(0+128)
  5451  0014' 0800'              	movf	??_sprintf^(0+128),w
  5452  0015' 0080'              	movwf	sprintf@c^(0+128)
  5453  0016' 0800'              	movf	sprintf@c^(0+128),w
  5454  0017' 1903               	btfsc	3,2
  5455  0018' 2800'              	goto	L12
  5456                           
  5457                           ;doprnt.c: 538: if(c != '%')
  5458  0019' 3025               	movlw	37
  5459  001A' 0600'              	xorwf	sprintf@c^(0+128),w
  5460  001B' 1903               	btfsc	3,2
  5461  001C' 2800'              	goto	l4662
  5462                           
  5463                           ;doprnt.c: 540: {
  5464                           ;doprnt.c: 541: ((*sp++ = (c)));
  5465  001D' 0800'              	movf	sprintf@c^(0+128),w
  5466  001E' 0080'              	movwf	??_sprintf^(0+128)
  5467  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  5468  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  5469  0021' 0847'              	movf	sprintf@sp,w
  5470  0022' 0084               	movwf	4
  5471  0023' 1783               	bsf	3,7
  5472  0024' 1C48'              	btfss	sprintf@sp+1,0
  5473  0025' 1383               	bcf	3,7
  5474  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  5475  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  5476  0028' 0800'              	movf	??_sprintf^(0+128),w
  5477  0029' 0080               	movwf	0
  5478  002A' 3001               	movlw	1
  5479  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  5480  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  5481  002D' 07C7'              	addwf	sprintf@sp,f
  5482  002E' 1803               	skipnc
  5483  002F' 0AC8'              	incf	sprintf@sp+1,f
  5484                           
  5485                           ;doprnt.c: 542: continue;
  5486  0030' 2800'              	goto	l4878
  5487  0031'                    l4662:	
  5488                           
  5489                           ;doprnt.c: 543: }
  5490                           ;doprnt.c: 548: flag = 0;
  5491  0031' 1683               	bsf	3,5	;RP0=1, select bank1
  5492  0032' 1303               	bcf	3,6	;RP1=0, select bank1
  5493  0033' 0180'              	clrf	sprintf@flag^(0+128)
  5494  0034' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  5495                           
  5496                           ;doprnt.c: 611: if(*f == '.') {
  5497  0035' 1283               	bcf	3,5	;RP0=0, select bank0
  5498  0036' 1303               	bcf	3,6	;RP1=0, select bank0
  5499  0037' 0849'              	movf	sprintf@f,w
  5500  0038' 0084               	movwf	4
  5501  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5502  003E' 3A2E               	xorlw	46
  5503  003F' 1D03               	skipz
  5504  0040' 2800'              	goto	l4678
  5505                           
  5506                           ;doprnt.c: 612: flag |= 0x4000;
  5507  0041' 1683               	bsf	3,5	;RP0=1, select bank1
  5508  0042' 1303               	bcf	3,6	;RP1=0, select bank1
  5509  0043' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  5510                           
  5511                           ;doprnt.c: 613: f++;
  5512  0044' 3001               	movlw	1
  5513  0045' 0080'              	movwf	??_sprintf^(0+128)
  5514  0046' 0800'              	movf	??_sprintf^(0+128),w
  5515  0047' 1283               	bcf	3,5	;RP0=0, select bank0
  5516  0048' 1303               	bcf	3,6	;RP1=0, select bank0
  5517  0049' 07C9'              	addwf	sprintf@f,f
  5518                           
  5519                           ;doprnt.c: 620: {
  5520                           ;doprnt.c: 621: prec = 0;
  5521  004A' 1683               	bsf	3,5	;RP0=1, select bank1
  5522  004B' 1303               	bcf	3,6	;RP1=0, select bank1
  5523  004C' 0180'              	clrf	sprintf@prec^(0+128)
  5524  004D' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  5525  004E'                    l4676:	
  5526                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5527                           
  5528  004E' 1283               	bcf	3,5	;RP0=0, select bank0
  5529  004F' 0849'              	movf	sprintf@f,w
  5530  0050' 0084               	movwf	4
  5531  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5532  0056' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  5533  005B' 1C03               	btfss	3,0
  5534  005C' 2800'              	goto	l4684
  5535                           
  5536                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5537  005D' 1683               	bsf	3,5	;RP0=1, select bank1
  5538  005E' 1303               	bcf	3,6	;RP1=0, select bank1
  5539  005F' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  5540  0060' 1283               	bcf	3,5	;RP0=0, select bank0
  5541  0061' 1303               	bcf	3,6	;RP1=0, select bank0
  5542  0062' 0081'              	movwf	___wmul@multiplier+1
  5543  0063' 1683               	bsf	3,5	;RP0=1, select bank1
  5544  0064' 1303               	bcf	3,6	;RP1=0, select bank1
  5545  0065' 0800'              	movf	sprintf@prec^(0+128),w
  5546  0066' 1283               	bcf	3,5	;RP0=0, select bank0
  5547  0067' 1303               	bcf	3,6	;RP1=0, select bank0
  5548  0068' 0080'              	movwf	___wmul@multiplier
  5549  0069' 300A               	movlw	10
  5550  006A' 0082'              	movwf	___wmul@multiplicand
  5551  006B' 3000               	movlw	0
  5552  006C' 0083'              	movwf	___wmul@multiplicand+1
  5553  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  5554  0072' 1283               	bcf	3,5	;RP0=0, select bank0
  5555  0073' 1303               	bcf	3,6	;RP1=0, select bank0
  5556  0074' 0849'              	movf	sprintf@f,w
  5557  0075' 0084               	movwf	4
  5558  0076' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5559  007B' 0700'              	addwf	?___wmul,w
  5560  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  5561  007D' 1303               	bcf	3,6	;RP1=0, select bank1
  5562  007E' 0080'              	movwf	??_sprintf^(0+128)
  5563  007F' 3000               	movlw	0
  5564  0080' 1803               	skipnc
  5565  0081' 3001               	movlw	1
  5566  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  5567  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  5568  0084' 0701'              	addwf	?___wmul+1,w
  5569  0085' 1683               	bsf	3,5	;RP0=1, select bank1
  5570  0086' 1303               	bcf	3,6	;RP1=0, select bank1
  5571  0087' 0080'              	movwf	(??_sprintf+1)^(0+128)
  5572  0088' 0800'              	movf	??_sprintf^(0+128),w
  5573  0089' 3ED0               	addlw	208
  5574  008A' 0080'              	movwf	sprintf@prec^(0+128)
  5575  008B' 0800'              	movf	(??_sprintf+1)^(0+128),w
  5576  008C' 1803               	skipnc
  5577  008D' 3E01               	addlw	1
  5578  008E' 3EFF               	addlw	255
  5579  008F' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  5580  0090' 3001               	movlw	1
  5581  0091' 0080'              	movwf	??_sprintf^(0+128)
  5582  0092' 0800'              	movf	??_sprintf^(0+128),w
  5583  0093' 1283               	bcf	3,5	;RP0=0, select bank0
  5584  0094' 1303               	bcf	3,6	;RP1=0, select bank0
  5585  0095' 07C9'              	addwf	sprintf@f,f
  5586  0096' 2800'              	goto	l4676
  5587  0097'                    l4678:	
  5588                           ;doprnt.c: 624: }
  5589                           ;doprnt.c: 625: } else {
  5590                           
  5591                           
  5592                           ;doprnt.c: 626: prec = 0;
  5593  0097' 1683               	bsf	3,5	;RP0=1, select bank1
  5594  0098' 1303               	bcf	3,6	;RP1=0, select bank1
  5595  0099' 0180'              	clrf	sprintf@prec^(0+128)
  5596  009A' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  5597                           
  5598                           ;doprnt.c: 628: flag |= 0x1000;
  5599  009B' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  5600                           
  5601                           ;doprnt.c: 630: }
  5602                           ;doprnt.c: 635: switch(c = *f++) {
  5603  009C' 2800'              	goto	l4684
  5604  009D'                    l246:	
  5605                           ;doprnt.c: 662: case 'f':
  5606                           
  5607                           ;doprnt.c: 638: goto alldone;
  5608                           
  5609                           ;doprnt.c: 637: case 0:
  5610                           
  5611                           
  5612                           ;doprnt.c: 663: flag |= 0x400;
  5613  009D' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  5614                           
  5615                           ;doprnt.c: 698: case 'i':
  5616                           ;doprnt.c: 699: break;
  5617                           
  5618                           ;doprnt.c: 697: case 'd':
  5619                           
  5620                           ;doprnt.c: 664: break;
  5621  009E' 2800'              	goto	l4686
  5622  009F'                    l4684:	
  5623                           ;doprnt.c: 822: }
  5624                           
  5625                           ;doprnt.c: 813: continue;
  5626                           
  5627                           ;doprnt.c: 802: default:
  5628                           
  5629  009F' 3001               	movlw	1
  5630  00A0' 1283               	bcf	3,5	;RP0=0, select bank0
  5631  00A1' 1303               	bcf	3,6	;RP1=0, select bank0
  5632  00A2' 07C9'              	addwf	sprintf@f,f
  5633  00A3' 30FF               	movlw	-1
  5634  00A4' 0749'              	addwf	sprintf@f,w
  5635  00A5' 0084               	movwf	4
  5636  00A6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5637  00AB' 1683               	bsf	3,5	;RP0=1, select bank1
  5638  00AC' 1303               	bcf	3,6	;RP1=0, select bank1
  5639  00AD' 0080'              	movwf	sprintf@c^(0+128)
  5640                           
  5641                           ; Switch size 1, requested type "space"
  5642                           ; Number of cases is 4, Range of values is 0 to 105
  5643                           ; switch strategies available:
  5644                           ; Name         Instructions Cycles
  5645                           ; simple_byte           13     7 (average)
  5646                           ; jumptable            260     6 (fixed)
  5647                           ;	Chosen strategy is simple_byte
  5648  00AE' 3A00               	xorlw	0	; case 0
  5649  00AF' 1903               	skipnz
  5650  00B0' 2800'              	goto	L12
  5651  00B1' 3A64               	xorlw	100	; case 100
  5652  00B2' 1903               	skipnz
  5653  00B3' 2800'              	goto	l4686
  5654  00B4' 3A02               	xorlw	2	; case 102
  5655  00B5' 1903               	skipnz
  5656  00B6' 2800'              	goto	l246
  5657  00B7' 3A0F               	xorlw	15	; case 105
  5658  00B8' 1903               	skipnz
  5659  00B9' 2800'              	goto	l4686
  5660  00BA' 2800'              	goto	l4878
  5661  00BB'                    l4686:	
  5662                           
  5663                           ;doprnt.c: 825: if(flag & (0x700)) {
  5664  00BB' 3000               	movlw	0
  5665  00BC' 0500'              	andwf	sprintf@flag^(0+128),w
  5666  00BD' 0080'              	movwf	??_sprintf^(0+128)
  5667  00BE' 3007               	movlw	7
  5668  00BF' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  5669  00C0' 0080'              	movwf	(??_sprintf+1)^(0+128)
  5670  00C1' 0800'              	movf	??_sprintf^(0+128),w
  5671  00C2' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  5672  00C3' 1903               	btfsc	3,2
  5673  00C4' 2800'              	goto	L14
  5674                           
  5675                           ;doprnt.c: 827: if(flag & 0x1000)
  5676  00C5' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  5677  00C6' 2800'              	goto	l4692
  5678                           
  5679                           ;doprnt.c: 829: prec = 6;
  5680  00C7' 3006               	movlw	6
  5681  00C8' 0080'              	movwf	sprintf@prec^(0+128)
  5682  00C9' 3000               	movlw	0
  5683  00CA' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  5684  00CB'                    l4692:	
  5685                           
  5686                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5687  00CB' 0800'              	movf	sprintf@ap^(0+128),w
  5688  00CC' 0084               	movwf	4
  5689  00CD' 1383               	bcf	3,7	;select IRP bank0
  5690  00CE' 0800               	movf	0,w
  5691  00CF' 0080'              	movwf	sprintf@fval^(0+128)
  5692  00D0' 0A84               	incf	4,f
  5693  00D1' 0800               	movf	0,w
  5694  00D2' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  5695  00D3' 0A84               	incf	4,f
  5696  00D4' 0800               	movf	0,w
  5697  00D5' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  5698  00D6' 3003               	movlw	3
  5699  00D7' 0080'              	movwf	??_sprintf^(0+128)
  5700  00D8' 0800'              	movf	??_sprintf^(0+128),w
  5701  00D9' 0780'              	addwf	sprintf@ap^(0+128),f
  5702                           
  5703                           ;doprnt.c: 831: if(fval < 0.0) {
  5704  00DA' 0800'              	movf	sprintf@fval^(0+128),w
  5705  00DB' 1283               	bcf	3,5	;RP0=0, select bank0
  5706  00DC' 1303               	bcf	3,6	;RP1=0, select bank0
  5707  00DD' 0080'              	movwf	___ftge@ff1
  5708  00DE' 1683               	bsf	3,5	;RP0=1, select bank1
  5709  00DF' 1303               	bcf	3,6	;RP1=0, select bank1
  5710  00E0' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5711  00E1' 1283               	bcf	3,5	;RP0=0, select bank0
  5712  00E2' 1303               	bcf	3,6	;RP1=0, select bank0
  5713  00E3' 0081'              	movwf	___ftge@ff1+1
  5714  00E4' 1683               	bsf	3,5	;RP0=1, select bank1
  5715  00E5' 1303               	bcf	3,6	;RP1=0, select bank1
  5716  00E6' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5717  00E7' 1283               	bcf	3,5	;RP0=0, select bank0
  5718  00E8' 1303               	bcf	3,6	;RP1=0, select bank0
  5719  00E9' 0082'              	movwf	___ftge@ff1+2
  5720  00EA' 3000               	movlw	0
  5721  00EB' 0083'              	movwf	___ftge@ff2
  5722  00EC' 3000               	movlw	0
  5723  00ED' 0084'              	movwf	___ftge@ff2+1
  5724  00EE' 3000               	movlw	0
  5725  00EF' 0085'              	movwf	___ftge@ff2+2
  5726  00F0' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  5727  00F5' 1803               	btfsc	3,0
  5728  00F6' 2800'              	goto	l4702
  5729                           
  5730                           ;doprnt.c: 832: fval = -fval;
  5731  00F7' 1683               	bsf	3,5	;RP0=1, select bank1
  5732  00F8' 1303               	bcf	3,6	;RP1=0, select bank1
  5733  00F9' 0800'              	movf	sprintf@fval^(0+128),w
  5734  00FA' 1283               	bcf	3,5	;RP0=0, select bank0
  5735  00FB' 1303               	bcf	3,6	;RP1=0, select bank0
  5736  00FC' 00A4'              	movwf	___ftneg@f1
  5737  00FD' 1683               	bsf	3,5	;RP0=1, select bank1
  5738  00FE' 1303               	bcf	3,6	;RP1=0, select bank1
  5739  00FF' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5740  0100' 1283               	bcf	3,5	;RP0=0, select bank0
  5741  0101' 1303               	bcf	3,6	;RP1=0, select bank0
  5742  0102' 00A5'              	movwf	___ftneg@f1+1
  5743  0103' 1683               	bsf	3,5	;RP0=1, select bank1
  5744  0104' 1303               	bcf	3,6	;RP1=0, select bank1
  5745  0105' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5746  0106' 1283               	bcf	3,5	;RP0=0, select bank0
  5747  0107' 1303               	bcf	3,6	;RP1=0, select bank0
  5748  0108' 00A6'              	movwf	___ftneg@f1+2
  5749  0109' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  5750  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  5751  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  5752  0110' 0824'              	movf	?___ftneg,w
  5753  0111' 1683               	bsf	3,5	;RP0=1, select bank1
  5754  0112' 1303               	bcf	3,6	;RP1=0, select bank1
  5755  0113' 0080'              	movwf	sprintf@fval^(0+128)
  5756  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  5757  0115' 1303               	bcf	3,6	;RP1=0, select bank0
  5758  0116' 0825'              	movf	?___ftneg+1,w
  5759  0117' 1683               	bsf	3,5	;RP0=1, select bank1
  5760  0118' 1303               	bcf	3,6	;RP1=0, select bank1
  5761  0119' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  5762  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  5763  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  5764  011C' 0826'              	movf	?___ftneg+2,w
  5765  011D' 1683               	bsf	3,5	;RP0=1, select bank1
  5766  011E' 1303               	bcf	3,6	;RP1=0, select bank1
  5767  011F' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  5768                           
  5769                           ;doprnt.c: 833: flag |= 0x03;
  5770  0120' 3003               	movlw	3
  5771  0121' 0480'              	iorwf	sprintf@flag^(0+128),f
  5772  0122' 3000               	movlw	0
  5773  0123' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  5774  0124'                    l4702:	
  5775                           
  5776                           ;doprnt.c: 834: }
  5777                           ;doprnt.c: 835: exp = 0;
  5778  0124' 1683               	bsf	3,5	;RP0=1, select bank1
  5779  0125' 1303               	bcf	3,6	;RP1=0, select bank1
  5780  0126' 0180'              	clrf	sprintf@exp^(0+128)
  5781  0127' 0180'              	clrf	(sprintf@exp+1)^(0+128)
  5782                           
  5783                           ;doprnt.c: 836: if( fval!=0) {
  5784  0128' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5785  0129' 0400'              	iorwf	(sprintf@fval+1)^(0+128),w
  5786  012A' 0400'              	iorwf	sprintf@fval^(0+128),w
  5787  012B' 1903               	skipnz
  5788  012C' 2800'              	goto	l4730
  5789                           
  5790                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  5791  012D' 3000'              	movlw	low (sprintf@fval| 0)
  5792  012E' 0084               	movwf	4
  5793  012F' 1383               	bcf	3,7	;select IRP bank1
  5794  0130' 0800               	movf	0,w
  5795  0131' 0080'              	movwf	??_sprintf^(0+128)
  5796  0132' 0A84               	incf	4,f
  5797  0133' 0800               	movf	0,w
  5798  0134' 0081'              	movwf	(??_sprintf^(0+128)+1)
  5799  0135' 0A84               	incf	4,f
  5800  0136' 0800               	movf	0,w
  5801  0137' 0082'              	movwf	(??_sprintf^(0+128)+2)
  5802  0138' 0A84               	incf	4,f
  5803  0139' 0800               	movf	0,w
  5804  013A' 0083'              	movwf	(??_sprintf^(0+128)+3)
  5805  013B' 300F               	movlw	15
  5806  013C'                    u7695:	
  5807  013C' 1003               	clrc
  5808  013D' 0C83'              	rrf	(??_sprintf^(0+128)+3),f
  5809  013E' 0C82'              	rrf	(??_sprintf^(0+128)+2),f
  5810  013F' 0C81'              	rrf	(??_sprintf^(0+128)+1),f
  5811  0140' 0C80'              	rrf	??_sprintf^(0+128),f
  5812  0141' 3EFF               	addlw	-1
  5813  0142' 1D03               	skipz
  5814  0143' 2800'              	goto	u7695
  5815  0144' 30FF               	movlw	255
  5816  0145' 0500'              	andwf	??_sprintf^(0+128),w
  5817  0146' 0080'              	movwf	(??_sprintf+4)^(0+128)
  5818  0147' 3000               	movlw	0
  5819  0148' 0500'              	andwf	(??_sprintf+1)^(0+128),w
  5820  0149' 0080'              	movwf	(??_sprintf+5)^(0+128)
  5821  014A' 0800'              	movf	(??_sprintf+4)^(0+128),w
  5822  014B' 3E82               	addlw	130
  5823  014C' 0080'              	movwf	sprintf@exp^(0+128)
  5824  014D' 0800'              	movf	(??_sprintf+5)^(0+128),w
  5825  014E' 1803               	skipnc
  5826  014F' 3E01               	addlw	1
  5827  0150' 3EFF               	addlw	255
  5828  0151' 0080'              	movwf	(sprintf@exp+1)^(0+128)
  5829                           
  5830                           ;doprnt.c: 838: exp--;
  5831  0152' 30FF               	movlw	255
  5832  0153' 0780'              	addwf	sprintf@exp^(0+128),f
  5833  0154' 1803               	skipnc
  5834  0155' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5835  0156' 30FF               	movlw	255
  5836  0157' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5837                           
  5838                           ;doprnt.c: 839: exp *= 3;
  5839  0158' 3003               	movlw	3
  5840  0159' 1283               	bcf	3,5	;RP0=0, select bank0
  5841  015A' 1303               	bcf	3,6	;RP1=0, select bank0
  5842  015B' 0080'              	movwf	___wmul@multiplier
  5843  015C' 3000               	movlw	0
  5844  015D' 0081'              	movwf	___wmul@multiplier+1
  5845  015E' 1683               	bsf	3,5	;RP0=1, select bank1
  5846  015F' 1303               	bcf	3,6	;RP1=0, select bank1
  5847  0160' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5848  0161' 1283               	bcf	3,5	;RP0=0, select bank0
  5849  0162' 1303               	bcf	3,6	;RP1=0, select bank0
  5850  0163' 0083'              	movwf	___wmul@multiplicand+1
  5851  0164' 1683               	bsf	3,5	;RP0=1, select bank1
  5852  0165' 1303               	bcf	3,6	;RP1=0, select bank1
  5853  0166' 0800'              	movf	sprintf@exp^(0+128),w
  5854  0167' 1283               	bcf	3,5	;RP0=0, select bank0
  5855  0168' 1303               	bcf	3,6	;RP1=0, select bank0
  5856  0169' 0082'              	movwf	___wmul@multiplicand
  5857  016A' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  5858  016F' 1283               	bcf	3,5	;RP0=0, select bank0
  5859  0170' 1303               	bcf	3,6	;RP1=0, select bank0
  5860  0171' 0801'              	movf	?___wmul+1,w
  5861  0172' 1683               	bsf	3,5	;RP0=1, select bank1
  5862  0173' 1303               	bcf	3,6	;RP1=0, select bank1
  5863  0174' 0080'              	movwf	(sprintf@exp+1)^(0+128)
  5864  0175' 1283               	bcf	3,5	;RP0=0, select bank0
  5865  0176' 1303               	bcf	3,6	;RP1=0, select bank0
  5866  0177' 0800'              	movf	?___wmul,w
  5867  0178' 1683               	bsf	3,5	;RP0=1, select bank1
  5868  0179' 1303               	bcf	3,6	;RP1=0, select bank1
  5869  017A' 0080'              	movwf	sprintf@exp^(0+128)
  5870                           
  5871                           ;doprnt.c: 840: exp /= 10;
  5872  017B' 300A               	movlw	10
  5873  017C' 1283               	bcf	3,5	;RP0=0, select bank0
  5874  017D' 1303               	bcf	3,6	;RP1=0, select bank0
  5875  017E' 0087'              	movwf	___awdiv@divisor
  5876  017F' 3000               	movlw	0
  5877  0180' 0088'              	movwf	___awdiv@divisor+1
  5878  0181' 1683               	bsf	3,5	;RP0=1, select bank1
  5879  0182' 1303               	bcf	3,6	;RP1=0, select bank1
  5880  0183' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5881  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  5882  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  5883  0186' 008A'              	movwf	___awdiv@dividend+1
  5884  0187' 1683               	bsf	3,5	;RP0=1, select bank1
  5885  0188' 1303               	bcf	3,6	;RP1=0, select bank1
  5886  0189' 0800'              	movf	sprintf@exp^(0+128),w
  5887  018A' 1283               	bcf	3,5	;RP0=0, select bank0
  5888  018B' 1303               	bcf	3,6	;RP1=0, select bank0
  5889  018C' 0089'              	movwf	___awdiv@dividend
  5890  018D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  5891  0192' 1283               	bcf	3,5	;RP0=0, select bank0
  5892  0193' 1303               	bcf	3,6	;RP1=0, select bank0
  5893  0194' 0808'              	movf	?___awdiv+1,w
  5894  0195' 1683               	bsf	3,5	;RP0=1, select bank1
  5895  0196' 1303               	bcf	3,6	;RP1=0, select bank1
  5896  0197' 0080'              	movwf	(sprintf@exp+1)^(0+128)
  5897  0198' 1283               	bcf	3,5	;RP0=0, select bank0
  5898  0199' 1303               	bcf	3,6	;RP1=0, select bank0
  5899  019A' 0807'              	movf	?___awdiv,w
  5900  019B' 1683               	bsf	3,5	;RP0=1, select bank1
  5901  019C' 1303               	bcf	3,6	;RP1=0, select bank1
  5902  019D' 0080'              	movwf	sprintf@exp^(0+128)
  5903                           
  5904                           ;doprnt.c: 841: if(exp < 0)
  5905  019E' 1F80'              	btfss	(sprintf@exp+1)^(0+128),7
  5906  019F' 2800'              	goto	l4718
  5907                           
  5908                           ;doprnt.c: 842: exp--;
  5909  01A0' 30FF               	movlw	255
  5910  01A1' 0780'              	addwf	sprintf@exp^(0+128),f
  5911  01A2' 1803               	skipnc
  5912  01A3' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5913  01A4' 30FF               	movlw	255
  5914  01A5' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5915  01A6'                    l4718:	
  5916                           
  5917                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5918  01A6' 0300'              	decf	sprintf@exp^(0+128),w
  5919  01A7' 3AFF               	xorlw	255
  5920  01A8' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  5921  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  5922  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  5923  01AF' 0824'              	movf	?_scale,w
  5924  01B0' 1683               	bsf	3,5	;RP0=1, select bank1
  5925  01B1' 1303               	bcf	3,6	;RP1=0, select bank1
  5926  01B2' 0080'              	movwf	sprintf@tmpval^(0+128)
  5927  01B3' 1283               	bcf	3,5	;RP0=0, select bank0
  5928  01B4' 1303               	bcf	3,6	;RP1=0, select bank0
  5929  01B5' 0825'              	movf	?_scale+1,w
  5930  01B6' 1683               	bsf	3,5	;RP0=1, select bank1
  5931  01B7' 1303               	bcf	3,6	;RP1=0, select bank1
  5932  01B8' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  5933  01B9' 1283               	bcf	3,5	;RP0=0, select bank0
  5934  01BA' 1303               	bcf	3,6	;RP1=0, select bank0
  5935  01BB' 0826'              	movf	?_scale+2,w
  5936  01BC' 1683               	bsf	3,5	;RP0=1, select bank1
  5937  01BD' 1303               	bcf	3,6	;RP1=0, select bank1
  5938  01BE' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  5939                           
  5940                           ;doprnt.c: 847: tmpval.integ *= fval;
  5941  01BF' 0800'              	movf	sprintf@fval^(0+128),w
  5942  01C0' 1283               	bcf	3,5	;RP0=0, select bank0
  5943  01C1' 1303               	bcf	3,6	;RP1=0, select bank0
  5944  01C2' 0094'              	movwf	___ftmul@f1
  5945  01C3' 1683               	bsf	3,5	;RP0=1, select bank1
  5946  01C4' 1303               	bcf	3,6	;RP1=0, select bank1
  5947  01C5' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5948  01C6' 1283               	bcf	3,5	;RP0=0, select bank0
  5949  01C7' 1303               	bcf	3,6	;RP1=0, select bank0
  5950  01C8' 0095'              	movwf	___ftmul@f1+1
  5951  01C9' 1683               	bsf	3,5	;RP0=1, select bank1
  5952  01CA' 1303               	bcf	3,6	;RP1=0, select bank1
  5953  01CB' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5954  01CC' 1283               	bcf	3,5	;RP0=0, select bank0
  5955  01CD' 1303               	bcf	3,6	;RP1=0, select bank0
  5956  01CE' 0096'              	movwf	___ftmul@f1+2
  5957  01CF' 1683               	bsf	3,5	;RP0=1, select bank1
  5958  01D0' 1303               	bcf	3,6	;RP1=0, select bank1
  5959  01D1' 0800'              	movf	sprintf@tmpval^(0+128),w
  5960  01D2' 1283               	bcf	3,5	;RP0=0, select bank0
  5961  01D3' 1303               	bcf	3,6	;RP1=0, select bank0
  5962  01D4' 0097'              	movwf	___ftmul@f2
  5963  01D5' 1683               	bsf	3,5	;RP0=1, select bank1
  5964  01D6' 1303               	bcf	3,6	;RP1=0, select bank1
  5965  01D7' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  5966  01D8' 1283               	bcf	3,5	;RP0=0, select bank0
  5967  01D9' 1303               	bcf	3,6	;RP1=0, select bank0
  5968  01DA' 0098'              	movwf	___ftmul@f2+1
  5969  01DB' 1683               	bsf	3,5	;RP0=1, select bank1
  5970  01DC' 1303               	bcf	3,6	;RP1=0, select bank1
  5971  01DD' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  5972  01DE' 1283               	bcf	3,5	;RP0=0, select bank0
  5973  01DF' 1303               	bcf	3,6	;RP1=0, select bank0
  5974  01E0' 0099'              	movwf	___ftmul@f2+2
  5975  01E1' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  5976  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  5977  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  5978  01E8' 0814'              	movf	?___ftmul,w
  5979  01E9' 1683               	bsf	3,5	;RP0=1, select bank1
  5980  01EA' 1303               	bcf	3,6	;RP1=0, select bank1
  5981  01EB' 0080'              	movwf	sprintf@tmpval^(0+128)
  5982  01EC' 1283               	bcf	3,5	;RP0=0, select bank0
  5983  01ED' 1303               	bcf	3,6	;RP1=0, select bank0
  5984  01EE' 0815'              	movf	?___ftmul+1,w
  5985  01EF' 1683               	bsf	3,5	;RP0=1, select bank1
  5986  01F0' 1303               	bcf	3,6	;RP1=0, select bank1
  5987  01F1' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  5988  01F2' 1283               	bcf	3,5	;RP0=0, select bank0
  5989  01F3' 1303               	bcf	3,6	;RP1=0, select bank0
  5990  01F4' 0816'              	movf	?___ftmul+2,w
  5991  01F5' 1683               	bsf	3,5	;RP0=1, select bank1
  5992  01F6' 1303               	bcf	3,6	;RP1=0, select bank1
  5993  01F7' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  5994                           
  5995                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5996  01F8' 0800'              	movf	sprintf@tmpval^(0+128),w
  5997  01F9' 1283               	bcf	3,5	;RP0=0, select bank0
  5998  01FA' 1303               	bcf	3,6	;RP1=0, select bank0
  5999  01FB' 0080'              	movwf	___ftge@ff1
  6000  01FC' 1683               	bsf	3,5	;RP0=1, select bank1
  6001  01FD' 1303               	bcf	3,6	;RP1=0, select bank1
  6002  01FE' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  6003  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
  6004  0200' 1303               	bcf	3,6	;RP1=0, select bank0
  6005  0201' 0081'              	movwf	___ftge@ff1+1
  6006  0202' 1683               	bsf	3,5	;RP0=1, select bank1
  6007  0203' 1303               	bcf	3,6	;RP1=0, select bank1
  6008  0204' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  6009  0205' 1283               	bcf	3,5	;RP0=0, select bank0
  6010  0206' 1303               	bcf	3,6	;RP1=0, select bank0
  6011  0207' 0082'              	movwf	___ftge@ff1+2
  6012  0208' 3000               	movlw	0
  6013  0209' 0083'              	movwf	___ftge@ff2
  6014  020A' 3080               	movlw	128
  6015  020B' 0084'              	movwf	___ftge@ff2+1
  6016  020C' 303F               	movlw	63
  6017  020D' 0085'              	movwf	___ftge@ff2+2
  6018  020E' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  6019  0213' 1803               	btfsc	3,0
  6020  0214' 2800'              	goto	l4726
  6021                           
  6022                           ;doprnt.c: 849: exp--;
  6023  0215' 30FF               	movlw	255
  6024  0216' 1683               	bsf	3,5	;RP0=1, select bank1
  6025  0217' 1303               	bcf	3,6	;RP1=0, select bank1
  6026  0218' 0780'              	addwf	sprintf@exp^(0+128),f
  6027  0219' 1803               	skipnc
  6028  021A' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  6029  021B' 30FF               	movlw	255
  6030  021C' 2800'              	goto	L4
  6031  021D'                    l4726:	
  6032                           
  6033                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6034  021D' 1683               	bsf	3,5	;RP0=1, select bank1
  6035  021E' 1303               	bcf	3,6	;RP1=0, select bank1
  6036  021F' 0800'              	movf	sprintf@tmpval^(0+128),w
  6037  0220' 1283               	bcf	3,5	;RP0=0, select bank0
  6038  0221' 1303               	bcf	3,6	;RP1=0, select bank0
  6039  0222' 0080'              	movwf	___ftge@ff1
  6040  0223' 1683               	bsf	3,5	;RP0=1, select bank1
  6041  0224' 1303               	bcf	3,6	;RP1=0, select bank1
  6042  0225' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  6043  0226' 1283               	bcf	3,5	;RP0=0, select bank0
  6044  0227' 1303               	bcf	3,6	;RP1=0, select bank0
  6045  0228' 0081'              	movwf	___ftge@ff1+1
  6046  0229' 1683               	bsf	3,5	;RP0=1, select bank1
  6047  022A' 1303               	bcf	3,6	;RP1=0, select bank1
  6048  022B' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  6049  022C' 1283               	bcf	3,5	;RP0=0, select bank0
  6050  022D' 1303               	bcf	3,6	;RP1=0, select bank0
  6051  022E' 0082'              	movwf	___ftge@ff1+2
  6052  022F' 3000               	movlw	0
  6053  0230' 0083'              	movwf	___ftge@ff2
  6054  0231' 3020               	movlw	32
  6055  0232' 0084'              	movwf	___ftge@ff2+1
  6056  0233' 3041               	movlw	65
  6057  0234' 0085'              	movwf	___ftge@ff2+2
  6058  0235' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  6059  023A' 1C03               	btfss	3,0
  6060  023B' 2800'              	goto	l4730
  6061                           
  6062                           ;doprnt.c: 851: exp++;
  6063  023C' 3001               	movlw	1
  6064  023D' 1683               	bsf	3,5	;RP0=1, select bank1
  6065  023E' 1303               	bcf	3,6	;RP1=0, select bank1
  6066  023F' 0780'              	addwf	sprintf@exp^(0+128),f
  6067  0240' 1803               	skipnc
  6068  0241' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  6069  0242' 3000               	movlw	0
  6070  0243'                    L4:	
  6071  0243' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  6072  0244'                    l4730:	
  6073                           
  6074                           ;doprnt.c: 852: }
  6075                           ;doprnt.c: 1112: if(prec <= 12)
  6076  0244' 1683               	bsf	3,5	;RP0=1, select bank1
  6077  0245' 1303               	bcf	3,6	;RP1=0, select bank1
  6078  0246' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  6079  0247' 3A80               	xorlw	128
  6080  0248' 00FF               	movwf	127
  6081  0249' 3080               	movlw	128
  6082  024A' 027F               	subwf	127,w
  6083  024B' 1D03               	skipz
  6084  024C' 2800'              	goto	u7735
  6085  024D' 300D               	movlw	13
  6086  024E' 0200'              	subwf	sprintf@prec^(0+128),w
  6087  024F'                    u7735:	
  6088  024F' 1803               	skipnc
  6089  0250' 2800'              	goto	l4734
  6090                           
  6091                           ;doprnt.c: 1113: fval += fround(prec);
  6092  0251' 1683               	bsf	3,5	;RP0=1, select bank1
  6093  0252' 1303               	bcf	3,6	;RP1=0, select bank1
  6094  0253' 0800'              	movf	sprintf@prec^(0+128),w
  6095  0254' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  6096  0259' 1283               	bcf	3,5	;RP0=0, select bank0
  6097  025A' 1303               	bcf	3,6	;RP1=0, select bank0
  6098  025B' 0824'              	movf	?_fround,w
  6099  025C' 00B4'              	movwf	___ftadd@f1
  6100  025D' 0825'              	movf	?_fround+1,w
  6101  025E' 00B5'              	movwf	___ftadd@f1+1
  6102  025F' 0826'              	movf	?_fround+2,w
  6103  0260' 00B6'              	movwf	___ftadd@f1+2
  6104  0261' 1683               	bsf	3,5	;RP0=1, select bank1
  6105  0262' 1303               	bcf	3,6	;RP1=0, select bank1
  6106  0263' 0800'              	movf	sprintf@fval^(0+128),w
  6107  0264' 1283               	bcf	3,5	;RP0=0, select bank0
  6108  0265' 1303               	bcf	3,6	;RP1=0, select bank0
  6109  0266' 00B7'              	movwf	___ftadd@f2
  6110  0267' 1683               	bsf	3,5	;RP0=1, select bank1
  6111  0268' 1303               	bcf	3,6	;RP1=0, select bank1
  6112  0269' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6113  026A' 1283               	bcf	3,5	;RP0=0, select bank0
  6114  026B' 1303               	bcf	3,6	;RP1=0, select bank0
  6115  026C' 00B8'              	movwf	___ftadd@f2+1
  6116  026D' 1683               	bsf	3,5	;RP0=1, select bank1
  6117  026E' 1303               	bcf	3,6	;RP1=0, select bank1
  6118  026F' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6119  0270' 1283               	bcf	3,5	;RP0=0, select bank0
  6120  0271' 1303               	bcf	3,6	;RP1=0, select bank0
  6121  0272' 00B9'              	movwf	___ftadd@f2+2
  6122  0273' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  6123  0278' 1283               	bcf	3,5	;RP0=0, select bank0
  6124  0279' 1303               	bcf	3,6	;RP1=0, select bank0
  6125  027A' 0834'              	movf	?___ftadd,w
  6126  027B' 1683               	bsf	3,5	;RP0=1, select bank1
  6127  027C' 1303               	bcf	3,6	;RP1=0, select bank1
  6128  027D' 0080'              	movwf	sprintf@fval^(0+128)
  6129  027E' 1283               	bcf	3,5	;RP0=0, select bank0
  6130  027F' 1303               	bcf	3,6	;RP1=0, select bank0
  6131  0280' 0835'              	movf	?___ftadd+1,w
  6132  0281' 1683               	bsf	3,5	;RP0=1, select bank1
  6133  0282' 1303               	bcf	3,6	;RP1=0, select bank1
  6134  0283' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  6135  0284' 1283               	bcf	3,5	;RP0=0, select bank0
  6136  0285' 1303               	bcf	3,6	;RP1=0, select bank0
  6137  0286' 0836'              	movf	?___ftadd+2,w
  6138  0287' 1683               	bsf	3,5	;RP0=1, select bank1
  6139  0288' 1303               	bcf	3,6	;RP1=0, select bank1
  6140  0289' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  6141  028A'                    l4734:	
  6142                           
  6143                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6144  028A' 1683               	bsf	3,5	;RP0=1, select bank1
  6145  028B' 1303               	bcf	3,6	;RP1=0, select bank1
  6146  028C' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  6147  028D' 3A80               	xorlw	128
  6148  028E' 00FF               	movwf	127
  6149  028F' 3080               	movlw	128
  6150  0290' 027F               	subwf	127,w
  6151  0291' 1D03               	skipz
  6152  0292' 2800'              	goto	u7745
  6153  0293' 300A               	movlw	10
  6154  0294' 0200'              	subwf	sprintf@exp^(0+128),w
  6155  0295'                    u7745:	
  6156  0295' 1803               	skipnc
  6157  0296' 2800'              	goto	l4742
  6158  0297' 1683               	bsf	3,5	;RP0=1, select bank1
  6159  0298' 1303               	bcf	3,6	;RP1=0, select bank1
  6160  0299' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6161  029A' 0400'              	iorwf	(sprintf@fval+1)^(0+128),w
  6162  029B' 0400'              	iorwf	sprintf@fval^(0+128),w
  6163  029C' 1903               	skipnz
  6164  029D' 2800'              	goto	l4756
  6165  029E' 0800'              	movf	sprintf@fval^(0+128),w
  6166  029F' 1283               	bcf	3,5	;RP0=0, select bank0
  6167  02A0' 1303               	bcf	3,6	;RP1=0, select bank0
  6168  02A1' 00B4'              	movwf	___fttol@f1
  6169  02A2' 1683               	bsf	3,5	;RP0=1, select bank1
  6170  02A3' 1303               	bcf	3,6	;RP1=0, select bank1
  6171  02A4' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6172  02A5' 1283               	bcf	3,5	;RP0=0, select bank0
  6173  02A6' 1303               	bcf	3,6	;RP1=0, select bank0
  6174  02A7' 00B5'              	movwf	___fttol@f1+1
  6175  02A8' 1683               	bsf	3,5	;RP0=1, select bank1
  6176  02A9' 1303               	bcf	3,6	;RP1=0, select bank1
  6177  02AA' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6178  02AB' 1283               	bcf	3,5	;RP0=0, select bank0
  6179  02AC' 1303               	bcf	3,6	;RP1=0, select bank0
  6180  02AD' 00B6'              	movwf	___fttol@f1+2
  6181  02AE' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  6182  02B3' 1283               	bcf	3,5	;RP0=0, select bank0
  6183  02B4' 1303               	bcf	3,6	;RP1=0, select bank0
  6184  02B5' 0837'              	movf	?___fttol+3,w
  6185  02B6' 0436'              	iorwf	?___fttol+2,w
  6186  02B7' 0435'              	iorwf	?___fttol+1,w
  6187  02B8' 0434'              	iorwf	?___fttol,w
  6188  02B9' 1D03               	skipz
  6189  02BA' 2800'              	goto	l4756
  6190  02BB' 1683               	bsf	3,5	;RP0=1, select bank1
  6191  02BC' 1303               	bcf	3,6	;RP1=0, select bank1
  6192  02BD' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  6193  02BE' 3A80               	xorlw	128
  6194  02BF' 00FF               	movwf	127
  6195  02C0' 3080               	movlw	128
  6196  02C1' 027F               	subwf	127,w
  6197  02C2' 1D03               	skipz
  6198  02C3' 2800'              	goto	u7775
  6199  02C4' 3002               	movlw	2
  6200  02C5' 0200'              	subwf	sprintf@exp^(0+128),w
  6201  02C6'                    u7775:	
  6202  02C6' 1C03               	skipc
  6203  02C7' 2800'              	goto	l4756
  6204  02C8'                    l4742:	
  6205                           
  6206                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6207  02C8' 1683               	bsf	3,5	;RP0=1, select bank1
  6208  02C9' 1303               	bcf	3,6	;RP1=0, select bank1
  6209  02CA' 0800'              	movf	sprintf@tmpval^(0+128),w
  6210  02CB' 1283               	bcf	3,5	;RP0=0, select bank0
  6211  02CC' 1303               	bcf	3,6	;RP1=0, select bank0
  6212  02CD' 0080'              	movwf	___ftge@ff1
  6213  02CE' 1683               	bsf	3,5	;RP0=1, select bank1
  6214  02CF' 1303               	bcf	3,6	;RP1=0, select bank1
  6215  02D0' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  6216  02D1' 1283               	bcf	3,5	;RP0=0, select bank0
  6217  02D2' 1303               	bcf	3,6	;RP1=0, select bank0
  6218  02D3' 0081'              	movwf	___ftge@ff1+1
  6219  02D4' 1683               	bsf	3,5	;RP0=1, select bank1
  6220  02D5' 1303               	bcf	3,6	;RP1=0, select bank1
  6221  02D6' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  6222  02D7' 1283               	bcf	3,5	;RP0=0, select bank0
  6223  02D8' 1303               	bcf	3,6	;RP1=0, select bank0
  6224  02D9' 0082'              	movwf	___ftge@ff1+2
  6225  02DA' 3070               	movlw	112
  6226  02DB' 0083'              	movwf	___ftge@ff2
  6227  02DC' 3089               	movlw	137
  6228  02DD' 0084'              	movwf	___ftge@ff2+1
  6229  02DE' 3040               	movlw	64
  6230  02DF' 0085'              	movwf	___ftge@ff2+2
  6231  02E0' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  6232  02E5' 1803               	btfsc	3,0
  6233  02E6' 2800'              	goto	l4746
  6234                           
  6235                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6236  02E7' 30F7               	movlw	247
  6237  02E8' 2800'              	goto	L5
  6238  02E9'                    l4746:	
  6239                           ;doprnt.c: 1122: }else{
  6240                           
  6241                           
  6242                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6243  02E9' 30F8               	movlw	248
  6244  02EA'                    L5:	
  6245  02EA' 1683               	bsf	3,5	;RP0=1, select bank1
  6246  02EB' 1303               	bcf	3,6	;RP1=0, select bank1
  6247  02EC' 0780'              	addwf	sprintf@exp^(0+128),f
  6248  02ED' 1803               	skipnc
  6249  02EE' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  6250  02EF' 30FF               	movlw	255
  6251  02F0' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  6252                           
  6253                           ;doprnt.c: 1124: }
  6254                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6255  02F1' 0800'              	movf	sprintf@exp^(0+128),w
  6256  02F2' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  6257  02F7' 1283               	bcf	3,5	;RP0=0, select bank0
  6258  02F8' 1303               	bcf	3,6	;RP1=0, select bank0
  6259  02F9' 0824'              	movf	?_scale,w
  6260  02FA' 1683               	bsf	3,5	;RP0=1, select bank1
  6261  02FB' 1303               	bcf	3,6	;RP1=0, select bank1
  6262  02FC' 0080'              	movwf	sprintf@tmpval^(0+128)
  6263  02FD' 1283               	bcf	3,5	;RP0=0, select bank0
  6264  02FE' 1303               	bcf	3,6	;RP1=0, select bank0
  6265  02FF' 0825'              	movf	?_scale+1,w
  6266  0300' 1683               	bsf	3,5	;RP0=1, select bank1
  6267  0301' 1303               	bcf	3,6	;RP1=0, select bank1
  6268  0302' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  6269  0303' 1283               	bcf	3,5	;RP0=0, select bank0
  6270  0304' 1303               	bcf	3,6	;RP1=0, select bank0
  6271  0305' 0826'              	movf	?_scale+2,w
  6272  0306' 1683               	bsf	3,5	;RP0=1, select bank1
  6273  0307' 1303               	bcf	3,6	;RP1=0, select bank1
  6274  0308' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  6275                           
  6276                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6277  0309' 0800'              	movf	sprintf@fval^(0+128),w
  6278  030A' 1283               	bcf	3,5	;RP0=0, select bank0
  6279  030B' 1303               	bcf	3,6	;RP1=0, select bank0
  6280  030C' 0080'              	movwf	__tdiv_to_l_@f1
  6281  030D' 1683               	bsf	3,5	;RP0=1, select bank1
  6282  030E' 1303               	bcf	3,6	;RP1=0, select bank1
  6283  030F' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6284  0310' 1283               	bcf	3,5	;RP0=0, select bank0
  6285  0311' 1303               	bcf	3,6	;RP1=0, select bank0
  6286  0312' 0081'              	movwf	__tdiv_to_l_@f1+1
  6287  0313' 1683               	bsf	3,5	;RP0=1, select bank1
  6288  0314' 1303               	bcf	3,6	;RP1=0, select bank1
  6289  0315' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6290  0316' 1283               	bcf	3,5	;RP0=0, select bank0
  6291  0317' 1303               	bcf	3,6	;RP1=0, select bank0
  6292  0318' 0082'              	movwf	__tdiv_to_l_@f1+2
  6293  0319' 1683               	bsf	3,5	;RP0=1, select bank1
  6294  031A' 1303               	bcf	3,6	;RP1=0, select bank1
  6295  031B' 0800'              	movf	sprintf@tmpval^(0+128),w
  6296  031C' 1283               	bcf	3,5	;RP0=0, select bank0
  6297  031D' 1303               	bcf	3,6	;RP1=0, select bank0
  6298  031E' 0083'              	movwf	__tdiv_to_l_@f2
  6299  031F' 1683               	bsf	3,5	;RP0=1, select bank1
  6300  0320' 1303               	bcf	3,6	;RP1=0, select bank1
  6301  0321' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  6302  0322' 1283               	bcf	3,5	;RP0=0, select bank0
  6303  0323' 1303               	bcf	3,6	;RP1=0, select bank0
  6304  0324' 0084'              	movwf	__tdiv_to_l_@f2+1
  6305  0325' 1683               	bsf	3,5	;RP0=1, select bank1
  6306  0326' 1303               	bcf	3,6	;RP1=0, select bank1
  6307  0327' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  6308  0328' 1283               	bcf	3,5	;RP0=0, select bank0
  6309  0329' 1303               	bcf	3,6	;RP1=0, select bank0
  6310  032A' 0085'              	movwf	__tdiv_to_l_@f2+2
  6311  032B' 120A' 118A' 2000' 120A' 118A' 	fcall	__tdiv_to_l_
  6312  0330' 1283               	bcf	3,5	;RP0=0, select bank0
  6313  0331' 1303               	bcf	3,6	;RP1=0, select bank0
  6314  0332' 0803'              	movf	?__tdiv_to_l_+3,w
  6315  0333' 1683               	bsf	3,5	;RP0=1, select bank1
  6316  0334' 1303               	bcf	3,6	;RP1=0, select bank1
  6317  0335' 0080'              	movwf	(sprintf@val+3)^(0+128)
  6318  0336' 1283               	bcf	3,5	;RP0=0, select bank0
  6319  0337' 1303               	bcf	3,6	;RP1=0, select bank0
  6320  0338' 0802'              	movf	?__tdiv_to_l_+2,w
  6321  0339' 1683               	bsf	3,5	;RP0=1, select bank1
  6322  033A' 1303               	bcf	3,6	;RP1=0, select bank1
  6323  033B' 0080'              	movwf	(sprintf@val+2)^(0+128)
  6324  033C' 1283               	bcf	3,5	;RP0=0, select bank0
  6325  033D' 1303               	bcf	3,6	;RP1=0, select bank0
  6326  033E' 0801'              	movf	?__tdiv_to_l_+1,w
  6327  033F' 1683               	bsf	3,5	;RP0=1, select bank1
  6328  0340' 1303               	bcf	3,6	;RP1=0, select bank1
  6329  0341' 0080'              	movwf	(sprintf@val+1)^(0+128)
  6330  0342' 1283               	bcf	3,5	;RP0=0, select bank0
  6331  0343' 1303               	bcf	3,6	;RP1=0, select bank0
  6332  0344' 0800'              	movf	?__tdiv_to_l_,w
  6333  0345' 1683               	bsf	3,5	;RP0=1, select bank1
  6334  0346' 1303               	bcf	3,6	;RP1=0, select bank1
  6335  0347' 0080'              	movwf	sprintf@val^(0+128)
  6336                           
  6337                           ;doprnt.c: 1129: fval = 0.0;
  6338  0348' 3000               	movlw	0
  6339  0349' 0080'              	movwf	sprintf@fval^(0+128)
  6340  034A' 3000               	movlw	0
  6341  034B' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  6342  034C' 3000               	movlw	0
  6343  034D' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  6344                           
  6345                           ;doprnt.c: 1130: } else {
  6346  034E' 2800'              	goto	l4760
  6347  034F'                    l4756:	
  6348                           
  6349                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6350  034F' 1683               	bsf	3,5	;RP0=1, select bank1
  6351  0350' 1303               	bcf	3,6	;RP1=0, select bank1
  6352  0351' 0800'              	movf	sprintf@fval^(0+128),w
  6353  0352' 1283               	bcf	3,5	;RP0=0, select bank0
  6354  0353' 1303               	bcf	3,6	;RP1=0, select bank0
  6355  0354' 00B4'              	movwf	___fttol@f1
  6356  0355' 1683               	bsf	3,5	;RP0=1, select bank1
  6357  0356' 1303               	bcf	3,6	;RP1=0, select bank1
  6358  0357' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6359  0358' 1283               	bcf	3,5	;RP0=0, select bank0
  6360  0359' 1303               	bcf	3,6	;RP1=0, select bank0
  6361  035A' 00B5'              	movwf	___fttol@f1+1
  6362  035B' 1683               	bsf	3,5	;RP0=1, select bank1
  6363  035C' 1303               	bcf	3,6	;RP1=0, select bank1
  6364  035D' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6365  035E' 1283               	bcf	3,5	;RP0=0, select bank0
  6366  035F' 1303               	bcf	3,6	;RP1=0, select bank0
  6367  0360' 00B6'              	movwf	___fttol@f1+2
  6368  0361' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  6369  0366' 1283               	bcf	3,5	;RP0=0, select bank0
  6370  0367' 1303               	bcf	3,6	;RP1=0, select bank0
  6371  0368' 0837'              	movf	?___fttol+3,w
  6372  0369' 1683               	bsf	3,5	;RP0=1, select bank1
  6373  036A' 1303               	bcf	3,6	;RP1=0, select bank1
  6374  036B' 0080'              	movwf	(sprintf@val+3)^(0+128)
  6375  036C' 1283               	bcf	3,5	;RP0=0, select bank0
  6376  036D' 1303               	bcf	3,6	;RP1=0, select bank0
  6377  036E' 0836'              	movf	?___fttol+2,w
  6378  036F' 1683               	bsf	3,5	;RP0=1, select bank1
  6379  0370' 1303               	bcf	3,6	;RP1=0, select bank1
  6380  0371' 0080'              	movwf	(sprintf@val+2)^(0+128)
  6381  0372' 1283               	bcf	3,5	;RP0=0, select bank0
  6382  0373' 1303               	bcf	3,6	;RP1=0, select bank0
  6383  0374' 0835'              	movf	?___fttol+1,w
  6384  0375' 1683               	bsf	3,5	;RP0=1, select bank1
  6385  0376' 1303               	bcf	3,6	;RP1=0, select bank1
  6386  0377' 0080'              	movwf	(sprintf@val+1)^(0+128)
  6387  0378' 1283               	bcf	3,5	;RP0=0, select bank0
  6388  0379' 1303               	bcf	3,6	;RP1=0, select bank0
  6389  037A' 0834'              	movf	?___fttol,w
  6390  037B' 1683               	bsf	3,5	;RP0=1, select bank1
  6391  037C' 1303               	bcf	3,6	;RP1=0, select bank1
  6392  037D' 0080'              	movwf	sprintf@val^(0+128)
  6393                           
  6394                           ;doprnt.c: 1132: fval -= (double)val;
  6395  037E' 0800'              	movf	(sprintf@val+3)^(0+128),w
  6396  037F' 1283               	bcf	3,5	;RP0=0, select bank0
  6397  0380' 1303               	bcf	3,6	;RP1=0, select bank0
  6398  0381' 008B'              	movwf	___lltoft@c+3
  6399  0382' 1683               	bsf	3,5	;RP0=1, select bank1
  6400  0383' 1303               	bcf	3,6	;RP1=0, select bank1
  6401  0384' 0800'              	movf	(sprintf@val+2)^(0+128),w
  6402  0385' 1283               	bcf	3,5	;RP0=0, select bank0
  6403  0386' 1303               	bcf	3,6	;RP1=0, select bank0
  6404  0387' 008A'              	movwf	___lltoft@c+2
  6405  0388' 1683               	bsf	3,5	;RP0=1, select bank1
  6406  0389' 1303               	bcf	3,6	;RP1=0, select bank1
  6407  038A' 0800'              	movf	(sprintf@val+1)^(0+128),w
  6408  038B' 1283               	bcf	3,5	;RP0=0, select bank0
  6409  038C' 1303               	bcf	3,6	;RP1=0, select bank0
  6410  038D' 0089'              	movwf	___lltoft@c+1
  6411  038E' 1683               	bsf	3,5	;RP0=1, select bank1
  6412  038F' 1303               	bcf	3,6	;RP1=0, select bank1
  6413  0390' 0800'              	movf	sprintf@val^(0+128),w
  6414  0391' 1283               	bcf	3,5	;RP0=0, select bank0
  6415  0392' 1303               	bcf	3,6	;RP1=0, select bank0
  6416  0393' 0088'              	movwf	___lltoft@c
  6417  0394' 120A' 118A' 2000' 120A' 118A' 	fcall	___lltoft
  6418  0399' 1283               	bcf	3,5	;RP0=0, select bank0
  6419  039A' 1303               	bcf	3,6	;RP1=0, select bank0
  6420  039B' 0808'              	movf	?___lltoft,w
  6421  039C' 00C1'              	movwf	___ftsub@f2
  6422  039D' 0809'              	movf	?___lltoft+1,w
  6423  039E' 00C2'              	movwf	___ftsub@f2+1
  6424  039F' 080A'              	movf	?___lltoft+2,w
  6425  03A0' 00C3'              	movwf	___ftsub@f2+2
  6426  03A1' 1683               	bsf	3,5	;RP0=1, select bank1
  6427  03A2' 1303               	bcf	3,6	;RP1=0, select bank1
  6428  03A3' 0800'              	movf	sprintf@fval^(0+128),w
  6429  03A4' 1283               	bcf	3,5	;RP0=0, select bank0
  6430  03A5' 1303               	bcf	3,6	;RP1=0, select bank0
  6431  03A6' 00C4'              	movwf	___ftsub@f1
  6432  03A7' 1683               	bsf	3,5	;RP0=1, select bank1
  6433  03A8' 1303               	bcf	3,6	;RP1=0, select bank1
  6434  03A9' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6435  03AA' 1283               	bcf	3,5	;RP0=0, select bank0
  6436  03AB' 1303               	bcf	3,6	;RP1=0, select bank0
  6437  03AC' 00C5'              	movwf	___ftsub@f1+1
  6438  03AD' 1683               	bsf	3,5	;RP0=1, select bank1
  6439  03AE' 1303               	bcf	3,6	;RP1=0, select bank1
  6440  03AF' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6441  03B0' 1283               	bcf	3,5	;RP0=0, select bank0
  6442  03B1' 1303               	bcf	3,6	;RP1=0, select bank0
  6443  03B2' 00C6'              	movwf	___ftsub@f1+2
  6444  03B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftsub
  6445  03B8' 1283               	bcf	3,5	;RP0=0, select bank0
  6446  03B9' 1303               	bcf	3,6	;RP1=0, select bank0
  6447  03BA' 0841'              	movf	?___ftsub,w
  6448  03BB' 1683               	bsf	3,5	;RP0=1, select bank1
  6449  03BC' 1303               	bcf	3,6	;RP1=0, select bank1
  6450  03BD' 0080'              	movwf	sprintf@fval^(0+128)
  6451  03BE' 1283               	bcf	3,5	;RP0=0, select bank0
  6452  03BF' 1303               	bcf	3,6	;RP1=0, select bank0
  6453  03C0' 0842'              	movf	?___ftsub+1,w
  6454  03C1' 1683               	bsf	3,5	;RP0=1, select bank1
  6455  03C2' 1303               	bcf	3,6	;RP1=0, select bank1
  6456  03C3' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  6457  03C4' 1283               	bcf	3,5	;RP0=0, select bank0
  6458  03C5' 1303               	bcf	3,6	;RP1=0, select bank0
  6459  03C6' 0843'              	movf	?___ftsub+2,w
  6460  03C7' 1683               	bsf	3,5	;RP0=1, select bank1
  6461  03C8' 1303               	bcf	3,6	;RP1=0, select bank1
  6462  03C9' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  6463                           
  6464                           ;doprnt.c: 1133: exp = 0;
  6465  03CA' 0180'              	clrf	sprintf@exp^(0+128)
  6466  03CB' 0180'              	clrf	(sprintf@exp+1)^(0+128)
  6467  03CC'                    l4760:	
  6468                           
  6469                           ;doprnt.c: 1134: }
  6470                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6471  03CC' 0180'              	clrf	sprintf@c^(0+128)
  6472  03CD' 0A80'              	incf	sprintf@c^(0+128),f
  6473  03CE' 300A               	movlw	10
  6474  03CF' 0600'              	xorwf	sprintf@c^(0+128),w
  6475  03D0' 1903               	btfsc	3,2
  6476  03D1' 2800'              	goto	l4772
  6477  03D2'                    l4766:	
  6478                           
  6479                           ;doprnt.c: 1137: if(val < dpowers[c])
  6480  03D2' 0800'              	movf	sprintf@c^(0+128),w
  6481  03D3' 0080'              	movwf	??_sprintf^(0+128)
  6482  03D4' 3001               	movlw	1
  6483  03D5'                    u7805:	
  6484  03D5' 1003               	clrc
  6485  03D6' 0D80'              	rlf	??_sprintf^(0+128),f
  6486  03D7' 3EFF               	addlw	-1
  6487  03D8' 1D03               	skipz
  6488  03D9' 2800'              	goto	u7805
  6489  03DA' 1003               	clrc
  6490  03DB' 0D00'              	rlf	??_sprintf^(0+128),w
  6491  03DC' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6492  03DD' 0084               	movwf	4
  6493  03DE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6494  03E3' 0080'              	movwf	(??_sprintf+1)^(0+128)
  6495  03E4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6496  03E9' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
  6497  03EA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6498  03EF' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
  6499  03F0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6500  03F5' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
  6501  03F6' 0800'              	movf	(??_sprintf+4)^(0+128),w
  6502  03F7' 0200'              	subwf	(sprintf@val+3)^(0+128),w
  6503  03F8' 1D03               	skipz
  6504  03F9' 2800'              	goto	u7815
  6505  03FA' 0800'              	movf	(??_sprintf+3)^(0+128),w
  6506  03FB' 0200'              	subwf	(sprintf@val+2)^(0+128),w
  6507  03FC' 1D03               	skipz
  6508  03FD' 2800'              	goto	u7815
  6509  03FE' 0800'              	movf	(??_sprintf+2)^(0+128),w
  6510  03FF' 0200'              	subwf	(sprintf@val+1)^(0+128),w
  6511  0400' 1D03               	skipz
  6512  0401' 2800'              	goto	u7815
  6513  0402' 0800'              	movf	(??_sprintf+1)^(0+128),w
  6514  0403' 0200'              	subwf	sprintf@val^(0+128),w
  6515  0404'                    u7815:	
  6516  0404' 1C03               	btfss	3,0
  6517  0405' 2800'              	goto	l4772
  6518                           
  6519                           ;doprnt.c: 1138: break;
  6520  0406' 3001               	movlw	1
  6521  0407' 0080'              	movwf	??_sprintf^(0+128)
  6522  0408' 0800'              	movf	??_sprintf^(0+128),w
  6523  0409' 0780'              	addwf	sprintf@c^(0+128),f
  6524  040A' 300A               	movlw	10
  6525  040B' 0600'              	xorwf	sprintf@c^(0+128),w
  6526  040C' 1D03               	btfss	3,2
  6527  040D' 2800'              	goto	l4766
  6528  040E'                    l4772:	
  6529                           
  6530                           ;doprnt.c: 1175: {
  6531                           ;doprnt.c: 1188: if(flag & 0x03)
  6532  040E' 3003               	movlw	3
  6533  040F' 0500'              	andwf	sprintf@flag^(0+128),w
  6534  0410' 0080'              	movwf	??_sprintf^(0+128)
  6535  0411' 3000               	movlw	0
  6536  0412' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  6537  0413' 0080'              	movwf	(??_sprintf+1)^(0+128)
  6538  0414' 0800'              	movf	??_sprintf^(0+128),w
  6539  0415' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  6540  0416' 1903               	btfsc	3,2
  6541  0417' 2800'              	goto	l274
  6542                           
  6543                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6544  0418' 302D               	movlw	45
  6545  0419'                    L8:	
  6546  0419' 0080'              	movwf	??_sprintf^(0+128)
  6547  041A' 1283               	bcf	3,5	;RP0=0, select bank0
  6548  041B' 1303               	bcf	3,6	;RP1=0, select bank0
  6549  041C' 0847'              	movf	sprintf@sp,w
  6550  041D' 0084               	movwf	4
  6551  041E' 1783               	bsf	3,7
  6552  041F' 1C48'              	btfss	sprintf@sp+1,0
  6553  0420' 1383               	bcf	3,7
  6554  0421' 1683               	bsf	3,5	;RP0=1, select bank1
  6555  0422' 1303               	bcf	3,6	;RP1=0, select bank1
  6556  0423' 0800'              	movf	??_sprintf^(0+128),w
  6557  0424' 0080               	movwf	0
  6558  0425' 3001               	movlw	1
  6559  0426' 1283               	bcf	3,5	;RP0=0, select bank0
  6560  0427' 1303               	bcf	3,6	;RP1=0, select bank0
  6561  0428' 07C7'              	addwf	sprintf@sp,f
  6562  0429' 1803               	skipnc
  6563  042A' 0AC8'              	incf	sprintf@sp+1,f
  6564  042B'                    l274:	
  6565  042B' 30FF               	movlw	255
  6566  042C' 1683               	bsf	3,5	;RP0=1, select bank1
  6567  042D' 1303               	bcf	3,6	;RP1=0, select bank1
  6568  042E' 0080'              	movwf	??_sprintf^(0+128)
  6569  042F' 0800'              	movf	??_sprintf^(0+128),w
  6570  0430' 0780'              	addwf	sprintf@c^(0+128),f
  6571  0431' 0A00'              	incf	sprintf@c^(0+128),w
  6572  0432' 1903               	btfsc	3,2
  6573  0433' 2800'              	goto	l4792
  6574                           
  6575                           ;doprnt.c: 1200: {
  6576                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6577                           
  6578                           ;doprnt.c: 1195: }
  6579                           ;doprnt.c: 1196: while(c--) {
  6580  0434' 1683               	bsf	3,5	;RP0=1, select bank1
  6581  0435' 1303               	bcf	3,6	;RP1=0, select bank1
  6582  0436' 0800'              	movf	sprintf@c^(0+128),w
  6583  0437' 0080'              	movwf	??_sprintf^(0+128)
  6584  0438' 3001               	movlw	1
  6585  0439'                    u7845:	
  6586  0439' 1003               	clrc
  6587  043A' 0D80'              	rlf	??_sprintf^(0+128),f
  6588  043B' 3EFF               	addlw	-1
  6589  043C' 1D03               	skipz
  6590  043D' 2800'              	goto	u7845
  6591  043E' 1003               	clrc
  6592  043F' 0D00'              	rlf	??_sprintf^(0+128),w
  6593  0440' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6594  0441' 0084               	movwf	4
  6595  0442' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6596  0447' 1283               	bcf	3,5	;RP0=0, select bank0
  6597  0448' 1303               	bcf	3,6	;RP1=0, select bank0
  6598  0449' 008A'              	movwf	___lldiv@divisor
  6599  044A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6600  044F' 008B'              	movwf	___lldiv@divisor+1
  6601  0450' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6602  0455' 008C'              	movwf	___lldiv@divisor+2
  6603  0456' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6604  045B' 008D'              	movwf	___lldiv@divisor+3
  6605  045C' 1683               	bsf	3,5	;RP0=1, select bank1
  6606  045D' 1303               	bcf	3,6	;RP1=0, select bank1
  6607  045E' 0800'              	movf	(sprintf@val+3)^(0+128),w
  6608  045F' 1283               	bcf	3,5	;RP0=0, select bank0
  6609  0460' 1303               	bcf	3,6	;RP1=0, select bank0
  6610  0461' 0091'              	movwf	___lldiv@dividend+3
  6611  0462' 1683               	bsf	3,5	;RP0=1, select bank1
  6612  0463' 1303               	bcf	3,6	;RP1=0, select bank1
  6613  0464' 0800'              	movf	(sprintf@val+2)^(0+128),w
  6614  0465' 1283               	bcf	3,5	;RP0=0, select bank0
  6615  0466' 1303               	bcf	3,6	;RP1=0, select bank0
  6616  0467' 0090'              	movwf	___lldiv@dividend+2
  6617  0468' 1683               	bsf	3,5	;RP0=1, select bank1
  6618  0469' 1303               	bcf	3,6	;RP1=0, select bank1
  6619  046A' 0800'              	movf	(sprintf@val+1)^(0+128),w
  6620  046B' 1283               	bcf	3,5	;RP0=0, select bank0
  6621  046C' 1303               	bcf	3,6	;RP1=0, select bank0
  6622  046D' 008F'              	movwf	___lldiv@dividend+1
  6623  046E' 1683               	bsf	3,5	;RP0=1, select bank1
  6624  046F' 1303               	bcf	3,6	;RP1=0, select bank1
  6625  0470' 0800'              	movf	sprintf@val^(0+128),w
  6626  0471' 1283               	bcf	3,5	;RP0=0, select bank0
  6627  0472' 1303               	bcf	3,6	;RP1=0, select bank0
  6628  0473' 008E'              	movwf	___lldiv@dividend
  6629  0474' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  6630  0479' 1283               	bcf	3,5	;RP0=0, select bank0
  6631  047A' 1303               	bcf	3,6	;RP1=0, select bank0
  6632  047B' 080D'              	movf	?___lldiv+3,w
  6633  047C' 1683               	bsf	3,5	;RP0=1, select bank1
  6634  047D' 1303               	bcf	3,6	;RP1=0, select bank1
  6635  047E' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  6636  047F' 1283               	bcf	3,5	;RP0=0, select bank0
  6637  0480' 1303               	bcf	3,6	;RP1=0, select bank0
  6638  0481' 080C'              	movf	?___lldiv+2,w
  6639  0482' 1683               	bsf	3,5	;RP0=1, select bank1
  6640  0483' 1303               	bcf	3,6	;RP1=0, select bank1
  6641  0484' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  6642  0485' 1283               	bcf	3,5	;RP0=0, select bank0
  6643  0486' 1303               	bcf	3,6	;RP1=0, select bank0
  6644  0487' 080B'              	movf	?___lldiv+1,w
  6645  0488' 1683               	bsf	3,5	;RP0=1, select bank1
  6646  0489' 1303               	bcf	3,6	;RP1=0, select bank1
  6647  048A' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  6648  048B' 1283               	bcf	3,5	;RP0=0, select bank0
  6649  048C' 1303               	bcf	3,6	;RP1=0, select bank0
  6650  048D' 080A'              	movf	?___lldiv,w
  6651  048E' 1683               	bsf	3,5	;RP0=1, select bank1
  6652  048F' 1303               	bcf	3,6	;RP1=0, select bank1
  6653  0490' 0080'              	movwf	sprintf@tmpval^(0+128)
  6654                           
  6655                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6656  0491' 3000               	movlw	0
  6657  0492' 1283               	bcf	3,5	;RP0=0, select bank0
  6658  0493' 1303               	bcf	3,6	;RP1=0, select bank0
  6659  0494' 0083'              	movwf	___llmod@divisor+3
  6660  0495' 3000               	movlw	0
  6661  0496' 0082'              	movwf	___llmod@divisor+2
  6662  0497' 3000               	movlw	0
  6663  0498' 0081'              	movwf	___llmod@divisor+1
  6664  0499' 300A               	movlw	10
  6665  049A' 0080'              	movwf	___llmod@divisor
  6666  049B' 1683               	bsf	3,5	;RP0=1, select bank1
  6667  049C' 1303               	bcf	3,6	;RP1=0, select bank1
  6668  049D' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  6669  049E' 1283               	bcf	3,5	;RP0=0, select bank0
  6670  049F' 1303               	bcf	3,6	;RP1=0, select bank0
  6671  04A0' 0087'              	movwf	___llmod@dividend+3
  6672  04A1' 1683               	bsf	3,5	;RP0=1, select bank1
  6673  04A2' 1303               	bcf	3,6	;RP1=0, select bank1
  6674  04A3' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  6675  04A4' 1283               	bcf	3,5	;RP0=0, select bank0
  6676  04A5' 1303               	bcf	3,6	;RP1=0, select bank0
  6677  04A6' 0086'              	movwf	___llmod@dividend+2
  6678  04A7' 1683               	bsf	3,5	;RP0=1, select bank1
  6679  04A8' 1303               	bcf	3,6	;RP1=0, select bank1
  6680  04A9' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  6681  04AA' 1283               	bcf	3,5	;RP0=0, select bank0
  6682  04AB' 1303               	bcf	3,6	;RP1=0, select bank0
  6683  04AC' 0085'              	movwf	___llmod@dividend+1
  6684  04AD' 1683               	bsf	3,5	;RP0=1, select bank1
  6685  04AE' 1303               	bcf	3,6	;RP1=0, select bank1
  6686  04AF' 0800'              	movf	sprintf@tmpval^(0+128),w
  6687  04B0' 1283               	bcf	3,5	;RP0=0, select bank0
  6688  04B1' 1303               	bcf	3,6	;RP1=0, select bank0
  6689  04B2' 0084'              	movwf	___llmod@dividend
  6690  04B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  6691  04B8' 1283               	bcf	3,5	;RP0=0, select bank0
  6692  04B9' 1303               	bcf	3,6	;RP1=0, select bank0
  6693  04BA' 0803'              	movf	?___llmod+3,w
  6694  04BB' 1683               	bsf	3,5	;RP0=1, select bank1
  6695  04BC' 1303               	bcf	3,6	;RP1=0, select bank1
  6696  04BD' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  6697  04BE' 1283               	bcf	3,5	;RP0=0, select bank0
  6698  04BF' 1303               	bcf	3,6	;RP1=0, select bank0
  6699  04C0' 0802'              	movf	?___llmod+2,w
  6700  04C1' 1683               	bsf	3,5	;RP0=1, select bank1
  6701  04C2' 1303               	bcf	3,6	;RP1=0, select bank1
  6702  04C3' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  6703  04C4' 1283               	bcf	3,5	;RP0=0, select bank0
  6704  04C5' 1303               	bcf	3,6	;RP1=0, select bank0
  6705  04C6' 0801'              	movf	?___llmod+1,w
  6706  04C7' 1683               	bsf	3,5	;RP0=1, select bank1
  6707  04C8' 1303               	bcf	3,6	;RP1=0, select bank1
  6708  04C9' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  6709  04CA' 1283               	bcf	3,5	;RP0=0, select bank0
  6710  04CB' 1303               	bcf	3,6	;RP1=0, select bank0
  6711  04CC' 0800'              	movf	?___llmod,w
  6712  04CD' 1683               	bsf	3,5	;RP0=1, select bank1
  6713  04CE' 1303               	bcf	3,6	;RP1=0, select bank1
  6714  04CF' 0080'              	movwf	sprintf@tmpval^(0+128)
  6715                           
  6716                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6717  04D0' 0800'              	movf	sprintf@tmpval^(0+128),w
  6718  04D1' 3E30               	addlw	48
  6719  04D2' 2800'              	goto	L8
  6720  04D3'                    l4786:	
  6721                           ;doprnt.c: 1204: }
  6722                           ;doprnt.c: 1206: }
  6723                           ;doprnt.c: 1207: while(exp > 0) {
  6724                           
  6725                           
  6726                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  6727  04D3' 3030               	movlw	48
  6728  04D4' 1683               	bsf	3,5	;RP0=1, select bank1
  6729  04D5' 1303               	bcf	3,6	;RP1=0, select bank1
  6730  04D6' 0080'              	movwf	??_sprintf^(0+128)
  6731  04D7' 1283               	bcf	3,5	;RP0=0, select bank0
  6732  04D8' 1303               	bcf	3,6	;RP1=0, select bank0
  6733  04D9' 0847'              	movf	sprintf@sp,w
  6734  04DA' 0084               	movwf	4
  6735  04DB' 1783               	bsf	3,7
  6736  04DC' 1C48'              	btfss	sprintf@sp+1,0
  6737  04DD' 1383               	bcf	3,7
  6738  04DE' 1683               	bsf	3,5	;RP0=1, select bank1
  6739  04DF' 1303               	bcf	3,6	;RP1=0, select bank1
  6740  04E0' 0800'              	movf	??_sprintf^(0+128),w
  6741  04E1' 0080               	movwf	0
  6742  04E2' 3001               	movlw	1
  6743  04E3' 1283               	bcf	3,5	;RP0=0, select bank0
  6744  04E4' 1303               	bcf	3,6	;RP1=0, select bank0
  6745  04E5' 07C7'              	addwf	sprintf@sp,f
  6746  04E6' 1803               	skipnc
  6747  04E7' 0AC8'              	incf	sprintf@sp+1,f
  6748                           
  6749                           ;doprnt.c: 1209: exp--;
  6750  04E8' 30FF               	movlw	255
  6751  04E9' 1683               	bsf	3,5	;RP0=1, select bank1
  6752  04EA' 1303               	bcf	3,6	;RP1=0, select bank1
  6753  04EB' 0780'              	addwf	sprintf@exp^(0+128),f
  6754  04EC' 1803               	skipnc
  6755  04ED' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  6756  04EE' 30FF               	movlw	255
  6757  04EF' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  6758  04F0'                    l4792:	
  6759  04F0' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  6760  04F1' 3A80               	xorlw	128
  6761  04F2' 00FF               	movwf	127
  6762  04F3' 3080               	movlw	128
  6763  04F4' 027F               	subwf	127,w
  6764  04F5' 1D03               	skipz
  6765  04F6' 2800'              	goto	u7865
  6766  04F7' 3001               	movlw	1
  6767  04F8' 0200'              	subwf	sprintf@exp^(0+128),w
  6768  04F9'                    u7865:	
  6769  04F9' 1803               	skipnc
  6770  04FA' 2800'              	goto	l4786
  6771                           
  6772                           ;doprnt.c: 1210: }
  6773                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6774  04FB' 1683               	bsf	3,5	;RP0=1, select bank1
  6775  04FC' 1303               	bcf	3,6	;RP1=0, select bank1
  6776  04FD' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  6777  04FE' 3A80               	xorlw	128
  6778  04FF' 00FF               	movwf	127
  6779  0500' 3080               	movlw	128
  6780  0501' 027F               	subwf	127,w
  6781  0502' 1D03               	skipz
  6782  0503' 2800'              	goto	u7875
  6783  0504' 3009               	movlw	9
  6784  0505' 0200'              	subwf	sprintf@prec^(0+128),w
  6785  0506'                    u7875:	
  6786  0506' 1C03               	skipc
  6787  0507' 2800'              	goto	l4798
  6788                           
  6789                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6790  0508' 3008               	movlw	8
  6791  0509' 1683               	bsf	3,5	;RP0=1, select bank1
  6792  050A' 1303               	bcf	3,6	;RP1=0, select bank1
  6793  050B' 2800'              	goto	L6
  6794  050C'                    l4798:	
  6795                           
  6796                           ;doprnt.c: 1213: else
  6797                           ;doprnt.c: 1214: c = prec;
  6798  050C' 1683               	bsf	3,5	;RP0=1, select bank1
  6799  050D' 1303               	bcf	3,6	;RP1=0, select bank1
  6800  050E' 0800'              	movf	sprintf@prec^(0+128),w
  6801  050F'                    L6:	
  6802  050F' 0080'              	movwf	??_sprintf^(0+128)
  6803  0510' 0800'              	movf	??_sprintf^(0+128),w
  6804  0511' 0080'              	movwf	sprintf@c^(0+128)
  6805                           
  6806                           ;doprnt.c: 1215: prec -= c;
  6807  0512' 0800'              	movf	sprintf@c^(0+128),w
  6808  0513' 0080'              	movwf	??_sprintf^(0+128)
  6809  0514' 0181'              	clrf	(??_sprintf^(0+128)+1)
  6810  0515' 1B80'              	btfsc	??_sprintf^(0+128),7
  6811  0516' 0381'              	decf	(??_sprintf^(0+128)+1),f
  6812  0517' 0800'              	movf	??_sprintf^(0+128),w
  6813  0518' 0280'              	subwf	sprintf@prec^(0+128),f
  6814  0519' 0800'              	movf	(??_sprintf+1)^(0+128),w
  6815  051A' 1C03               	skipc
  6816  051B' 0380'              	decf	(sprintf@prec+1)^(0+128),f
  6817  051C' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
  6818                           
  6819                           ;doprnt.c: 1219: if(c)
  6820  051D' 0800'              	movf	sprintf@c^(0+128),w
  6821  051E' 1903               	btfsc	3,2
  6822  051F' 2800'              	goto	l4806
  6823                           
  6824                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  6825  0520' 302E               	movlw	46
  6826  0521' 0080'              	movwf	??_sprintf^(0+128)
  6827  0522' 1283               	bcf	3,5	;RP0=0, select bank0
  6828  0523' 1303               	bcf	3,6	;RP1=0, select bank0
  6829  0524' 0847'              	movf	sprintf@sp,w
  6830  0525' 0084               	movwf	4
  6831  0526' 1783               	bsf	3,7
  6832  0527' 1C48'              	btfss	sprintf@sp+1,0
  6833  0528' 1383               	bcf	3,7
  6834  0529' 1683               	bsf	3,5	;RP0=1, select bank1
  6835  052A' 1303               	bcf	3,6	;RP1=0, select bank1
  6836  052B' 0800'              	movf	??_sprintf^(0+128),w
  6837  052C' 0080               	movwf	0
  6838  052D' 3001               	movlw	1
  6839  052E' 1283               	bcf	3,5	;RP0=0, select bank0
  6840  052F' 1303               	bcf	3,6	;RP1=0, select bank0
  6841  0530' 07C7'              	addwf	sprintf@sp,f
  6842  0531' 1803               	skipnc
  6843  0532' 0AC8'              	incf	sprintf@sp+1,f
  6844  0533'                    l4806:	
  6845                           
  6846                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6847  0533' 1683               	bsf	3,5	;RP0=1, select bank1
  6848  0534' 1303               	bcf	3,6	;RP1=0, select bank1
  6849  0535' 0800'              	movf	sprintf@c^(0+128),w
  6850  0536' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  6851  053B' 1283               	bcf	3,5	;RP0=0, select bank0
  6852  053C' 1303               	bcf	3,6	;RP1=0, select bank0
  6853  053D' 0824'              	movf	?_scale,w
  6854  053E' 1683               	bsf	3,5	;RP0=1, select bank1
  6855  053F' 1303               	bcf	3,6	;RP1=0, select bank1
  6856  0540' 0080'              	movwf	_sprintf$927^(0+128)
  6857  0541' 1283               	bcf	3,5	;RP0=0, select bank0
  6858  0542' 1303               	bcf	3,6	;RP1=0, select bank0
  6859  0543' 0825'              	movf	?_scale+1,w
  6860  0544' 1683               	bsf	3,5	;RP0=1, select bank1
  6861  0545' 1303               	bcf	3,6	;RP1=0, select bank1
  6862  0546' 0080'              	movwf	(_sprintf$927+1)^(0+128)
  6863  0547' 1283               	bcf	3,5	;RP0=0, select bank0
  6864  0548' 1303               	bcf	3,6	;RP1=0, select bank0
  6865  0549' 0826'              	movf	?_scale+2,w
  6866  054A' 1683               	bsf	3,5	;RP0=1, select bank1
  6867  054B' 1303               	bcf	3,6	;RP1=0, select bank1
  6868  054C' 0080'              	movwf	(_sprintf$927+2)^(0+128)
  6869                           
  6870                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6871  054D' 0800'              	movf	_sprintf$927^(0+128),w
  6872  054E' 1283               	bcf	3,5	;RP0=0, select bank0
  6873  054F' 1303               	bcf	3,6	;RP1=0, select bank0
  6874  0550' 0097'              	movwf	___ftmul@f2
  6875  0551' 1683               	bsf	3,5	;RP0=1, select bank1
  6876  0552' 1303               	bcf	3,6	;RP1=0, select bank1
  6877  0553' 0800'              	movf	(_sprintf$927+1)^(0+128),w
  6878  0554' 1283               	bcf	3,5	;RP0=0, select bank0
  6879  0555' 1303               	bcf	3,6	;RP1=0, select bank0
  6880  0556' 0098'              	movwf	___ftmul@f2+1
  6881  0557' 1683               	bsf	3,5	;RP0=1, select bank1
  6882  0558' 1303               	bcf	3,6	;RP1=0, select bank1
  6883  0559' 0800'              	movf	(_sprintf$927+2)^(0+128),w
  6884  055A' 1283               	bcf	3,5	;RP0=0, select bank0
  6885  055B' 1303               	bcf	3,6	;RP1=0, select bank0
  6886  055C' 0099'              	movwf	___ftmul@f2+2
  6887  055D' 1683               	bsf	3,5	;RP0=1, select bank1
  6888  055E' 1303               	bcf	3,6	;RP1=0, select bank1
  6889  055F' 0800'              	movf	sprintf@fval^(0+128),w
  6890  0560' 1283               	bcf	3,5	;RP0=0, select bank0
  6891  0561' 1303               	bcf	3,6	;RP1=0, select bank0
  6892  0562' 0094'              	movwf	___ftmul@f1
  6893  0563' 1683               	bsf	3,5	;RP0=1, select bank1
  6894  0564' 1303               	bcf	3,6	;RP1=0, select bank1
  6895  0565' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6896  0566' 1283               	bcf	3,5	;RP0=0, select bank0
  6897  0567' 1303               	bcf	3,6	;RP1=0, select bank0
  6898  0568' 0095'              	movwf	___ftmul@f1+1
  6899  0569' 1683               	bsf	3,5	;RP0=1, select bank1
  6900  056A' 1303               	bcf	3,6	;RP1=0, select bank1
  6901  056B' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6902  056C' 1283               	bcf	3,5	;RP0=0, select bank0
  6903  056D' 1303               	bcf	3,6	;RP1=0, select bank0
  6904  056E' 0096'              	movwf	___ftmul@f1+2
  6905  056F' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  6906  0574' 1283               	bcf	3,5	;RP0=0, select bank0
  6907  0575' 1303               	bcf	3,6	;RP1=0, select bank0
  6908  0576' 0814'              	movf	?___ftmul,w
  6909  0577' 00B4'              	movwf	___fttol@f1
  6910  0578' 0815'              	movf	?___ftmul+1,w
  6911  0579' 00B5'              	movwf	___fttol@f1+1
  6912  057A' 0816'              	movf	?___ftmul+2,w
  6913  057B' 00B6'              	movwf	___fttol@f1+2
  6914  057C' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  6915  0581' 1283               	bcf	3,5	;RP0=0, select bank0
  6916  0582' 1303               	bcf	3,6	;RP1=0, select bank0
  6917  0583' 0837'              	movf	?___fttol+3,w
  6918  0584' 1683               	bsf	3,5	;RP0=1, select bank1
  6919  0585' 1303               	bcf	3,6	;RP1=0, select bank1
  6920  0586' 0080'              	movwf	(sprintf@val+3)^(0+128)
  6921  0587' 1283               	bcf	3,5	;RP0=0, select bank0
  6922  0588' 1303               	bcf	3,6	;RP1=0, select bank0
  6923  0589' 0836'              	movf	?___fttol+2,w
  6924  058A' 1683               	bsf	3,5	;RP0=1, select bank1
  6925  058B' 1303               	bcf	3,6	;RP1=0, select bank1
  6926  058C' 0080'              	movwf	(sprintf@val+2)^(0+128)
  6927  058D' 1283               	bcf	3,5	;RP0=0, select bank0
  6928  058E' 1303               	bcf	3,6	;RP1=0, select bank0
  6929  058F' 0835'              	movf	?___fttol+1,w
  6930  0590' 1683               	bsf	3,5	;RP0=1, select bank1
  6931  0591' 1303               	bcf	3,6	;RP1=0, select bank1
  6932  0592' 0080'              	movwf	(sprintf@val+1)^(0+128)
  6933  0593' 1283               	bcf	3,5	;RP0=0, select bank0
  6934  0594' 1303               	bcf	3,6	;RP1=0, select bank0
  6935  0595' 0834'              	movf	?___fttol,w
  6936  0596'                    L7:	
  6937  0596' 1683               	bsf	3,5	;RP0=1, select bank1
  6938  0597' 1303               	bcf	3,6	;RP1=0, select bank1
  6939  0598' 0080'              	movwf	sprintf@val^(0+128)
  6940  0599' 30FF               	movlw	255
  6941  059A' 0080'              	movwf	??_sprintf^(0+128)
  6942  059B' 0800'              	movf	??_sprintf^(0+128),w
  6943  059C' 0780'              	addwf	sprintf@c^(0+128),f
  6944  059D' 0A00'              	incf	sprintf@c^(0+128),w
  6945  059E' 1903               	btfsc	3,2
  6946  059F' 2800'              	goto	L16
  6947                           
  6948                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6949                           
  6950                           ;doprnt.c: 1228: while(c--) {
  6951  05A0' 0800'              	movf	sprintf@c^(0+128),w
  6952  05A1' 0080'              	movwf	??_sprintf^(0+128)
  6953  05A2' 3001               	movlw	1
  6954  05A3'                    u7895:	
  6955  05A3' 1003               	clrc
  6956  05A4' 0D80'              	rlf	??_sprintf^(0+128),f
  6957  05A5' 3EFF               	addlw	-1
  6958  05A6' 1D03               	skipz
  6959  05A7' 2800'              	goto	u7895
  6960  05A8' 1003               	clrc
  6961  05A9' 0D00'              	rlf	??_sprintf^(0+128),w
  6962  05AA' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  6963  05AB' 0084               	movwf	4
  6964  05AC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6965  05B1' 1283               	bcf	3,5	;RP0=0, select bank0
  6966  05B2' 1303               	bcf	3,6	;RP1=0, select bank0
  6967  05B3' 008A'              	movwf	___lldiv@divisor
  6968  05B4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6969  05B9' 008B'              	movwf	___lldiv@divisor+1
  6970  05BA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6971  05BF' 008C'              	movwf	___lldiv@divisor+2
  6972  05C0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6973  05C5' 008D'              	movwf	___lldiv@divisor+3
  6974  05C6' 1683               	bsf	3,5	;RP0=1, select bank1
  6975  05C7' 1303               	bcf	3,6	;RP1=0, select bank1
  6976  05C8' 0800'              	movf	(sprintf@val+3)^(0+128),w
  6977  05C9' 1283               	bcf	3,5	;RP0=0, select bank0
  6978  05CA' 1303               	bcf	3,6	;RP1=0, select bank0
  6979  05CB' 0091'              	movwf	___lldiv@dividend+3
  6980  05CC' 1683               	bsf	3,5	;RP0=1, select bank1
  6981  05CD' 1303               	bcf	3,6	;RP1=0, select bank1
  6982  05CE' 0800'              	movf	(sprintf@val+2)^(0+128),w
  6983  05CF' 1283               	bcf	3,5	;RP0=0, select bank0
  6984  05D0' 1303               	bcf	3,6	;RP1=0, select bank0
  6985  05D1' 0090'              	movwf	___lldiv@dividend+2
  6986  05D2' 1683               	bsf	3,5	;RP0=1, select bank1
  6987  05D3' 1303               	bcf	3,6	;RP1=0, select bank1
  6988  05D4' 0800'              	movf	(sprintf@val+1)^(0+128),w
  6989  05D5' 1283               	bcf	3,5	;RP0=0, select bank0
  6990  05D6' 1303               	bcf	3,6	;RP1=0, select bank0
  6991  05D7' 008F'              	movwf	___lldiv@dividend+1
  6992  05D8' 1683               	bsf	3,5	;RP0=1, select bank1
  6993  05D9' 1303               	bcf	3,6	;RP1=0, select bank1
  6994  05DA' 0800'              	movf	sprintf@val^(0+128),w
  6995  05DB' 1283               	bcf	3,5	;RP0=0, select bank0
  6996  05DC' 1303               	bcf	3,6	;RP1=0, select bank0
  6997  05DD' 008E'              	movwf	___lldiv@dividend
  6998  05DE' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  6999  05E3' 1283               	bcf	3,5	;RP0=0, select bank0
  7000  05E4' 1303               	bcf	3,6	;RP1=0, select bank0
  7001  05E5' 080D'              	movf	?___lldiv+3,w
  7002  05E6' 1683               	bsf	3,5	;RP0=1, select bank1
  7003  05E7' 1303               	bcf	3,6	;RP1=0, select bank1
  7004  05E8' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  7005  05E9' 1283               	bcf	3,5	;RP0=0, select bank0
  7006  05EA' 1303               	bcf	3,6	;RP1=0, select bank0
  7007  05EB' 080C'              	movf	?___lldiv+2,w
  7008  05EC' 1683               	bsf	3,5	;RP0=1, select bank1
  7009  05ED' 1303               	bcf	3,6	;RP1=0, select bank1
  7010  05EE' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  7011  05EF' 1283               	bcf	3,5	;RP0=0, select bank0
  7012  05F0' 1303               	bcf	3,6	;RP1=0, select bank0
  7013  05F1' 080B'              	movf	?___lldiv+1,w
  7014  05F2' 1683               	bsf	3,5	;RP0=1, select bank1
  7015  05F3' 1303               	bcf	3,6	;RP1=0, select bank1
  7016  05F4' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  7017  05F5' 1283               	bcf	3,5	;RP0=0, select bank0
  7018  05F6' 1303               	bcf	3,6	;RP1=0, select bank0
  7019  05F7' 080A'              	movf	?___lldiv,w
  7020  05F8' 1683               	bsf	3,5	;RP0=1, select bank1
  7021  05F9' 1303               	bcf	3,6	;RP1=0, select bank1
  7022  05FA' 0080'              	movwf	sprintf@tmpval^(0+128)
  7023                           
  7024                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7025  05FB' 3000               	movlw	0
  7026  05FC' 1283               	bcf	3,5	;RP0=0, select bank0
  7027  05FD' 1303               	bcf	3,6	;RP1=0, select bank0
  7028  05FE' 0083'              	movwf	___llmod@divisor+3
  7029  05FF' 3000               	movlw	0
  7030  0600' 0082'              	movwf	___llmod@divisor+2
  7031  0601' 3000               	movlw	0
  7032  0602' 0081'              	movwf	___llmod@divisor+1
  7033  0603' 300A               	movlw	10
  7034  0604' 0080'              	movwf	___llmod@divisor
  7035  0605' 1683               	bsf	3,5	;RP0=1, select bank1
  7036  0606' 1303               	bcf	3,6	;RP1=0, select bank1
  7037  0607' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  7038  0608' 1283               	bcf	3,5	;RP0=0, select bank0
  7039  0609' 1303               	bcf	3,6	;RP1=0, select bank0
  7040  060A' 0087'              	movwf	___llmod@dividend+3
  7041  060B' 1683               	bsf	3,5	;RP0=1, select bank1
  7042  060C' 1303               	bcf	3,6	;RP1=0, select bank1
  7043  060D' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  7044  060E' 1283               	bcf	3,5	;RP0=0, select bank0
  7045  060F' 1303               	bcf	3,6	;RP1=0, select bank0
  7046  0610' 0086'              	movwf	___llmod@dividend+2
  7047  0611' 1683               	bsf	3,5	;RP0=1, select bank1
  7048  0612' 1303               	bcf	3,6	;RP1=0, select bank1
  7049  0613' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  7050  0614' 1283               	bcf	3,5	;RP0=0, select bank0
  7051  0615' 1303               	bcf	3,6	;RP1=0, select bank0
  7052  0616' 0085'              	movwf	___llmod@dividend+1
  7053  0617' 1683               	bsf	3,5	;RP0=1, select bank1
  7054  0618' 1303               	bcf	3,6	;RP1=0, select bank1
  7055  0619' 0800'              	movf	sprintf@tmpval^(0+128),w
  7056  061A' 1283               	bcf	3,5	;RP0=0, select bank0
  7057  061B' 1303               	bcf	3,6	;RP1=0, select bank0
  7058  061C' 0084'              	movwf	___llmod@dividend
  7059  061D' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  7060  0622' 1283               	bcf	3,5	;RP0=0, select bank0
  7061  0623' 1303               	bcf	3,6	;RP1=0, select bank0
  7062  0624' 0803'              	movf	?___llmod+3,w
  7063  0625' 1683               	bsf	3,5	;RP0=1, select bank1
  7064  0626' 1303               	bcf	3,6	;RP1=0, select bank1
  7065  0627' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  7066  0628' 1283               	bcf	3,5	;RP0=0, select bank0
  7067  0629' 1303               	bcf	3,6	;RP1=0, select bank0
  7068  062A' 0802'              	movf	?___llmod+2,w
  7069  062B' 1683               	bsf	3,5	;RP0=1, select bank1
  7070  062C' 1303               	bcf	3,6	;RP1=0, select bank1
  7071  062D' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  7072  062E' 1283               	bcf	3,5	;RP0=0, select bank0
  7073  062F' 1303               	bcf	3,6	;RP1=0, select bank0
  7074  0630' 0801'              	movf	?___llmod+1,w
  7075  0631' 1683               	bsf	3,5	;RP0=1, select bank1
  7076  0632' 1303               	bcf	3,6	;RP1=0, select bank1
  7077  0633' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  7078  0634' 1283               	bcf	3,5	;RP0=0, select bank0
  7079  0635' 1303               	bcf	3,6	;RP1=0, select bank0
  7080  0636' 0800'              	movf	?___llmod,w
  7081  0637' 1683               	bsf	3,5	;RP0=1, select bank1
  7082  0638' 1303               	bcf	3,6	;RP1=0, select bank1
  7083  0639' 0080'              	movwf	sprintf@tmpval^(0+128)
  7084                           
  7085                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7086  063A' 0800'              	movf	sprintf@tmpval^(0+128),w
  7087  063B' 3E30               	addlw	48
  7088  063C' 0080'              	movwf	??_sprintf^(0+128)
  7089  063D' 1283               	bcf	3,5	;RP0=0, select bank0
  7090  063E' 1303               	bcf	3,6	;RP1=0, select bank0
  7091  063F' 0847'              	movf	sprintf@sp,w
  7092  0640' 0084               	movwf	4
  7093  0641' 1783               	bsf	3,7
  7094  0642' 1C48'              	btfss	sprintf@sp+1,0
  7095  0643' 1383               	bcf	3,7
  7096  0644' 1683               	bsf	3,5	;RP0=1, select bank1
  7097  0645' 1303               	bcf	3,6	;RP1=0, select bank1
  7098  0646' 0800'              	movf	??_sprintf^(0+128),w
  7099  0647' 0080               	movwf	0
  7100  0648' 3001               	movlw	1
  7101  0649' 1283               	bcf	3,5	;RP0=0, select bank0
  7102  064A' 1303               	bcf	3,6	;RP1=0, select bank0
  7103  064B' 07C7'              	addwf	sprintf@sp,f
  7104  064C' 1803               	skipnc
  7105  064D' 0AC8'              	incf	sprintf@sp+1,f
  7106                           
  7107                           ;doprnt.c: 1232: val %= dpowers[c];
  7108  064E' 1683               	bsf	3,5	;RP0=1, select bank1
  7109  064F' 1303               	bcf	3,6	;RP1=0, select bank1
  7110  0650' 0800'              	movf	sprintf@c^(0+128),w
  7111  0651' 0080'              	movwf	??_sprintf^(0+128)
  7112  0652' 3001               	movlw	1
  7113  0653'                    u7905:	
  7114  0653' 1003               	clrc
  7115  0654' 0D80'              	rlf	??_sprintf^(0+128),f
  7116  0655' 3EFF               	addlw	-1
  7117  0656' 1D03               	skipz
  7118  0657' 2800'              	goto	u7905
  7119  0658' 1003               	clrc
  7120  0659' 0D00'              	rlf	??_sprintf^(0+128),w
  7121  065A' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  7122  065B' 0084               	movwf	4
  7123  065C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7124  0661' 1283               	bcf	3,5	;RP0=0, select bank0
  7125  0662' 1303               	bcf	3,6	;RP1=0, select bank0
  7126  0663' 0080'              	movwf	___llmod@divisor
  7127  0664' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7128  0669' 0081'              	movwf	___llmod@divisor+1
  7129  066A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7130  066F' 0082'              	movwf	___llmod@divisor+2
  7131  0670' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7132  0675' 0083'              	movwf	___llmod@divisor+3
  7133  0676' 1683               	bsf	3,5	;RP0=1, select bank1
  7134  0677' 1303               	bcf	3,6	;RP1=0, select bank1
  7135  0678' 0800'              	movf	(sprintf@val+3)^(0+128),w
  7136  0679' 1283               	bcf	3,5	;RP0=0, select bank0
  7137  067A' 1303               	bcf	3,6	;RP1=0, select bank0
  7138  067B' 0087'              	movwf	___llmod@dividend+3
  7139  067C' 1683               	bsf	3,5	;RP0=1, select bank1
  7140  067D' 1303               	bcf	3,6	;RP1=0, select bank1
  7141  067E' 0800'              	movf	(sprintf@val+2)^(0+128),w
  7142  067F' 1283               	bcf	3,5	;RP0=0, select bank0
  7143  0680' 1303               	bcf	3,6	;RP1=0, select bank0
  7144  0681' 0086'              	movwf	___llmod@dividend+2
  7145  0682' 1683               	bsf	3,5	;RP0=1, select bank1
  7146  0683' 1303               	bcf	3,6	;RP1=0, select bank1
  7147  0684' 0800'              	movf	(sprintf@val+1)^(0+128),w
  7148  0685' 1283               	bcf	3,5	;RP0=0, select bank0
  7149  0686' 1303               	bcf	3,6	;RP1=0, select bank0
  7150  0687' 0085'              	movwf	___llmod@dividend+1
  7151  0688' 1683               	bsf	3,5	;RP0=1, select bank1
  7152  0689' 1303               	bcf	3,6	;RP1=0, select bank1
  7153  068A' 0800'              	movf	sprintf@val^(0+128),w
  7154  068B' 1283               	bcf	3,5	;RP0=0, select bank0
  7155  068C' 1303               	bcf	3,6	;RP1=0, select bank0
  7156  068D' 0084'              	movwf	___llmod@dividend
  7157  068E' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  7158  0693' 1283               	bcf	3,5	;RP0=0, select bank0
  7159  0694' 1303               	bcf	3,6	;RP1=0, select bank0
  7160  0695' 0803'              	movf	?___llmod+3,w
  7161  0696' 1683               	bsf	3,5	;RP0=1, select bank1
  7162  0697' 1303               	bcf	3,6	;RP1=0, select bank1
  7163  0698' 0080'              	movwf	(sprintf@val+3)^(0+128)
  7164  0699' 1283               	bcf	3,5	;RP0=0, select bank0
  7165  069A' 1303               	bcf	3,6	;RP1=0, select bank0
  7166  069B' 0802'              	movf	?___llmod+2,w
  7167  069C' 1683               	bsf	3,5	;RP0=1, select bank1
  7168  069D' 1303               	bcf	3,6	;RP1=0, select bank1
  7169  069E' 0080'              	movwf	(sprintf@val+2)^(0+128)
  7170  069F' 1283               	bcf	3,5	;RP0=0, select bank0
  7171  06A0' 1303               	bcf	3,6	;RP1=0, select bank0
  7172  06A1' 0801'              	movf	?___llmod+1,w
  7173  06A2' 1683               	bsf	3,5	;RP0=1, select bank1
  7174  06A3' 1303               	bcf	3,6	;RP1=0, select bank1
  7175  06A4' 0080'              	movwf	(sprintf@val+1)^(0+128)
  7176  06A5' 1283               	bcf	3,5	;RP0=0, select bank0
  7177  06A6' 1303               	bcf	3,6	;RP1=0, select bank0
  7178  06A7' 0800'              	movf	?___llmod,w
  7179  06A8' 2800'              	goto	L7
  7180  06A9'                    L12:	
  7181  06A9'                    L11:	
  7182  06A9' 120A' 118A' 2800'  	ljmp	l4880
  7183  06AC'                    L14:	
  7184  06AC'                    L13:	
  7185  06AC' 120A' 118A' 2800'  	ljmp	l4830
  7186  06AF'                    L16:	
  7187  06AF'                    L15:	
  7188  06AF' 120A' 118A' 2800'  	ljmp	l4828
  7189                           
  7190                           	psect	text18
  7191  0000'                    __ptext18:	
  7192 ;; *************** function _scale *****************
  7193 ;; Defined at:
  7194 ;;		line 425 in file "D:\mplab\sources\common\doprnt.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  scl             1    wreg     char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  scl             1   44[BANK0 ] char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  3   36[BANK0 ] char 
  7201 ;; Registers used:
  7202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7208 ;;      Params:         0       3       0       0       0
  7209 ;;      Locals:         0       4       0       0       0
  7210 ;;      Temps:          0       2       0       0       0
  7211 ;;      Totals:         0       9       0       0       0
  7212 ;;Total ram usage:        9 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    3
  7215 ;; This function calls:
  7216 ;;		___awdiv
  7217 ;;		___awmod
  7218 ;;		___bmul
  7219 ;;		___ftmul
  7220 ;; This function is called by:
  7221 ;;		_sprintf
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           
  7226                           ;psect for function _scale
  7227  0000'                    _scale:	
  7228                           
  7229                           ;incstack = 0
  7230                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7231                           ;scale@scl stored from wreg
  7232  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7233  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7234  0002' 00AC'              	movwf	scale@scl
  7235                           
  7236                           ;doprnt.c: 428: if(scl < 0) {
  7237  0003' 1FAC'              	btfss	scale@scl,7
  7238  0004' 2800'              	goto	l4216
  7239                           
  7240                           ;doprnt.c: 429: scl = -scl;
  7241  0005' 09AC'              	comf	scale@scl,f
  7242  0006' 0AAC'              	incf	scale@scl,f
  7243                           
  7244                           ;doprnt.c: 430: if(scl>=110)
  7245  0007' 082C'              	movf	scale@scl,w
  7246  0008' 3A80               	xorlw	128
  7247  0009' 3E12               	addlw	-238
  7248  000A' 1C03               	skipc
  7249  000B' 2800'              	goto	l4206
  7250                           
  7251                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7252  000C' 3003               	movlw	3
  7253  000D' 00A7'              	movwf	??_scale
  7254  000E' 0827'              	movf	??_scale,w
  7255  000F' 0090'              	movwf	___bmul@multiplicand
  7256  0010' 300A               	movlw	10
  7257  0011' 0087'              	movwf	___awdiv@divisor
  7258  0012' 3000               	movlw	0
  7259  0013' 0088'              	movwf	___awdiv@divisor+1
  7260  0014' 082C'              	movf	scale@scl,w
  7261  0015' 0082'              	movwf	___awmod@dividend
  7262  0016' 0183'              	clrf	___awmod@dividend+1
  7263  0017' 1B82'              	btfsc	___awmod@dividend,7
  7264  0018' 0383'              	decf	___awmod@dividend+1,f
  7265  0019' 3064               	movlw	100
  7266  001A' 0080'              	movwf	___awmod@divisor
  7267  001B' 3000               	movlw	0
  7268  001C' 0081'              	movwf	___awmod@divisor+1
  7269  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7270  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  7271  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  7272  0024' 0801'              	movf	?___awmod+1,w
  7273  0025' 008A'              	movwf	___awdiv@dividend+1
  7274  0026' 0800'              	movf	?___awmod,w
  7275  0027' 0089'              	movwf	___awdiv@dividend
  7276  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7277  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  7278  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  7279  002F' 0807'              	movf	?___awdiv,w
  7280  0030' 3E09               	addlw	9
  7281  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7282  0036' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7283  0037' 0084               	movwf	4
  7284  0038' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7285  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  7286  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  7287  003F' 0094'              	movwf	___ftmul@f1
  7288  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7289  0045' 0095'              	movwf	___ftmul@f1+1
  7290  0046' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7291  004B' 0096'              	movwf	___ftmul@f1+2
  7292  004C' 3003               	movlw	3
  7293  004D' 00A8'              	movwf	??_scale+1
  7294  004E' 0828'              	movf	??_scale+1,w
  7295  004F' 0090'              	movwf	___bmul@multiplicand
  7296  0050' 3064               	movlw	100
  7297  0051' 0087'              	movwf	___awdiv@divisor
  7298  0052' 3000               	movlw	0
  7299  0053' 0088'              	movwf	___awdiv@divisor+1
  7300  0054' 082C'              	movf	scale@scl,w
  7301  0055' 0089'              	movwf	___awdiv@dividend
  7302  0056' 018A'              	clrf	___awdiv@dividend+1
  7303  0057' 1B89'              	btfsc	___awdiv@dividend,7
  7304  0058' 038A'              	decf	___awdiv@dividend+1,f
  7305  0059' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7306  005E' 1283               	bcf	3,5	;RP0=0, select bank0
  7307  005F' 1303               	bcf	3,6	;RP1=0, select bank0
  7308  0060' 0807'              	movf	?___awdiv,w
  7309  0061' 3E12               	addlw	18
  7310  0062' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7311  0067' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7312  0068' 0084               	movwf	4
  7313  0069' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7314  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  7315  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  7316  0070' 0097'              	movwf	___ftmul@f2
  7317  0071' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7318  0076' 0098'              	movwf	___ftmul@f2+1
  7319  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7320  007C' 0099'              	movwf	___ftmul@f2+2
  7321  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7322  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  7323  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  7324  0084' 0814'              	movf	?___ftmul,w
  7325  0085' 00A9'              	movwf	_scale$926
  7326  0086' 0815'              	movf	?___ftmul+1,w
  7327  0087' 00AA'              	movwf	_scale$926+1
  7328  0088' 0816'              	movf	?___ftmul+2,w
  7329  0089' 00AB'              	movwf	_scale$926+2
  7330                           
  7331                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7332  008A' 3003               	movlw	3
  7333  008B' 00A7'              	movwf	??_scale
  7334  008C' 0827'              	movf	??_scale,w
  7335  008D' 0090'              	movwf	___bmul@multiplicand
  7336  008E' 082C'              	movf	scale@scl,w
  7337  008F' 0082'              	movwf	___awmod@dividend
  7338  0090' 0183'              	clrf	___awmod@dividend+1
  7339  0091' 1B82'              	btfsc	___awmod@dividend,7
  7340  0092' 0383'              	decf	___awmod@dividend+1,f
  7341  0093' 300A               	movlw	10
  7342  0094' 0080'              	movwf	___awmod@divisor
  7343  0095' 3000               	movlw	0
  7344  0096' 0081'              	movwf	___awmod@divisor+1
  7345  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7346  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  7347  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  7348  009E' 0800'              	movf	?___awmod,w
  7349  009F' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7350  00A4' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7351  00A5' 0084               	movwf	4
  7352  00A6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7353  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  7354  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  7355  00AD' 0094'              	movwf	___ftmul@f1
  7356  00AE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7357  00B3' 0095'              	movwf	___ftmul@f1+1
  7358  00B4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7359  00B9' 0096'              	movwf	___ftmul@f1+2
  7360  00BA' 0829'              	movf	_scale$926,w
  7361  00BB' 0097'              	movwf	___ftmul@f2
  7362  00BC' 082A'              	movf	_scale$926+1,w
  7363  00BD' 0098'              	movwf	___ftmul@f2+1
  7364  00BE' 082B'              	movf	_scale$926+2,w
  7365  00BF' 0099'              	movwf	___ftmul@f2+2
  7366  00C0' 120A' 118A' 2000'  	fcall	___ftmul
  7367  00C3' 1283               	bcf	3,5	;RP0=0, select bank0
  7368  00C4' 1303               	bcf	3,6	;RP1=0, select bank0
  7369  00C5' 0814'              	movf	?___ftmul,w
  7370  00C6' 00A4'              	movwf	?_scale
  7371  00C7' 0815'              	movf	?___ftmul+1,w
  7372  00C8' 00A5'              	movwf	?_scale+1
  7373  00C9' 0816'              	movf	?___ftmul+2,w
  7374  00CA' 00A6'              	movwf	?_scale+2
  7375  00CB' 0008               	return
  7376  00CC'                    l4206:	
  7377                           
  7378                           ;doprnt.c: 432: else if(scl > 10)
  7379  00CC' 082C'              	movf	scale@scl,w
  7380  00CD' 3A80               	xorlw	128
  7381  00CE' 3E75               	addlw	-139
  7382  00CF' 1C03               	skipc
  7383  00D0' 2800'              	goto	l4212
  7384                           
  7385                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7386  00D1' 3003               	movlw	3
  7387  00D2' 00A7'              	movwf	??_scale
  7388  00D3' 0827'              	movf	??_scale,w
  7389  00D4' 0090'              	movwf	___bmul@multiplicand
  7390  00D5' 082C'              	movf	scale@scl,w
  7391  00D6' 0082'              	movwf	___awmod@dividend
  7392  00D7' 0183'              	clrf	___awmod@dividend+1
  7393  00D8' 1B82'              	btfsc	___awmod@dividend,7
  7394  00D9' 0383'              	decf	___awmod@dividend+1,f
  7395  00DA' 300A               	movlw	10
  7396  00DB' 0080'              	movwf	___awmod@divisor
  7397  00DC' 3000               	movlw	0
  7398  00DD' 0081'              	movwf	___awmod@divisor+1
  7399  00DE' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7400  00E3' 1283               	bcf	3,5	;RP0=0, select bank0
  7401  00E4' 1303               	bcf	3,6	;RP1=0, select bank0
  7402  00E5' 0800'              	movf	?___awmod,w
  7403  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7404  00EB' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7405  00EC' 0084               	movwf	4
  7406  00ED' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7407  00F2' 1283               	bcf	3,5	;RP0=0, select bank0
  7408  00F3' 1303               	bcf	3,6	;RP1=0, select bank0
  7409  00F4' 0094'              	movwf	___ftmul@f1
  7410  00F5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7411  00FA' 0095'              	movwf	___ftmul@f1+1
  7412  00FB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7413  0100' 0096'              	movwf	___ftmul@f1+2
  7414  0101' 3003               	movlw	3
  7415  0102' 00A8'              	movwf	??_scale+1
  7416  0103' 0828'              	movf	??_scale+1,w
  7417  0104' 0090'              	movwf	___bmul@multiplicand
  7418  0105' 300A               	movlw	10
  7419  0106' 0087'              	movwf	___awdiv@divisor
  7420  0107' 3000               	movlw	0
  7421  0108' 0088'              	movwf	___awdiv@divisor+1
  7422  0109' 082C'              	movf	scale@scl,w
  7423  010A' 0089'              	movwf	___awdiv@dividend
  7424  010B' 018A'              	clrf	___awdiv@dividend+1
  7425  010C' 1B89'              	btfsc	___awdiv@dividend,7
  7426  010D' 038A'              	decf	___awdiv@dividend+1,f
  7427  010E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7428  0113' 1283               	bcf	3,5	;RP0=0, select bank0
  7429  0114' 1303               	bcf	3,6	;RP1=0, select bank0
  7430  0115' 0807'              	movf	?___awdiv,w
  7431  0116' 3E09               	addlw	9
  7432  0117' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7433  011C' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7434  011D' 0084               	movwf	4
  7435  011E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7436  0123' 1283               	bcf	3,5	;RP0=0, select bank0
  7437  0124' 1303               	bcf	3,6	;RP1=0, select bank0
  7438  0125' 0097'              	movwf	___ftmul@f2
  7439  0126' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7440  012B' 0098'              	movwf	___ftmul@f2+1
  7441  012C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7442  0131' 0099'              	movwf	___ftmul@f2+2
  7443  0132' 120A' 118A' 2000'  	fcall	___ftmul
  7444  0135' 1283               	bcf	3,5	;RP0=0, select bank0
  7445  0136' 1303               	bcf	3,6	;RP1=0, select bank0
  7446  0137' 0814'              	movf	?___ftmul,w
  7447  0138' 00A4'              	movwf	?_scale
  7448  0139' 0815'              	movf	?___ftmul+1,w
  7449  013A' 00A5'              	movwf	?_scale+1
  7450  013B' 0816'              	movf	?___ftmul+2,w
  7451  013C' 00A6'              	movwf	?_scale+2
  7452  013D' 0008               	return
  7453  013E'                    l4212:	
  7454                           
  7455                           ;doprnt.c: 434: return _npowers_[scl];
  7456  013E' 3003               	movlw	3
  7457  013F' 00A7'              	movwf	??_scale
  7458  0140' 0827'              	movf	??_scale,w
  7459  0141' 0090'              	movwf	___bmul@multiplicand
  7460  0142' 082C'              	movf	scale@scl,w
  7461  0143' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7462  0148' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7463  0149' 0084               	movwf	4
  7464  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7465  014F' 1283               	bcf	3,5	;RP0=0, select bank0
  7466  0150' 1303               	bcf	3,6	;RP1=0, select bank0
  7467  0151' 00A4'              	movwf	?_scale
  7468  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7469  0157' 00A5'              	movwf	?_scale+1
  7470  0158' 120A' 118A' 2000'  	fcall	stringdir
  7471  015B' 00A6'              	movwf	?_scale+2
  7472  015C' 0008               	return
  7473  015D'                    l4216:	
  7474                           
  7475                           ;doprnt.c: 435: }
  7476                           ;doprnt.c: 436: if(scl>=110)
  7477  015D' 082C'              	movf	scale@scl,w
  7478  015E' 3A80               	xorlw	128
  7479  015F' 3E12               	addlw	-238
  7480  0160' 1C03               	skipc
  7481  0161' 2800'              	goto	l4224
  7482                           
  7483                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7484  0162' 3003               	movlw	3
  7485  0163' 00A7'              	movwf	??_scale
  7486  0164' 0827'              	movf	??_scale,w
  7487  0165' 0090'              	movwf	___bmul@multiplicand
  7488  0166' 300A               	movlw	10
  7489  0167' 0087'              	movwf	___awdiv@divisor
  7490  0168' 3000               	movlw	0
  7491  0169' 0088'              	movwf	___awdiv@divisor+1
  7492  016A' 082C'              	movf	scale@scl,w
  7493  016B' 0082'              	movwf	___awmod@dividend
  7494  016C' 0183'              	clrf	___awmod@dividend+1
  7495  016D' 1B82'              	btfsc	___awmod@dividend,7
  7496  016E' 0383'              	decf	___awmod@dividend+1,f
  7497  016F' 3064               	movlw	100
  7498  0170' 0080'              	movwf	___awmod@divisor
  7499  0171' 3000               	movlw	0
  7500  0172' 0081'              	movwf	___awmod@divisor+1
  7501  0173' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7502  0178' 1283               	bcf	3,5	;RP0=0, select bank0
  7503  0179' 1303               	bcf	3,6	;RP1=0, select bank0
  7504  017A' 0801'              	movf	?___awmod+1,w
  7505  017B' 008A'              	movwf	___awdiv@dividend+1
  7506  017C' 0800'              	movf	?___awmod,w
  7507  017D' 0089'              	movwf	___awdiv@dividend
  7508  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7509  0183' 1283               	bcf	3,5	;RP0=0, select bank0
  7510  0184' 1303               	bcf	3,6	;RP1=0, select bank0
  7511  0185' 0807'              	movf	?___awdiv,w
  7512  0186' 3E09               	addlw	9
  7513  0187' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7514  018C' 3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  7515  018D' 0084               	movwf	4
  7516  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7517  0193' 1283               	bcf	3,5	;RP0=0, select bank0
  7518  0194' 1303               	bcf	3,6	;RP1=0, select bank0
  7519  0195' 0094'              	movwf	___ftmul@f1
  7520  0196' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7521  019B' 0095'              	movwf	___ftmul@f1+1
  7522  019C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7523  01A1' 0096'              	movwf	___ftmul@f1+2
  7524  01A2' 3003               	movlw	3
  7525  01A3' 00A8'              	movwf	??_scale+1
  7526  01A4' 0828'              	movf	??_scale+1,w
  7527  01A5' 0090'              	movwf	___bmul@multiplicand
  7528  01A6' 3064               	movlw	100
  7529  01A7' 0087'              	movwf	___awdiv@divisor
  7530  01A8' 3000               	movlw	0
  7531  01A9' 0088'              	movwf	___awdiv@divisor+1
  7532  01AA' 082C'              	movf	scale@scl,w
  7533  01AB' 0089'              	movwf	___awdiv@dividend
  7534  01AC' 018A'              	clrf	___awdiv@dividend+1
  7535  01AD' 1B89'              	btfsc	___awdiv@dividend,7
  7536  01AE' 038A'              	decf	___awdiv@dividend+1,f
  7537  01AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7538  01B4' 1283               	bcf	3,5	;RP0=0, select bank0
  7539  01B5' 1303               	bcf	3,6	;RP1=0, select bank0
  7540  01B6' 0807'              	movf	?___awdiv,w
  7541  01B7' 3E12               	addlw	18
  7542  01B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7543  01BD' 3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  7544  01BE' 0084               	movwf	4
  7545  01BF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7546  01C4' 1283               	bcf	3,5	;RP0=0, select bank0
  7547  01C5' 1303               	bcf	3,6	;RP1=0, select bank0
  7548  01C6' 0097'              	movwf	___ftmul@f2
  7549  01C7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7550  01CC' 0098'              	movwf	___ftmul@f2+1
  7551  01CD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7552  01D2' 0099'              	movwf	___ftmul@f2+2
  7553  01D3' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7554  01D8' 1283               	bcf	3,5	;RP0=0, select bank0
  7555  01D9' 1303               	bcf	3,6	;RP1=0, select bank0
  7556  01DA' 0814'              	movf	?___ftmul,w
  7557  01DB' 00A9'              	movwf	_scale$926
  7558  01DC' 0815'              	movf	?___ftmul+1,w
  7559  01DD' 00AA'              	movwf	_scale$926+1
  7560  01DE' 0816'              	movf	?___ftmul+2,w
  7561  01DF' 00AB'              	movwf	_scale$926+2
  7562                           
  7563                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7564  01E0' 3003               	movlw	3
  7565  01E1' 00A7'              	movwf	??_scale
  7566  01E2' 0827'              	movf	??_scale,w
  7567  01E3' 0090'              	movwf	___bmul@multiplicand
  7568  01E4' 082C'              	movf	scale@scl,w
  7569  01E5' 0082'              	movwf	___awmod@dividend
  7570  01E6' 0183'              	clrf	___awmod@dividend+1
  7571  01E7' 1B82'              	btfsc	___awmod@dividend,7
  7572  01E8' 0383'              	decf	___awmod@dividend+1,f
  7573  01E9' 300A               	movlw	10
  7574  01EA' 0080'              	movwf	___awmod@divisor
  7575  01EB' 3000               	movlw	0
  7576  01EC' 0081'              	movwf	___awmod@divisor+1
  7577  01ED' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7578  01F2' 1283               	bcf	3,5	;RP0=0, select bank0
  7579  01F3' 1303               	bcf	3,6	;RP1=0, select bank0
  7580  01F4' 0800'              	movf	?___awmod,w
  7581  01F5' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7582  01FA' 3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  7583  01FB' 0084               	movwf	4
  7584  01FC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7585  0201' 1283               	bcf	3,5	;RP0=0, select bank0
  7586  0202' 1303               	bcf	3,6	;RP1=0, select bank0
  7587  0203' 0094'              	movwf	___ftmul@f1
  7588  0204' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7589  0209' 0095'              	movwf	___ftmul@f1+1
  7590  020A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7591  020F' 0096'              	movwf	___ftmul@f1+2
  7592  0210' 0829'              	movf	_scale$926,w
  7593  0211' 0097'              	movwf	___ftmul@f2
  7594  0212' 082A'              	movf	_scale$926+1,w
  7595  0213' 0098'              	movwf	___ftmul@f2+1
  7596  0214' 082B'              	movf	_scale$926+2,w
  7597  0215' 0099'              	movwf	___ftmul@f2+2
  7598  0216' 120A' 118A' 2000'  	fcall	___ftmul
  7599  0219' 1283               	bcf	3,5	;RP0=0, select bank0
  7600  021A' 1303               	bcf	3,6	;RP1=0, select bank0
  7601  021B' 0814'              	movf	?___ftmul,w
  7602  021C' 00A4'              	movwf	?_scale
  7603  021D' 0815'              	movf	?___ftmul+1,w
  7604  021E' 00A5'              	movwf	?_scale+1
  7605  021F' 0816'              	movf	?___ftmul+2,w
  7606  0220' 00A6'              	movwf	?_scale+2
  7607  0221' 0008               	return
  7608  0222'                    l4224:	
  7609                           
  7610                           ;doprnt.c: 438: else if(scl > 10)
  7611  0222' 082C'              	movf	scale@scl,w
  7612  0223' 3A80               	xorlw	128
  7613  0224' 3E75               	addlw	-139
  7614  0225' 1C03               	skipc
  7615  0226' 2800'              	goto	l4230
  7616                           
  7617                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7618  0227' 3003               	movlw	3
  7619  0228' 00A7'              	movwf	??_scale
  7620  0229' 0827'              	movf	??_scale,w
  7621  022A' 0090'              	movwf	___bmul@multiplicand
  7622  022B' 082C'              	movf	scale@scl,w
  7623  022C' 0082'              	movwf	___awmod@dividend
  7624  022D' 0183'              	clrf	___awmod@dividend+1
  7625  022E' 1B82'              	btfsc	___awmod@dividend,7
  7626  022F' 0383'              	decf	___awmod@dividend+1,f
  7627  0230' 300A               	movlw	10
  7628  0231' 0080'              	movwf	___awmod@divisor
  7629  0232' 3000               	movlw	0
  7630  0233' 0081'              	movwf	___awmod@divisor+1
  7631  0234' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7632  0239' 1283               	bcf	3,5	;RP0=0, select bank0
  7633  023A' 1303               	bcf	3,6	;RP1=0, select bank0
  7634  023B' 0800'              	movf	?___awmod,w
  7635  023C' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7636  0241' 3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  7637  0242' 0084               	movwf	4
  7638  0243' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7639  0248' 1283               	bcf	3,5	;RP0=0, select bank0
  7640  0249' 1303               	bcf	3,6	;RP1=0, select bank0
  7641  024A' 0094'              	movwf	___ftmul@f1
  7642  024B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7643  0250' 0095'              	movwf	___ftmul@f1+1
  7644  0251' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7645  0256' 0096'              	movwf	___ftmul@f1+2
  7646  0257' 3003               	movlw	3
  7647  0258' 00A8'              	movwf	??_scale+1
  7648  0259' 0828'              	movf	??_scale+1,w
  7649  025A' 0090'              	movwf	___bmul@multiplicand
  7650  025B' 300A               	movlw	10
  7651  025C' 0087'              	movwf	___awdiv@divisor
  7652  025D' 3000               	movlw	0
  7653  025E' 0088'              	movwf	___awdiv@divisor+1
  7654  025F' 082C'              	movf	scale@scl,w
  7655  0260' 0089'              	movwf	___awdiv@dividend
  7656  0261' 018A'              	clrf	___awdiv@dividend+1
  7657  0262' 1B89'              	btfsc	___awdiv@dividend,7
  7658  0263' 038A'              	decf	___awdiv@dividend+1,f
  7659  0264' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7660  0269' 1283               	bcf	3,5	;RP0=0, select bank0
  7661  026A' 1303               	bcf	3,6	;RP1=0, select bank0
  7662  026B' 0807'              	movf	?___awdiv,w
  7663  026C' 3E09               	addlw	9
  7664  026D' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7665  0272' 3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  7666  0273' 0084               	movwf	4
  7667  0274' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7668  0279' 1283               	bcf	3,5	;RP0=0, select bank0
  7669  027A' 1303               	bcf	3,6	;RP1=0, select bank0
  7670  027B' 0097'              	movwf	___ftmul@f2
  7671  027C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7672  0281' 0098'              	movwf	___ftmul@f2+1
  7673  0282' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7674  0287' 0099'              	movwf	___ftmul@f2+2
  7675  0288' 120A' 118A' 2000'  	fcall	___ftmul
  7676  028B' 1283               	bcf	3,5	;RP0=0, select bank0
  7677  028C' 1303               	bcf	3,6	;RP1=0, select bank0
  7678  028D' 0814'              	movf	?___ftmul,w
  7679  028E' 00A4'              	movwf	?_scale
  7680  028F' 0815'              	movf	?___ftmul+1,w
  7681  0290' 00A5'              	movwf	?_scale+1
  7682  0291' 0816'              	movf	?___ftmul+2,w
  7683  0292' 00A6'              	movwf	?_scale+2
  7684  0293' 0008               	return
  7685  0294'                    l4230:	
  7686                           
  7687                           ;doprnt.c: 440: return _powers_[scl];
  7688  0294' 3003               	movlw	3
  7689  0295' 00A7'              	movwf	??_scale
  7690  0296' 0827'              	movf	??_scale,w
  7691  0297' 0090'              	movwf	___bmul@multiplicand
  7692  0298' 082C'              	movf	scale@scl,w
  7693  0299' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7694  029E' 3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  7695  029F' 0084               	movwf	4
  7696  02A0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7697  02A5' 1283               	bcf	3,5	;RP0=0, select bank0
  7698  02A6' 1303               	bcf	3,6	;RP1=0, select bank0
  7699  02A7' 00A4'              	movwf	?_scale
  7700  02A8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7701  02AD' 00A5'              	movwf	?_scale+1
  7702  02AE' 120A' 118A' 2000'  	fcall	stringdir
  7703  02B1' 00A6'              	movwf	?_scale+2
  7704  02B2' 0008               	return
  7705  02B3'                    __end_of_scale:	
  7706                           
  7707                           	psect	text19
  7708  0000'                    __ptext19:	
  7709 ;; *************** function _isdigit *****************
  7710 ;; Defined at:
  7711 ;;		line 8 in file "D:\mplab\sources\common\isdigit.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;  c               1    wreg     unsigned char 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  c               1    1[BANK0 ] unsigned char 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, status,2, status,0
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7725 ;;      Params:         0       0       0       0       0
  7726 ;;      Locals:         0       2       0       0       0
  7727 ;;      Temps:          0       0       0       0       0
  7728 ;;      Totals:         0       2       0       0       0
  7729 ;;Total ram usage:        2 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    1
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_sprintf
  7736 ;;		_strtod
  7737 ;;		_atol
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           
  7742                           ;psect for function _isdigit
  7743  0000'                    _isdigit:	
  7744                           
  7745                           ;incstack = 0
  7746                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7747                           ;isdigit@c stored from wreg
  7748  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7749  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7750  0002' 0081'              	movwf	isdigit@c
  7751  0003' 0180'              	clrf	_isdigit$687
  7752  0004' 303A               	movlw	58
  7753  0005' 0201'              	subwf	isdigit@c,w
  7754  0006' 1803               	skipnc
  7755  0007' 2800'              	goto	l3838
  7756  0008' 3030               	movlw	48
  7757  0009' 0201'              	subwf	isdigit@c,w
  7758  000A' 1C03               	skipc
  7759  000B' 2800'              	goto	l3838
  7760  000C' 0180'              	clrf	_isdigit$687
  7761  000D' 0A80'              	incf	_isdigit$687,f
  7762  000E'                    l3838:	
  7763  000E' 0C00'              	rrf	_isdigit$687,w
  7764  000F' 0008               	return
  7765  0010'                    __end_of_isdigit:	
  7766                           
  7767                           	psect	text20
  7768  0000'                    __ptext20:	
  7769 ;; *************** function _fround *****************
  7770 ;; Defined at:
  7771 ;;		line 409 in file "D:\mplab\sources\common\doprnt.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  prec            1    wreg     unsigned char 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  prec            1   51[BANK0 ] unsigned char 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  3   36[BANK0 ] unsigned char 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7785 ;;      Params:         0       3       0       0       0
  7786 ;;      Locals:         0       7       0       0       0
  7787 ;;      Temps:          0       6       0       0       0
  7788 ;;      Totals:         0      16       0       0       0
  7789 ;;Total ram usage:       16 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:    3
  7792 ;; This function calls:
  7793 ;;		___awdiv
  7794 ;;		___awmod
  7795 ;;		___bmul
  7796 ;;		___ftmul
  7797 ;; This function is called by:
  7798 ;;		_sprintf
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _fround
  7804  0000'                    _fround:	
  7805                           
  7806                           ;incstack = 0
  7807                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7808                           ;fround@prec stored from wreg
  7809  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7810  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7811  0002' 00B3'              	movwf	fround@prec
  7812                           
  7813                           ;doprnt.c: 413: if(prec>=110)
  7814  0003' 306E               	movlw	110
  7815  0004' 0233'              	subwf	fround@prec,w
  7816  0005' 1C03               	skipc
  7817  0006' 2800'              	goto	l4182
  7818                           
  7819                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7820  0007' 3003               	movlw	3
  7821  0008' 00A7'              	movwf	??_fround
  7822  0009' 0827'              	movf	??_fround,w
  7823  000A' 0090'              	movwf	___bmul@multiplicand
  7824  000B' 300A               	movlw	10
  7825  000C' 0087'              	movwf	___awdiv@divisor
  7826  000D' 3000               	movlw	0
  7827  000E' 0088'              	movwf	___awdiv@divisor+1
  7828  000F' 0833'              	movf	fround@prec,w
  7829  0010' 00A8'              	movwf	??_fround+1
  7830  0011' 01A9'              	clrf	??_fround+2
  7831  0012' 0828'              	movf	??_fround+1,w
  7832  0013' 0082'              	movwf	___awmod@dividend
  7833  0014' 0829'              	movf	??_fround+2,w
  7834  0015' 0083'              	movwf	___awmod@dividend+1
  7835  0016' 3064               	movlw	100
  7836  0017' 0080'              	movwf	___awmod@divisor
  7837  0018' 3000               	movlw	0
  7838  0019' 0081'              	movwf	___awmod@divisor+1
  7839  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7840  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  7841  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  7842  0021' 0801'              	movf	?___awmod+1,w
  7843  0022' 008A'              	movwf	___awdiv@dividend+1
  7844  0023' 0800'              	movf	?___awmod,w
  7845  0024' 0089'              	movwf	___awdiv@dividend
  7846  0025' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7847  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  7848  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  7849  002C' 0807'              	movf	?___awdiv,w
  7850  002D' 3E09               	addlw	9
  7851  002E' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7852  0033' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7853  0034' 0084               	movwf	4
  7854  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7855  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  7856  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  7857  003C' 0094'              	movwf	___ftmul@f1
  7858  003D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7859  0042' 0095'              	movwf	___ftmul@f1+1
  7860  0043' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7861  0048' 0096'              	movwf	___ftmul@f1+2
  7862  0049' 3003               	movlw	3
  7863  004A' 00AA'              	movwf	??_fround+3
  7864  004B' 082A'              	movf	??_fround+3,w
  7865  004C' 0090'              	movwf	___bmul@multiplicand
  7866  004D' 3064               	movlw	100
  7867  004E' 0087'              	movwf	___awdiv@divisor
  7868  004F' 3000               	movlw	0
  7869  0050' 0088'              	movwf	___awdiv@divisor+1
  7870  0051' 0833'              	movf	fround@prec,w
  7871  0052' 00AB'              	movwf	??_fround+4
  7872  0053' 01AC'              	clrf	??_fround+5
  7873  0054' 082B'              	movf	??_fround+4,w
  7874  0055' 0089'              	movwf	___awdiv@dividend
  7875  0056' 082C'              	movf	??_fround+5,w
  7876  0057' 008A'              	movwf	___awdiv@dividend+1
  7877  0058' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7878  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  7879  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  7880  005F' 0807'              	movf	?___awdiv,w
  7881  0060' 3E12               	addlw	18
  7882  0061' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7883  0066' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7884  0067' 0084               	movwf	4
  7885  0068' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7886  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  7887  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  7888  006F' 0097'              	movwf	___ftmul@f2
  7889  0070' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7890  0075' 0098'              	movwf	___ftmul@f2+1
  7891  0076' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7892  007B' 0099'              	movwf	___ftmul@f2+2
  7893  007C' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7894  0081' 1283               	bcf	3,5	;RP0=0, select bank0
  7895  0082' 1303               	bcf	3,6	;RP1=0, select bank0
  7896  0083' 0814'              	movf	?___ftmul,w
  7897  0084' 00B0'              	movwf	_fround$924
  7898  0085' 0815'              	movf	?___ftmul+1,w
  7899  0086' 00B1'              	movwf	_fround$924+1
  7900  0087' 0816'              	movf	?___ftmul+2,w
  7901  0088' 00B2'              	movwf	_fround$924+2
  7902                           
  7903                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7904  0089' 3003               	movlw	3
  7905  008A' 00A7'              	movwf	??_fround
  7906  008B' 0827'              	movf	??_fround,w
  7907  008C' 0090'              	movwf	___bmul@multiplicand
  7908  008D' 0833'              	movf	fround@prec,w
  7909  008E' 00A8'              	movwf	??_fround+1
  7910  008F' 01A9'              	clrf	??_fround+2
  7911  0090' 0828'              	movf	??_fround+1,w
  7912  0091' 0082'              	movwf	___awmod@dividend
  7913  0092' 0829'              	movf	??_fround+2,w
  7914  0093' 0083'              	movwf	___awmod@dividend+1
  7915  0094' 300A               	movlw	10
  7916  0095' 0080'              	movwf	___awmod@divisor
  7917  0096' 3000               	movlw	0
  7918  0097' 0081'              	movwf	___awmod@divisor+1
  7919  0098' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7920  009D' 1283               	bcf	3,5	;RP0=0, select bank0
  7921  009E' 1303               	bcf	3,6	;RP1=0, select bank0
  7922  009F' 0800'              	movf	?___awmod,w
  7923  00A0' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7924  00A5' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  7925  00A6' 0084               	movwf	4
  7926  00A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7927  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  7928  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  7929  00AE' 0094'              	movwf	___ftmul@f1
  7930  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7931  00B4' 0095'              	movwf	___ftmul@f1+1
  7932  00B5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7933  00BA' 0096'              	movwf	___ftmul@f1+2
  7934  00BB' 0830'              	movf	_fround$924,w
  7935  00BC' 0097'              	movwf	___ftmul@f2
  7936  00BD' 0831'              	movf	_fround$924+1,w
  7937  00BE' 0098'              	movwf	___ftmul@f2+1
  7938  00BF' 0832'              	movf	_fround$924+2,w
  7939  00C0' 0099'              	movwf	___ftmul@f2+2
  7940  00C1' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7941  00C6' 1283               	bcf	3,5	;RP0=0, select bank0
  7942  00C7' 1303               	bcf	3,6	;RP1=0, select bank0
  7943  00C8' 0814'              	movf	?___ftmul,w
  7944  00C9' 00AD'              	movwf	_fround$925
  7945  00CA' 0815'              	movf	?___ftmul+1,w
  7946  00CB' 00AE'              	movwf	_fround$925+1
  7947  00CC' 0816'              	movf	?___ftmul+2,w
  7948  00CD' 00AF'              	movwf	_fround$925+2
  7949                           
  7950                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7951  00CE' 3000               	movlw	0
  7952  00CF' 0094'              	movwf	___ftmul@f1
  7953  00D0' 3000               	movlw	0
  7954  00D1' 0095'              	movwf	___ftmul@f1+1
  7955  00D2' 303F               	movlw	63
  7956  00D3' 0096'              	movwf	___ftmul@f1+2
  7957  00D4' 082D'              	movf	_fround$925,w
  7958  00D5' 0097'              	movwf	___ftmul@f2
  7959  00D6' 082E'              	movf	_fround$925+1,w
  7960  00D7' 0098'              	movwf	___ftmul@f2+1
  7961  00D8' 082F'              	movf	_fround$925+2,w
  7962  00D9' 0099'              	movwf	___ftmul@f2+2
  7963  00DA' 120A' 118A' 2000'  	fcall	___ftmul
  7964  00DD' 1283               	bcf	3,5	;RP0=0, select bank0
  7965  00DE' 1303               	bcf	3,6	;RP1=0, select bank0
  7966  00DF' 0814'              	movf	?___ftmul,w
  7967  00E0' 00A4'              	movwf	?_fround
  7968  00E1' 0815'              	movf	?___ftmul+1,w
  7969  00E2' 00A5'              	movwf	?_fround+1
  7970  00E3' 0816'              	movf	?___ftmul+2,w
  7971  00E4' 00A6'              	movwf	?_fround+2
  7972  00E5' 0008               	return
  7973  00E6'                    l4182:	
  7974                           
  7975                           ;doprnt.c: 415: else if(prec > 10)
  7976  00E6' 300B               	movlw	11
  7977  00E7' 0233'              	subwf	fround@prec,w
  7978  00E8' 1C03               	skipc
  7979  00E9' 2800'              	goto	l4190
  7980                           
  7981                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7982  00EA' 3003               	movlw	3
  7983  00EB' 00A7'              	movwf	??_fround
  7984  00EC' 0827'              	movf	??_fround,w
  7985  00ED' 0090'              	movwf	___bmul@multiplicand
  7986  00EE' 0833'              	movf	fround@prec,w
  7987  00EF' 00A8'              	movwf	??_fround+1
  7988  00F0' 01A9'              	clrf	??_fround+2
  7989  00F1' 0828'              	movf	??_fround+1,w
  7990  00F2' 0082'              	movwf	___awmod@dividend
  7991  00F3' 0829'              	movf	??_fround+2,w
  7992  00F4' 0083'              	movwf	___awmod@dividend+1
  7993  00F5' 300A               	movlw	10
  7994  00F6' 0080'              	movwf	___awmod@divisor
  7995  00F7' 3000               	movlw	0
  7996  00F8' 0081'              	movwf	___awmod@divisor+1
  7997  00F9' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7998  00FE' 1283               	bcf	3,5	;RP0=0, select bank0
  7999  00FF' 1303               	bcf	3,6	;RP1=0, select bank0
  8000  0100' 0800'              	movf	?___awmod,w
  8001  0101' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  8002  0106' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  8003  0107' 0084               	movwf	4
  8004  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8005  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  8006  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  8007  010F' 0094'              	movwf	___ftmul@f1
  8008  0110' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8009  0115' 0095'              	movwf	___ftmul@f1+1
  8010  0116' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8011  011B' 0096'              	movwf	___ftmul@f1+2
  8012  011C' 3003               	movlw	3
  8013  011D' 00AA'              	movwf	??_fround+3
  8014  011E' 082A'              	movf	??_fround+3,w
  8015  011F' 0090'              	movwf	___bmul@multiplicand
  8016  0120' 300A               	movlw	10
  8017  0121' 0087'              	movwf	___awdiv@divisor
  8018  0122' 3000               	movlw	0
  8019  0123' 0088'              	movwf	___awdiv@divisor+1
  8020  0124' 0833'              	movf	fround@prec,w
  8021  0125' 00AB'              	movwf	??_fround+4
  8022  0126' 01AC'              	clrf	??_fround+5
  8023  0127' 082B'              	movf	??_fround+4,w
  8024  0128' 0089'              	movwf	___awdiv@dividend
  8025  0129' 082C'              	movf	??_fround+5,w
  8026  012A' 008A'              	movwf	___awdiv@dividend+1
  8027  012B' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  8028  0130' 1283               	bcf	3,5	;RP0=0, select bank0
  8029  0131' 1303               	bcf	3,6	;RP1=0, select bank0
  8030  0132' 0807'              	movf	?___awdiv,w
  8031  0133' 3E09               	addlw	9
  8032  0134' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  8033  0139' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  8034  013A' 0084               	movwf	4
  8035  013B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8036  0140' 1283               	bcf	3,5	;RP0=0, select bank0
  8037  0141' 1303               	bcf	3,6	;RP1=0, select bank0
  8038  0142' 0097'              	movwf	___ftmul@f2
  8039  0143' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8040  0148' 0098'              	movwf	___ftmul@f2+1
  8041  0149' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8042  014E' 0099'              	movwf	___ftmul@f2+2
  8043  014F' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  8044  0154' 1283               	bcf	3,5	;RP0=0, select bank0
  8045  0155' 1303               	bcf	3,6	;RP1=0, select bank0
  8046  0156' 0814'              	movf	?___ftmul,w
  8047  0157' 00B0'              	movwf	_fround$924
  8048  0158' 0815'              	movf	?___ftmul+1,w
  8049  0159' 00B1'              	movwf	_fround$924+1
  8050  015A' 0816'              	movf	?___ftmul+2,w
  8051  015B' 00B2'              	movwf	_fround$924+2
  8052                           
  8053                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8054  015C' 3000               	movlw	0
  8055  015D' 0094'              	movwf	___ftmul@f1
  8056  015E' 3000               	movlw	0
  8057  015F' 0095'              	movwf	___ftmul@f1+1
  8058  0160' 303F               	movlw	63
  8059  0161' 0096'              	movwf	___ftmul@f1+2
  8060  0162' 0830'              	movf	_fround$924,w
  8061  0163' 0097'              	movwf	___ftmul@f2
  8062  0164' 0831'              	movf	_fround$924+1,w
  8063  0165' 0098'              	movwf	___ftmul@f2+1
  8064  0166' 0832'              	movf	_fround$924+2,w
  8065  0167' 0099'              	movwf	___ftmul@f2+2
  8066  0168' 120A' 118A' 2000'  	fcall	___ftmul
  8067  016B' 1283               	bcf	3,5	;RP0=0, select bank0
  8068  016C' 1303               	bcf	3,6	;RP1=0, select bank0
  8069  016D' 0814'              	movf	?___ftmul,w
  8070  016E' 00A4'              	movwf	?_fround
  8071  016F' 0815'              	movf	?___ftmul+1,w
  8072  0170' 00A5'              	movwf	?_fround+1
  8073  0171' 0816'              	movf	?___ftmul+2,w
  8074  0172' 00A6'              	movwf	?_fround+2
  8075  0173' 0008               	return
  8076  0174'                    l4190:	
  8077                           
  8078                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8079  0174' 3000               	movlw	0
  8080  0175' 0094'              	movwf	___ftmul@f1
  8081  0176' 3000               	movlw	0
  8082  0177' 0095'              	movwf	___ftmul@f1+1
  8083  0178' 303F               	movlw	63
  8084  0179' 0096'              	movwf	___ftmul@f1+2
  8085  017A' 3003               	movlw	3
  8086  017B' 00A7'              	movwf	??_fround
  8087  017C' 0827'              	movf	??_fround,w
  8088  017D' 0090'              	movwf	___bmul@multiplicand
  8089  017E' 0833'              	movf	fround@prec,w
  8090  017F' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  8091  0184' 3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  8092  0185' 0084               	movwf	4
  8093  0186' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8094  018B' 1283               	bcf	3,5	;RP0=0, select bank0
  8095  018C' 1303               	bcf	3,6	;RP1=0, select bank0
  8096  018D' 0097'              	movwf	___ftmul@f2
  8097  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8098  0193' 0098'              	movwf	___ftmul@f2+1
  8099  0194' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  8100  0199' 0099'              	movwf	___ftmul@f2+2
  8101  019A' 120A' 118A' 2000'  	fcall	___ftmul
  8102  019D' 1283               	bcf	3,5	;RP0=0, select bank0
  8103  019E' 1303               	bcf	3,6	;RP1=0, select bank0
  8104  019F' 0814'              	movf	?___ftmul,w
  8105  01A0' 00A4'              	movwf	?_fround
  8106  01A1' 0815'              	movf	?___ftmul+1,w
  8107  01A2' 00A5'              	movwf	?_fround+1
  8108  01A3' 0816'              	movf	?___ftmul+2,w
  8109  01A4' 00A6'              	movwf	?_fround+2
  8110  01A5' 0008               	return
  8111  01A6'                    __end_of_fround:	
  8112                           
  8113                           	psect	text21
  8114  0000'                    __ptext21:	
  8115 ;; *************** function ___ftmul *****************
  8116 ;; Defined at:
  8117 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  f1              3   20[BANK0 ] float 
  8120 ;;  f2              3   23[BANK0 ] float 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  8123 ;;  sign            1   35[BANK0 ] unsigned char 
  8124 ;;  cntr            1   34[BANK0 ] unsigned char 
  8125 ;;  exp             1   30[BANK0 ] unsigned char 
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  3   20[BANK0 ] float 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2, status,0, pclath, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8135 ;;      Params:         0       6       0       0       0
  8136 ;;      Locals:         0       6       0       0       0
  8137 ;;      Temps:          0       4       0       0       0
  8138 ;;      Totals:         0      16       0       0       0
  8139 ;;Total ram usage:       16 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:    2
  8142 ;; This function calls:
  8143 ;;		___ftpack
  8144 ;; This function is called by:
  8145 ;;		_main
  8146 ;;		_convert_to_degrees
  8147 ;;		_fround
  8148 ;;		_scale
  8149 ;;		_sprintf
  8150 ;;		_strtod
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           
  8155                           ;psect for function ___ftmul
  8156  0000'                    ___ftmul:	
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8160  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8161  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8162  0002' 0814'              	movf	___ftmul@f1,w
  8163  0003' 009A'              	movwf	??___ftmul
  8164  0004' 0815'              	movf	___ftmul@f1+1,w
  8165  0005' 009B'              	movwf	??___ftmul+1
  8166  0006' 0816'              	movf	___ftmul@f1+2,w
  8167  0007' 009C'              	movwf	??___ftmul+2
  8168  0008' 1003               	clrc
  8169  0009' 0D1B'              	rlf	??___ftmul+1,w
  8170  000A' 0D1C'              	rlf	??___ftmul+2,w
  8171  000B' 009D'              	movwf	??___ftmul+3
  8172  000C' 081D'              	movf	??___ftmul+3,w
  8173  000D' 009E'              	movwf	___ftmul@exp
  8174  000E' 081E'              	movf	___ftmul@exp,w
  8175  000F' 1D03               	btfss	3,2
  8176  0010' 2800'              	goto	l4120
  8177  0011' 3000               	movlw	0
  8178  0012' 0094'              	movwf	?___ftmul
  8179  0013' 3000               	movlw	0
  8180  0014' 0095'              	movwf	?___ftmul+1
  8181  0015' 3000               	movlw	0
  8182  0016' 0096'              	movwf	?___ftmul+2
  8183  0017' 0008               	return
  8184  0018'                    l4120:	
  8185  0018' 0817'              	movf	___ftmul@f2,w
  8186  0019' 009A'              	movwf	??___ftmul
  8187  001A' 0818'              	movf	___ftmul@f2+1,w
  8188  001B' 009B'              	movwf	??___ftmul+1
  8189  001C' 0819'              	movf	___ftmul@f2+2,w
  8190  001D' 009C'              	movwf	??___ftmul+2
  8191  001E' 1003               	clrc
  8192  001F' 0D1B'              	rlf	??___ftmul+1,w
  8193  0020' 0D1C'              	rlf	??___ftmul+2,w
  8194  0021' 009D'              	movwf	??___ftmul+3
  8195  0022' 081D'              	movf	??___ftmul+3,w
  8196  0023' 00A3'              	movwf	___ftmul@sign
  8197  0024' 0823'              	movf	___ftmul@sign,w
  8198  0025' 1D03               	btfss	3,2
  8199  0026' 2800'              	goto	l4126
  8200  0027' 3000               	movlw	0
  8201  0028' 0094'              	movwf	?___ftmul
  8202  0029' 3000               	movlw	0
  8203  002A' 0095'              	movwf	?___ftmul+1
  8204  002B' 3000               	movlw	0
  8205  002C' 0096'              	movwf	?___ftmul+2
  8206  002D' 0008               	return
  8207  002E'                    l4126:	
  8208  002E' 0823'              	movf	___ftmul@sign,w
  8209  002F' 3E7B               	addlw	123
  8210  0030' 009A'              	movwf	??___ftmul
  8211  0031' 081A'              	movf	??___ftmul,w
  8212  0032' 079E'              	addwf	___ftmul@exp,f
  8213  0033' 0814'              	movf	___ftmul@f1,w
  8214  0034' 009A'              	movwf	??___ftmul
  8215  0035' 0815'              	movf	___ftmul@f1+1,w
  8216  0036' 009B'              	movwf	??___ftmul+1
  8217  0037' 0816'              	movf	___ftmul@f1+2,w
  8218  0038' 009C'              	movwf	??___ftmul+2
  8219  0039' 3010               	movlw	16
  8220  003A'                    u6525:	
  8221  003A' 1003               	clrc
  8222  003B' 0C9C'              	rrf	??___ftmul+2,f
  8223  003C' 0C9B'              	rrf	??___ftmul+1,f
  8224  003D' 0C9A'              	rrf	??___ftmul,f
  8225  003E' 3EFF               	addlw	-1
  8226  003F' 1D03               	skipz
  8227  0040' 2800'              	goto	u6525
  8228  0041' 081A'              	movf	??___ftmul,w
  8229  0042' 009D'              	movwf	??___ftmul+3
  8230  0043' 081D'              	movf	??___ftmul+3,w
  8231  0044' 00A3'              	movwf	___ftmul@sign
  8232  0045' 0817'              	movf	___ftmul@f2,w
  8233  0046' 009A'              	movwf	??___ftmul
  8234  0047' 0818'              	movf	___ftmul@f2+1,w
  8235  0048' 009B'              	movwf	??___ftmul+1
  8236  0049' 0819'              	movf	___ftmul@f2+2,w
  8237  004A' 009C'              	movwf	??___ftmul+2
  8238  004B' 3010               	movlw	16
  8239  004C'                    u6535:	
  8240  004C' 1003               	clrc
  8241  004D' 0C9C'              	rrf	??___ftmul+2,f
  8242  004E' 0C9B'              	rrf	??___ftmul+1,f
  8243  004F' 0C9A'              	rrf	??___ftmul,f
  8244  0050' 3EFF               	addlw	-1
  8245  0051' 1D03               	skipz
  8246  0052' 2800'              	goto	u6535
  8247  0053' 081A'              	movf	??___ftmul,w
  8248  0054' 009D'              	movwf	??___ftmul+3
  8249  0055' 081D'              	movf	??___ftmul+3,w
  8250  0056' 06A3'              	xorwf	___ftmul@sign,f
  8251  0057' 3080               	movlw	128
  8252  0058' 009A'              	movwf	??___ftmul
  8253  0059' 081A'              	movf	??___ftmul,w
  8254  005A' 05A3'              	andwf	___ftmul@sign,f
  8255  005B' 1795'              	bsf	___ftmul@f1+1,7
  8256  005C' 1798'              	bsf	___ftmul@f2+1,7
  8257  005D' 30FF               	movlw	255
  8258  005E' 0597'              	andwf	___ftmul@f2,f
  8259  005F' 30FF               	movlw	255
  8260  0060' 0598'              	andwf	___ftmul@f2+1,f
  8261  0061' 3000               	movlw	0
  8262  0062' 0599'              	andwf	___ftmul@f2+2,f
  8263  0063' 3000               	movlw	0
  8264  0064' 009F'              	movwf	___ftmul@f3_as_product
  8265  0065' 3000               	movlw	0
  8266  0066' 00A0'              	movwf	___ftmul@f3_as_product+1
  8267  0067' 3000               	movlw	0
  8268  0068' 00A1'              	movwf	___ftmul@f3_as_product+2
  8269  0069' 3007               	movlw	7
  8270  006A' 009A'              	movwf	??___ftmul
  8271  006B' 081A'              	movf	??___ftmul,w
  8272  006C' 00A2'              	movwf	___ftmul@cntr
  8273  006D'                    l4138:	
  8274  006D' 1C14'              	btfss	___ftmul@f1,0
  8275  006E' 2800'              	goto	l4142
  8276  006F' 0817'              	movf	___ftmul@f2,w
  8277  0070' 079F'              	addwf	___ftmul@f3_as_product,f
  8278  0071' 0818'              	movf	___ftmul@f2+1,w
  8279  0072' 1103               	clrz
  8280  0073' 1803               	skipnc
  8281  0074' 0A18'              	incf	___ftmul@f2+1,w
  8282  0075' 1D03               	btfss	3,2
  8283  0076' 07A0'              	addwf	___ftmul@f3_as_product+1,f
  8284  0077' 0819'              	movf	___ftmul@f2+2,w
  8285  0078' 1103               	clrz
  8286  0079' 1803               	skipnc
  8287  007A' 0A19'              	incf	___ftmul@f2+2,w
  8288  007B' 1D03               	btfss	3,2
  8289  007C' 07A1'              	addwf	___ftmul@f3_as_product+2,f
  8290  007D'                    l4142:	
  8291  007D' 3001               	movlw	1
  8292  007E'                    u6565:	
  8293  007E' 1003               	clrc
  8294  007F' 0C96'              	rrf	___ftmul@f1+2,f
  8295  0080' 0C95'              	rrf	___ftmul@f1+1,f
  8296  0081' 0C94'              	rrf	___ftmul@f1,f
  8297  0082' 3EFF               	addlw	-1
  8298  0083' 1D03               	skipz
  8299  0084' 2800'              	goto	u6565
  8300  0085' 3001               	movlw	1
  8301  0086'                    u6575:	
  8302  0086' 1003               	clrc
  8303  0087' 0D97'              	rlf	___ftmul@f2,f
  8304  0088' 0D98'              	rlf	___ftmul@f2+1,f
  8305  0089' 0D99'              	rlf	___ftmul@f2+2,f
  8306  008A' 3EFF               	addlw	-1
  8307  008B' 1D03               	skipz
  8308  008C' 2800'              	goto	u6575
  8309  008D' 3001               	movlw	1
  8310  008E' 02A2'              	subwf	___ftmul@cntr,f
  8311  008F' 1D03               	btfss	3,2
  8312  0090' 2800'              	goto	l4138
  8313  0091' 3009               	movlw	9
  8314  0092' 009A'              	movwf	??___ftmul
  8315  0093' 081A'              	movf	??___ftmul,w
  8316  0094' 00A2'              	movwf	___ftmul@cntr
  8317  0095'                    l4150:	
  8318  0095' 1C14'              	btfss	___ftmul@f1,0
  8319  0096' 2800'              	goto	l4154
  8320  0097' 0817'              	movf	___ftmul@f2,w
  8321  0098' 079F'              	addwf	___ftmul@f3_as_product,f
  8322  0099' 0818'              	movf	___ftmul@f2+1,w
  8323  009A' 1103               	clrz
  8324  009B' 1803               	skipnc
  8325  009C' 0A18'              	incf	___ftmul@f2+1,w
  8326  009D' 1D03               	btfss	3,2
  8327  009E' 07A0'              	addwf	___ftmul@f3_as_product+1,f
  8328  009F' 0819'              	movf	___ftmul@f2+2,w
  8329  00A0' 1103               	clrz
  8330  00A1' 1803               	skipnc
  8331  00A2' 0A19'              	incf	___ftmul@f2+2,w
  8332  00A3' 1D03               	btfss	3,2
  8333  00A4' 07A1'              	addwf	___ftmul@f3_as_product+2,f
  8334  00A5'                    l4154:	
  8335  00A5' 3001               	movlw	1
  8336  00A6'                    u6615:	
  8337  00A6' 1003               	clrc
  8338  00A7' 0C96'              	rrf	___ftmul@f1+2,f
  8339  00A8' 0C95'              	rrf	___ftmul@f1+1,f
  8340  00A9' 0C94'              	rrf	___ftmul@f1,f
  8341  00AA' 3EFF               	addlw	-1
  8342  00AB' 1D03               	skipz
  8343  00AC' 2800'              	goto	u6615
  8344  00AD' 3001               	movlw	1
  8345  00AE'                    u6625:	
  8346  00AE' 1003               	clrc
  8347  00AF' 0CA1'              	rrf	___ftmul@f3_as_product+2,f
  8348  00B0' 0CA0'              	rrf	___ftmul@f3_as_product+1,f
  8349  00B1' 0C9F'              	rrf	___ftmul@f3_as_product,f
  8350  00B2' 3EFF               	addlw	-1
  8351  00B3' 1D03               	skipz
  8352  00B4' 2800'              	goto	u6625
  8353  00B5' 3001               	movlw	1
  8354  00B6' 02A2'              	subwf	___ftmul@cntr,f
  8355  00B7' 1D03               	btfss	3,2
  8356  00B8' 2800'              	goto	l4150
  8357  00B9' 081F'              	movf	___ftmul@f3_as_product,w
  8358  00BA' 0080'              	movwf	___ftpack@arg
  8359  00BB' 0820'              	movf	___ftmul@f3_as_product+1,w
  8360  00BC' 0081'              	movwf	___ftpack@arg+1
  8361  00BD' 0821'              	movf	___ftmul@f3_as_product+2,w
  8362  00BE' 0082'              	movwf	___ftpack@arg+2
  8363  00BF' 081E'              	movf	___ftmul@exp,w
  8364  00C0' 009A'              	movwf	??___ftmul
  8365  00C1' 081A'              	movf	??___ftmul,w
  8366  00C2' 0083'              	movwf	___ftpack@exp
  8367  00C3' 0823'              	movf	___ftmul@sign,w
  8368  00C4' 009B'              	movwf	??___ftmul+1
  8369  00C5' 081B'              	movf	??___ftmul+1,w
  8370  00C6' 0084'              	movwf	___ftpack@sign
  8371  00C7' 120A' 118A' 2000'  	fcall	___ftpack
  8372  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  8373  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  8374  00CC' 0800'              	movf	?___ftpack,w
  8375  00CD' 0094'              	movwf	?___ftmul
  8376  00CE' 0801'              	movf	?___ftpack+1,w
  8377  00CF' 0095'              	movwf	?___ftmul+1
  8378  00D0' 0802'              	movf	?___ftpack+2,w
  8379  00D1' 0096'              	movwf	?___ftmul+2
  8380  00D2' 0008               	return
  8381  00D3'                    __end_of___ftmul:	
  8382                           
  8383                           	psect	text22
  8384  0000'                    __ptext22:	
  8385 ;; *************** function ___bmul *****************
  8386 ;; Defined at:
  8387 ;;		line 4 in file "D:\mplab\sources\common\Umul8.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  multiplier      1    wreg     unsigned char 
  8390 ;;  multiplicand    1   16[BANK0 ] unsigned char 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  multiplier      1   19[BANK0 ] unsigned char 
  8393 ;;  product         1   18[BANK0 ] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      unsigned char 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         0       1       0       0       0
  8404 ;;      Locals:         0       2       0       0       0
  8405 ;;      Temps:          0       1       0       0       0
  8406 ;;      Totals:         0       4       0       0       0
  8407 ;;Total ram usage:        4 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_fround
  8414 ;;		_scale
  8415 ;;		_strtod
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function ___bmul
  8421  0000'                    ___bmul:	
  8422                           
  8423                           ;incstack = 0
  8424                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8425                           ;___bmul@multiplier stored from wreg
  8426  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8427  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8428  0002' 0093'              	movwf	___bmul@multiplier
  8429  0003' 0192'              	clrf	___bmul@product
  8430  0004'                    l3858:	
  8431  0004' 1C13'              	btfss	___bmul@multiplier,0
  8432  0005' 2800'              	goto	l3862
  8433  0006' 0810'              	movf	___bmul@multiplicand,w
  8434  0007' 0091'              	movwf	??___bmul
  8435  0008' 0811'              	movf	??___bmul,w
  8436  0009' 0792'              	addwf	___bmul@product,f
  8437  000A'                    l3862:	
  8438  000A' 1003               	clrc
  8439  000B' 0D90'              	rlf	___bmul@multiplicand,f
  8440  000C' 1003               	clrc
  8441  000D' 0C93'              	rrf	___bmul@multiplier,f
  8442  000E' 0813'              	movf	___bmul@multiplier,w
  8443  000F' 1D03               	btfss	3,2
  8444  0010' 2800'              	goto	l3858
  8445  0011' 0812'              	movf	___bmul@product,w
  8446  0012' 0008               	return
  8447  0013'                    __end_of___bmul:	
  8448                           
  8449                           	psect	text23
  8450  0000'                    __ptext23:	
  8451 ;; *************** function ___awmod *****************
  8452 ;; Defined at:
  8453 ;;		line 6 in file "D:\mplab\sources\common\awmod.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;  divisor         2    0[BANK0 ] int 
  8456 ;;  dividend        2    2[BANK0 ] int 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;  sign            1    6[BANK0 ] unsigned char 
  8459 ;;  counter         1    5[BANK0 ] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  2    0[BANK0 ] int 
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8469 ;;      Params:         0       4       0       0       0
  8470 ;;      Locals:         0       2       0       0       0
  8471 ;;      Temps:          0       1       0       0       0
  8472 ;;      Totals:         0       7       0       0       0
  8473 ;;Total ram usage:        7 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:    1
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_main
  8480 ;;		_fround
  8481 ;;		_scale
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           
  8486                           ;psect for function ___awmod
  8487  0000'                    ___awmod:	
  8488                           
  8489                           ;incstack = 0
  8490                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8491  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8492  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8493  0002' 0186'              	clrf	___awmod@sign
  8494  0003' 1F83'              	btfss	___awmod@dividend+1,7
  8495  0004' 2800'              	goto	l3952
  8496  0005' 0982'              	comf	___awmod@dividend,f
  8497  0006' 0983'              	comf	___awmod@dividend+1,f
  8498  0007' 0A82'              	incf	___awmod@dividend,f
  8499  0008' 1903               	skipnz
  8500  0009' 0A83'              	incf	___awmod@dividend+1,f
  8501  000A' 0186'              	clrf	___awmod@sign
  8502  000B' 0A86'              	incf	___awmod@sign,f
  8503  000C'                    l3952:	
  8504  000C' 1F81'              	btfss	___awmod@divisor+1,7
  8505  000D' 2800'              	goto	l3956
  8506  000E' 0980'              	comf	___awmod@divisor,f
  8507  000F' 0981'              	comf	___awmod@divisor+1,f
  8508  0010' 0A80'              	incf	___awmod@divisor,f
  8509  0011' 1903               	skipnz
  8510  0012' 0A81'              	incf	___awmod@divisor+1,f
  8511  0013'                    l3956:	
  8512  0013' 0800'              	movf	___awmod@divisor,w
  8513  0014' 0401'              	iorwf	___awmod@divisor+1,w
  8514  0015' 1903               	btfsc	3,2
  8515  0016' 2800'              	goto	l3974
  8516  0017' 0185'              	clrf	___awmod@counter
  8517  0018' 0A85'              	incf	___awmod@counter,f
  8518  0019'                    l3964:	
  8519  0019' 1B81'              	btfsc	___awmod@divisor+1,7
  8520  001A' 2800'              	goto	l3966
  8521  001B' 3001               	movlw	1
  8522  001C'                    u6075:	
  8523  001C' 1003               	clrc
  8524  001D' 0D80'              	rlf	___awmod@divisor,f
  8525  001E' 0D81'              	rlf	___awmod@divisor+1,f
  8526  001F' 3EFF               	addlw	-1
  8527  0020' 1D03               	skipz
  8528  0021' 2800'              	goto	u6075
  8529  0022' 3001               	movlw	1
  8530  0023' 0084'              	movwf	??___awmod
  8531  0024' 0804'              	movf	??___awmod,w
  8532  0025' 0785'              	addwf	___awmod@counter,f
  8533  0026' 2800'              	goto	l3964
  8534  0027'                    l3966:	
  8535  0027' 0801'              	movf	___awmod@divisor+1,w
  8536  0028' 0203'              	subwf	___awmod@dividend+1,w
  8537  0029' 1D03               	skipz
  8538  002A' 2800'              	goto	u6095
  8539  002B' 0800'              	movf	___awmod@divisor,w
  8540  002C' 0202'              	subwf	___awmod@dividend,w
  8541  002D'                    u6095:	
  8542  002D' 1C03               	skipc
  8543  002E' 2800'              	goto	l3970
  8544  002F' 0800'              	movf	___awmod@divisor,w
  8545  0030' 0282'              	subwf	___awmod@dividend,f
  8546  0031' 0801'              	movf	___awmod@divisor+1,w
  8547  0032' 1C03               	skipc
  8548  0033' 0383'              	decf	___awmod@dividend+1,f
  8549  0034' 0283'              	subwf	___awmod@dividend+1,f
  8550  0035'                    l3970:	
  8551  0035' 3001               	movlw	1
  8552  0036'                    u6105:	
  8553  0036' 1003               	clrc
  8554  0037' 0C81'              	rrf	___awmod@divisor+1,f
  8555  0038' 0C80'              	rrf	___awmod@divisor,f
  8556  0039' 3EFF               	addlw	-1
  8557  003A' 1D03               	skipz
  8558  003B' 2800'              	goto	u6105
  8559  003C' 3001               	movlw	1
  8560  003D' 0285'              	subwf	___awmod@counter,f
  8561  003E' 1D03               	btfss	3,2
  8562  003F' 2800'              	goto	l3966
  8563  0040'                    l3974:	
  8564  0040' 0806'              	movf	___awmod@sign,w
  8565  0041' 1903               	btfsc	3,2
  8566  0042' 2800'              	goto	l3978
  8567  0043' 0982'              	comf	___awmod@dividend,f
  8568  0044' 0983'              	comf	___awmod@dividend+1,f
  8569  0045' 0A82'              	incf	___awmod@dividend,f
  8570  0046' 1903               	skipnz
  8571  0047' 0A83'              	incf	___awmod@dividend+1,f
  8572  0048'                    l3978:	
  8573  0048' 0803'              	movf	___awmod@dividend+1,w
  8574  0049' 0081'              	movwf	?___awmod+1
  8575  004A' 0802'              	movf	___awmod@dividend,w
  8576  004B' 0080'              	movwf	?___awmod
  8577  004C' 0008               	return
  8578  004D'                    __end_of___awmod:	
  8579                           
  8580                           	psect	text24
  8581  0000'                    __ptext24:	
  8582 ;; *************** function ___awdiv *****************
  8583 ;; Defined at:
  8584 ;;		line 6 in file "D:\mplab\sources\common\awdiv.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  divisor         2    7[BANK0 ] int 
  8587 ;;  dividend        2    9[BANK0 ] int 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  quotient        2   14[BANK0 ] int 
  8590 ;;  sign            1   13[BANK0 ] unsigned char 
  8591 ;;  counter         1   12[BANK0 ] unsigned char 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  2    7[BANK0 ] int 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8601 ;;      Params:         0       4       0       0       0
  8602 ;;      Locals:         0       4       0       0       0
  8603 ;;      Temps:          0       1       0       0       0
  8604 ;;      Totals:         0       9       0       0       0
  8605 ;;Total ram usage:        9 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_main
  8612 ;;		_fround
  8613 ;;		_scale
  8614 ;;		_sprintf
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function ___awdiv
  8620  0000'                    ___awdiv:	
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8624  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8625  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8626  0002' 018D'              	clrf	___awdiv@sign
  8627  0003' 1F88'              	btfss	___awdiv@divisor+1,7
  8628  0004' 2800'              	goto	l3908
  8629  0005' 0987'              	comf	___awdiv@divisor,f
  8630  0006' 0988'              	comf	___awdiv@divisor+1,f
  8631  0007' 0A87'              	incf	___awdiv@divisor,f
  8632  0008' 1903               	skipnz
  8633  0009' 0A88'              	incf	___awdiv@divisor+1,f
  8634  000A' 018D'              	clrf	___awdiv@sign
  8635  000B' 0A8D'              	incf	___awdiv@sign,f
  8636  000C'                    l3908:	
  8637  000C' 1F8A'              	btfss	___awdiv@dividend+1,7
  8638  000D' 2800'              	goto	l3914
  8639  000E' 0989'              	comf	___awdiv@dividend,f
  8640  000F' 098A'              	comf	___awdiv@dividend+1,f
  8641  0010' 0A89'              	incf	___awdiv@dividend,f
  8642  0011' 1903               	skipnz
  8643  0012' 0A8A'              	incf	___awdiv@dividend+1,f
  8644  0013' 3001               	movlw	1
  8645  0014' 008B'              	movwf	??___awdiv
  8646  0015' 080B'              	movf	??___awdiv,w
  8647  0016' 068D'              	xorwf	___awdiv@sign,f
  8648  0017'                    l3914:	
  8649  0017' 018E'              	clrf	___awdiv@quotient
  8650  0018' 018F'              	clrf	___awdiv@quotient+1
  8651  0019' 0807'              	movf	___awdiv@divisor,w
  8652  001A' 0408'              	iorwf	___awdiv@divisor+1,w
  8653  001B' 1903               	btfsc	3,2
  8654  001C' 2800'              	goto	l3936
  8655  001D' 018C'              	clrf	___awdiv@counter
  8656  001E' 0A8C'              	incf	___awdiv@counter,f
  8657  001F'                    l3924:	
  8658  001F' 1B88'              	btfsc	___awdiv@divisor+1,7
  8659  0020' 2800'              	goto	l3926
  8660  0021' 3001               	movlw	1
  8661  0022'                    u5975:	
  8662  0022' 1003               	clrc
  8663  0023' 0D87'              	rlf	___awdiv@divisor,f
  8664  0024' 0D88'              	rlf	___awdiv@divisor+1,f
  8665  0025' 3EFF               	addlw	-1
  8666  0026' 1D03               	skipz
  8667  0027' 2800'              	goto	u5975
  8668  0028' 3001               	movlw	1
  8669  0029' 008B'              	movwf	??___awdiv
  8670  002A' 080B'              	movf	??___awdiv,w
  8671  002B' 078C'              	addwf	___awdiv@counter,f
  8672  002C' 2800'              	goto	l3924
  8673  002D'                    l3926:	
  8674  002D' 3001               	movlw	1
  8675  002E'                    u5995:	
  8676  002E' 1003               	clrc
  8677  002F' 0D8E'              	rlf	___awdiv@quotient,f
  8678  0030' 0D8F'              	rlf	___awdiv@quotient+1,f
  8679  0031' 3EFF               	addlw	-1
  8680  0032' 1D03               	skipz
  8681  0033' 2800'              	goto	u5995
  8682  0034' 0808'              	movf	___awdiv@divisor+1,w
  8683  0035' 020A'              	subwf	___awdiv@dividend+1,w
  8684  0036' 1D03               	skipz
  8685  0037' 2800'              	goto	u6005
  8686  0038' 0807'              	movf	___awdiv@divisor,w
  8687  0039' 0209'              	subwf	___awdiv@dividend,w
  8688  003A'                    u6005:	
  8689  003A' 1C03               	skipc
  8690  003B' 2800'              	goto	l3932
  8691  003C' 0807'              	movf	___awdiv@divisor,w
  8692  003D' 0289'              	subwf	___awdiv@dividend,f
  8693  003E' 0808'              	movf	___awdiv@divisor+1,w
  8694  003F' 1C03               	skipc
  8695  0040' 038A'              	decf	___awdiv@dividend+1,f
  8696  0041' 028A'              	subwf	___awdiv@dividend+1,f
  8697  0042' 140E'              	bsf	___awdiv@quotient,0
  8698  0043'                    l3932:	
  8699  0043' 3001               	movlw	1
  8700  0044'                    u6015:	
  8701  0044' 1003               	clrc
  8702  0045' 0C88'              	rrf	___awdiv@divisor+1,f
  8703  0046' 0C87'              	rrf	___awdiv@divisor,f
  8704  0047' 3EFF               	addlw	-1
  8705  0048' 1D03               	skipz
  8706  0049' 2800'              	goto	u6015
  8707  004A' 3001               	movlw	1
  8708  004B' 028C'              	subwf	___awdiv@counter,f
  8709  004C' 1D03               	btfss	3,2
  8710  004D' 2800'              	goto	l3926
  8711  004E'                    l3936:	
  8712  004E' 080D'              	movf	___awdiv@sign,w
  8713  004F' 1903               	btfsc	3,2
  8714  0050' 2800'              	goto	l3940
  8715  0051' 098E'              	comf	___awdiv@quotient,f
  8716  0052' 098F'              	comf	___awdiv@quotient+1,f
  8717  0053' 0A8E'              	incf	___awdiv@quotient,f
  8718  0054' 1903               	skipnz
  8719  0055' 0A8F'              	incf	___awdiv@quotient+1,f
  8720  0056'                    l3940:	
  8721  0056' 080F'              	movf	___awdiv@quotient+1,w
  8722  0057' 0088'              	movwf	?___awdiv+1
  8723  0058' 080E'              	movf	___awdiv@quotient,w
  8724  0059' 0087'              	movwf	?___awdiv
  8725  005A' 0008               	return
  8726  005B'                    __end_of___awdiv:	
  8727                           
  8728                           	psect	text25
  8729  0000'                    __ptext25:	
  8730 ;; *************** function __tdiv_to_l_ *****************
  8731 ;; Defined at:
  8732 ;;		line 60 in file "D:\mplab\sources\common\ftdivl.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  f1              3    0[BANK0 ] float 
  8735 ;;  f2              3    3[BANK0 ] float 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  quot            4   10[BANK0 ] unsigned long 
  8738 ;;  exp1            1   15[BANK0 ] unsigned char 
  8739 ;;  cntr            1   14[BANK0 ] unsigned char 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  4    0[BANK0 ] unsigned long 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8749 ;;      Params:         0       6       0       0       0
  8750 ;;      Locals:         0       6       0       0       0
  8751 ;;      Temps:          0       4       0       0       0
  8752 ;;      Totals:         0      16       0       0       0
  8753 ;;Total ram usage:       16 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:    1
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_sprintf
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function __tdiv_to_l_
  8765  0000'                    __tdiv_to_l_:	
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  8769  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8770  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8771  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  8772  0003' 0086'              	movwf	??__tdiv_to_l_
  8773  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  8774  0005' 0087'              	movwf	??__tdiv_to_l_+1
  8775  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  8776  0007' 0088'              	movwf	??__tdiv_to_l_+2
  8777  0008' 1003               	clrc
  8778  0009' 0D07'              	rlf	??__tdiv_to_l_+1,w
  8779  000A' 0D08'              	rlf	??__tdiv_to_l_+2,w
  8780  000B' 0089'              	movwf	??__tdiv_to_l_+3
  8781  000C' 0809'              	movf	??__tdiv_to_l_+3,w
  8782  000D' 008F'              	movwf	__tdiv_to_l_@exp1
  8783  000E' 080F'              	movf	__tdiv_to_l_@exp1,w
  8784  000F' 1D03               	btfss	3,2
  8785  0010' 2800'              	goto	l4240
  8786  0011' 3000               	movlw	0
  8787  0012' 0083'              	movwf	?__tdiv_to_l_+3
  8788  0013' 3000               	movlw	0
  8789  0014' 0082'              	movwf	?__tdiv_to_l_+2
  8790  0015' 3000               	movlw	0
  8791  0016' 0081'              	movwf	?__tdiv_to_l_+1
  8792  0017' 3000               	movlw	0
  8793  0018' 0080'              	movwf	?__tdiv_to_l_
  8794  0019' 0008               	return
  8795  001A'                    l4240:	
  8796  001A' 0803'              	movf	__tdiv_to_l_@f2,w
  8797  001B' 0086'              	movwf	??__tdiv_to_l_
  8798  001C' 0804'              	movf	__tdiv_to_l_@f2+1,w
  8799  001D' 0087'              	movwf	??__tdiv_to_l_+1
  8800  001E' 0805'              	movf	__tdiv_to_l_@f2+2,w
  8801  001F' 0088'              	movwf	??__tdiv_to_l_+2
  8802  0020' 1003               	clrc
  8803  0021' 0D07'              	rlf	??__tdiv_to_l_+1,w
  8804  0022' 0D08'              	rlf	??__tdiv_to_l_+2,w
  8805  0023' 0089'              	movwf	??__tdiv_to_l_+3
  8806  0024' 0809'              	movf	??__tdiv_to_l_+3,w
  8807  0025' 008E'              	movwf	__tdiv_to_l_@cntr
  8808  0026' 080E'              	movf	__tdiv_to_l_@cntr,w
  8809  0027' 1D03               	btfss	3,2
  8810  0028' 2800'              	goto	l724
  8811  0029' 3000               	movlw	0
  8812  002A' 0083'              	movwf	?__tdiv_to_l_+3
  8813  002B' 3000               	movlw	0
  8814  002C' 0082'              	movwf	?__tdiv_to_l_+2
  8815  002D' 3000               	movlw	0
  8816  002E' 0081'              	movwf	?__tdiv_to_l_+1
  8817  002F' 3000               	movlw	0
  8818  0030' 0080'              	movwf	?__tdiv_to_l_
  8819  0031' 0008               	return
  8820  0032'                    l724:	
  8821  0032' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  8822  0033' 30FF               	movlw	255
  8823  0034' 0580'              	andwf	__tdiv_to_l_@f1,f
  8824  0035' 30FF               	movlw	255
  8825  0036' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  8826  0037' 3000               	movlw	0
  8827  0038' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  8828  0039' 1784'              	bsf	__tdiv_to_l_@f2+1,7
  8829  003A' 30FF               	movlw	255
  8830  003B' 0583'              	andwf	__tdiv_to_l_@f2,f
  8831  003C' 30FF               	movlw	255
  8832  003D' 0584'              	andwf	__tdiv_to_l_@f2+1,f
  8833  003E' 3000               	movlw	0
  8834  003F' 0585'              	andwf	__tdiv_to_l_@f2+2,f
  8835  0040' 3000               	movlw	0
  8836  0041' 008D'              	movwf	__tdiv_to_l_@quot+3
  8837  0042' 3000               	movlw	0
  8838  0043' 008C'              	movwf	__tdiv_to_l_@quot+2
  8839  0044' 3000               	movlw	0
  8840  0045' 008B'              	movwf	__tdiv_to_l_@quot+1
  8841  0046' 3000               	movlw	0
  8842  0047' 008A'              	movwf	__tdiv_to_l_@quot
  8843  0048' 307F               	movlw	127
  8844  0049' 028F'              	subwf	__tdiv_to_l_@exp1,f
  8845  004A' 3098               	movlw	152
  8846  004B' 070E'              	addwf	__tdiv_to_l_@cntr,w
  8847  004C' 0086'              	movwf	??__tdiv_to_l_
  8848  004D' 0806'              	movf	??__tdiv_to_l_,w
  8849  004E' 028F'              	subwf	__tdiv_to_l_@exp1,f
  8850  004F' 3018               	movlw	24
  8851  0050' 0086'              	movwf	??__tdiv_to_l_
  8852  0051' 0806'              	movf	??__tdiv_to_l_,w
  8853  0052' 008E'              	movwf	__tdiv_to_l_@cntr
  8854  0053'                    l4254:	
  8855  0053' 3001               	movlw	1
  8856  0054' 0086'              	movwf	??__tdiv_to_l_
  8857  0055'                    u6745:	
  8858  0055' 1003               	clrc
  8859  0056' 0D8A'              	rlf	__tdiv_to_l_@quot,f
  8860  0057' 0D8B'              	rlf	__tdiv_to_l_@quot+1,f
  8861  0058' 0D8C'              	rlf	__tdiv_to_l_@quot+2,f
  8862  0059' 0D8D'              	rlf	__tdiv_to_l_@quot+3,f
  8863  005A' 0B86'              	decfsz	??__tdiv_to_l_,f
  8864  005B' 2800'              	goto	u6745
  8865  005C' 0805'              	movf	__tdiv_to_l_@f2+2,w
  8866  005D' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  8867  005E' 1D03               	skipz
  8868  005F' 2800'              	goto	u6755
  8869  0060' 0804'              	movf	__tdiv_to_l_@f2+1,w
  8870  0061' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  8871  0062' 1D03               	skipz
  8872  0063' 2800'              	goto	u6755
  8873  0064' 0803'              	movf	__tdiv_to_l_@f2,w
  8874  0065' 0200'              	subwf	__tdiv_to_l_@f1,w
  8875  0066'                    u6755:	
  8876  0066' 1C03               	skipc
  8877  0067' 2800'              	goto	l4262
  8878  0068' 0803'              	movf	__tdiv_to_l_@f2,w
  8879  0069' 0280'              	subwf	__tdiv_to_l_@f1,f
  8880  006A' 0804'              	movf	__tdiv_to_l_@f2+1,w
  8881  006B' 1C03               	skipc
  8882  006C' 0F04'              	incfsz	__tdiv_to_l_@f2+1,w
  8883  006D' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  8884  006E' 0805'              	movf	__tdiv_to_l_@f2+2,w
  8885  006F' 1C03               	skipc
  8886  0070' 0A05'              	incf	__tdiv_to_l_@f2+2,w
  8887  0071' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  8888  0072' 140A'              	bsf	__tdiv_to_l_@quot,0
  8889  0073'                    l4262:	
  8890  0073' 3001               	movlw	1
  8891  0074'                    u6765:	
  8892  0074' 1003               	clrc
  8893  0075' 0D80'              	rlf	__tdiv_to_l_@f1,f
  8894  0076' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  8895  0077' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  8896  0078' 3EFF               	addlw	-1
  8897  0079' 1D03               	skipz
  8898  007A' 2800'              	goto	u6765
  8899  007B' 3001               	movlw	1
  8900  007C' 028E'              	subwf	__tdiv_to_l_@cntr,f
  8901  007D' 1D03               	btfss	3,2
  8902  007E' 2800'              	goto	l4254
  8903  007F' 1F8F'              	btfss	__tdiv_to_l_@exp1,7
  8904  0080' 2800'              	goto	l4274
  8905  0081' 080F'              	movf	__tdiv_to_l_@exp1,w
  8906  0082' 3A80               	xorlw	128
  8907  0083' 3E97               	addlw	151
  8908  0084' 1803               	skipnc
  8909  0085' 2800'              	goto	l4272
  8910  0086' 3000               	movlw	0
  8911  0087' 0083'              	movwf	?__tdiv_to_l_+3
  8912  0088' 3000               	movlw	0
  8913  0089' 0082'              	movwf	?__tdiv_to_l_+2
  8914  008A' 3000               	movlw	0
  8915  008B' 0081'              	movwf	?__tdiv_to_l_+1
  8916  008C' 3000               	movlw	0
  8917  008D' 0080'              	movwf	?__tdiv_to_l_
  8918  008E' 0008               	return
  8919  008F'                    l4272:	
  8920  008F' 3001               	movlw	1
  8921  0090'                    u6805:	
  8922  0090' 1003               	clrc
  8923  0091' 0C8D'              	rrf	__tdiv_to_l_@quot+3,f
  8924  0092' 0C8C'              	rrf	__tdiv_to_l_@quot+2,f
  8925  0093' 0C8B'              	rrf	__tdiv_to_l_@quot+1,f
  8926  0094' 0C8A'              	rrf	__tdiv_to_l_@quot,f
  8927  0095' 3EFF               	addlw	-1
  8928  0096' 1D03               	skipz
  8929  0097' 2800'              	goto	u6805
  8930  0098' 3001               	movlw	1
  8931  0099' 0086'              	movwf	??__tdiv_to_l_
  8932  009A' 0806'              	movf	??__tdiv_to_l_,w
  8933  009B' 078F'              	addwf	__tdiv_to_l_@exp1,f
  8934  009C' 1903               	btfsc	3,2
  8935  009D' 2800'              	goto	l4282
  8936  009E' 2800'              	goto	l4272
  8937  009F'                    l4274:	
  8938  009F' 3018               	movlw	24
  8939  00A0' 020F'              	subwf	__tdiv_to_l_@exp1,w
  8940  00A1' 1C03               	skipc
  8941  00A2' 2800'              	goto	l734
  8942  00A3' 3000               	movlw	0
  8943  00A4' 0083'              	movwf	?__tdiv_to_l_+3
  8944  00A5' 3000               	movlw	0
  8945  00A6' 0082'              	movwf	?__tdiv_to_l_+2
  8946  00A7' 3000               	movlw	0
  8947  00A8' 0081'              	movwf	?__tdiv_to_l_+1
  8948  00A9' 3000               	movlw	0
  8949  00AA' 0080'              	movwf	?__tdiv_to_l_
  8950  00AB' 0008               	return
  8951  00AC'                    l4280:	
  8952  00AC' 3001               	movlw	1
  8953  00AD' 0086'              	movwf	??__tdiv_to_l_
  8954  00AE'                    u6835:	
  8955  00AE' 1003               	clrc
  8956  00AF' 0D8A'              	rlf	__tdiv_to_l_@quot,f
  8957  00B0' 0D8B'              	rlf	__tdiv_to_l_@quot+1,f
  8958  00B1' 0D8C'              	rlf	__tdiv_to_l_@quot+2,f
  8959  00B2' 0D8D'              	rlf	__tdiv_to_l_@quot+3,f
  8960  00B3' 0B86'              	decfsz	??__tdiv_to_l_,f
  8961  00B4' 2800'              	goto	u6835
  8962  00B5' 3001               	movlw	1
  8963  00B6' 028F'              	subwf	__tdiv_to_l_@exp1,f
  8964  00B7'                    l734:	
  8965  00B7' 080F'              	movf	__tdiv_to_l_@exp1,w
  8966  00B8' 1D03               	btfss	3,2
  8967  00B9' 2800'              	goto	l4280
  8968  00BA'                    l4282:	
  8969  00BA' 080D'              	movf	__tdiv_to_l_@quot+3,w
  8970  00BB' 0083'              	movwf	?__tdiv_to_l_+3
  8971  00BC' 080C'              	movf	__tdiv_to_l_@quot+2,w
  8972  00BD' 0082'              	movwf	?__tdiv_to_l_+2
  8973  00BE' 080B'              	movf	__tdiv_to_l_@quot+1,w
  8974  00BF' 0081'              	movwf	?__tdiv_to_l_+1
  8975  00C0' 080A'              	movf	__tdiv_to_l_@quot,w
  8976  00C1' 0080'              	movwf	?__tdiv_to_l_
  8977  00C2' 0008               	return
  8978  00C3'                    __end_of__tdiv_to_l_:	
  8979                           
  8980                           	psect	text26
  8981  0000'                    __ptext26:	
  8982 ;; *************** function __div_to_l_ *****************
  8983 ;; Defined at:
  8984 ;;		line 60 in file "D:\mplab\sources\common\fldivl.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  f1              3    0[BANK0 ] unsigned long 
  8987 ;;  f2              3    3[BANK0 ] unsigned long 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  quot            4   14[BANK0 ] unsigned long 
  8990 ;;  exp1            1   19[BANK0 ] unsigned char 
  8991 ;;  cntr            1   18[BANK0 ] unsigned char 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  4    0[BANK0 ] unsigned long 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9001 ;;      Params:         0       6       0       0       0
  9002 ;;      Locals:         0       6       0       0       0
  9003 ;;      Temps:          0       8       0       0       0
  9004 ;;      Totals:         0      20       0       0       0
  9005 ;;Total ram usage:       20 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    1
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_sprintf
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function __div_to_l_
  9017  0000'                    __div_to_l_:	
  9018                           
  9019                           ;incstack = 0
  9020                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  9021  0000' 3000'              	movlw	low (__div_to_l_@f1| 0)
  9022  0001' 0084               	movwf	4
  9023  0002' 1383               	bcf	3,7	;select IRP bank0
  9024  0003' 0800               	movf	0,w
  9025  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  9026  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  9027  0006' 0086'              	movwf	??__div_to_l_
  9028  0007' 0A84               	incf	4,f
  9029  0008' 0800               	movf	0,w
  9030  0009' 0087'              	movwf	??__div_to_l_+1
  9031  000A' 0A84               	incf	4,f
  9032  000B' 0800               	movf	0,w
  9033  000C' 0088'              	movwf	??__div_to_l_+2
  9034  000D' 0A84               	incf	4,f
  9035  000E' 0800               	movf	0,w
  9036  000F' 0089'              	movwf	??__div_to_l_+3
  9037  0010' 1003               	clrc
  9038  0011' 0D08'              	rlf	??__div_to_l_+2,w
  9039  0012' 0D09'              	rlf	??__div_to_l_+3,w
  9040  0013' 008A'              	movwf	??__div_to_l_+4
  9041  0014' 080A'              	movf	??__div_to_l_+4,w
  9042  0015' 0093'              	movwf	__div_to_l_@exp1
  9043  0016' 0813'              	movf	__div_to_l_@exp1,w
  9044  0017' 1D03               	btfss	3,2
  9045  0018' 2800'              	goto	l4292
  9046  0019' 3000               	movlw	0
  9047  001A' 0083'              	movwf	?__div_to_l_+3
  9048  001B' 3000               	movlw	0
  9049  001C' 0082'              	movwf	?__div_to_l_+2
  9050  001D' 3000               	movlw	0
  9051  001E' 0081'              	movwf	?__div_to_l_+1
  9052  001F' 3000               	movlw	0
  9053  0020' 0080'              	movwf	?__div_to_l_
  9054  0021' 0008               	return
  9055  0022'                    l4292:	
  9056  0022' 3000'              	movlw	low (__div_to_l_@f2| 0)
  9057  0023' 0084               	movwf	4
  9058  0024' 0800               	movf	0,w
  9059  0025' 0086'              	movwf	??__div_to_l_
  9060  0026' 0A84               	incf	4,f
  9061  0027' 0800               	movf	0,w
  9062  0028' 0087'              	movwf	??__div_to_l_+1
  9063  0029' 0A84               	incf	4,f
  9064  002A' 0800               	movf	0,w
  9065  002B' 0088'              	movwf	??__div_to_l_+2
  9066  002C' 0A84               	incf	4,f
  9067  002D' 0800               	movf	0,w
  9068  002E' 0089'              	movwf	??__div_to_l_+3
  9069  002F' 1003               	clrc
  9070  0030' 0D08'              	rlf	??__div_to_l_+2,w
  9071  0031' 0D09'              	rlf	??__div_to_l_+3,w
  9072  0032' 008A'              	movwf	??__div_to_l_+4
  9073  0033' 080A'              	movf	??__div_to_l_+4,w
  9074  0034' 0092'              	movwf	__div_to_l_@cntr
  9075  0035' 0812'              	movf	__div_to_l_@cntr,w
  9076  0036' 1D03               	btfss	3,2
  9077  0037' 2800'              	goto	l4298
  9078  0038' 3000               	movlw	0
  9079  0039' 0083'              	movwf	?__div_to_l_+3
  9080  003A' 3000               	movlw	0
  9081  003B' 0082'              	movwf	?__div_to_l_+2
  9082  003C' 3000               	movlw	0
  9083  003D' 0081'              	movwf	?__div_to_l_+1
  9084  003E' 3000               	movlw	0
  9085  003F' 0080'              	movwf	?__div_to_l_
  9086  0040' 0008               	return
  9087  0041'                    l4298:	
  9088  0041' 3000'              	movlw	low (__div_to_l_@f1| 0)
  9089  0042' 0084               	movwf	4
  9090  0043' 3000               	movlw	0
  9091  0044' 0480               	iorwf	0,f
  9092  0045' 0A84               	incf	4,f
  9093  0046' 3000               	movlw	0
  9094  0047' 0480               	iorwf	0,f
  9095  0048' 0A84               	incf	4,f
  9096  0049' 3080               	movlw	128
  9097  004A' 0480               	iorwf	0,f
  9098  004B' 0A84               	incf	4,f
  9099  004C' 3000               	movlw	0
  9100  004D' 0480               	iorwf	0,f
  9101  004E' 3000'              	movlw	low (__div_to_l_@f1| 0)
  9102  004F' 0084               	movwf	4
  9103  0050' 30FF               	movlw	255
  9104  0051' 0580               	andwf	0,f
  9105  0052' 0A84               	incf	4,f
  9106  0053' 30FF               	movlw	255
  9107  0054' 0580               	andwf	0,f
  9108  0055' 0A84               	incf	4,f
  9109  0056' 30FF               	movlw	255
  9110  0057' 0580               	andwf	0,f
  9111  0058' 0A84               	incf	4,f
  9112  0059' 3000               	movlw	0
  9113  005A' 0580               	andwf	0,f
  9114  005B' 3000'              	movlw	low (__div_to_l_@f2| 0)
  9115  005C' 0084               	movwf	4
  9116  005D' 3000               	movlw	0
  9117  005E' 0480               	iorwf	0,f
  9118  005F' 0A84               	incf	4,f
  9119  0060' 3000               	movlw	0
  9120  0061' 0480               	iorwf	0,f
  9121  0062' 0A84               	incf	4,f
  9122  0063' 3080               	movlw	128
  9123  0064' 0480               	iorwf	0,f
  9124  0065' 0A84               	incf	4,f
  9125  0066' 3000               	movlw	0
  9126  0067' 0480               	iorwf	0,f
  9127  0068' 3000'              	movlw	low (__div_to_l_@f2| 0)
  9128  0069' 0084               	movwf	4
  9129  006A' 30FF               	movlw	255
  9130  006B' 0580               	andwf	0,f
  9131  006C' 0A84               	incf	4,f
  9132  006D' 30FF               	movlw	255
  9133  006E' 0580               	andwf	0,f
  9134  006F' 0A84               	incf	4,f
  9135  0070' 30FF               	movlw	255
  9136  0071' 0580               	andwf	0,f
  9137  0072' 0A84               	incf	4,f
  9138  0073' 3000               	movlw	0
  9139  0074' 0580               	andwf	0,f
  9140  0075' 3000               	movlw	0
  9141  0076' 0091'              	movwf	__div_to_l_@quot+3
  9142  0077' 3000               	movlw	0
  9143  0078' 0090'              	movwf	__div_to_l_@quot+2
  9144  0079' 3000               	movlw	0
  9145  007A' 008F'              	movwf	__div_to_l_@quot+1
  9146  007B' 3000               	movlw	0
  9147  007C' 008E'              	movwf	__div_to_l_@quot
  9148  007D' 307F               	movlw	127
  9149  007E' 0293'              	subwf	__div_to_l_@exp1,f
  9150  007F' 30A0               	movlw	160
  9151  0080' 0712'              	addwf	__div_to_l_@cntr,w
  9152  0081' 0086'              	movwf	??__div_to_l_
  9153  0082' 0806'              	movf	??__div_to_l_,w
  9154  0083' 0293'              	subwf	__div_to_l_@exp1,f
  9155  0084' 3020               	movlw	32
  9156  0085' 0086'              	movwf	??__div_to_l_
  9157  0086' 0806'              	movf	??__div_to_l_,w
  9158  0087' 0092'              	movwf	__div_to_l_@cntr
  9159  0088'                    l4308:	
  9160  0088' 3001               	movlw	1
  9161  0089' 0086'              	movwf	??__div_to_l_
  9162  008A'                    u6875:	
  9163  008A' 1003               	clrc
  9164  008B' 0D8E'              	rlf	__div_to_l_@quot,f
  9165  008C' 0D8F'              	rlf	__div_to_l_@quot+1,f
  9166  008D' 0D90'              	rlf	__div_to_l_@quot+2,f
  9167  008E' 0D91'              	rlf	__div_to_l_@quot+3,f
  9168  008F' 0B86'              	decfsz	??__div_to_l_,f
  9169  0090' 2800'              	goto	u6875
  9170  0091' 3000'              	movlw	low (__div_to_l_@f2| 0)
  9171  0092' 0084               	movwf	4
  9172  0093' 0800               	movf	0,w
  9173  0094' 0086'              	movwf	??__div_to_l_
  9174  0095' 0A84               	incf	4,f
  9175  0096' 0800               	movf	0,w
  9176  0097' 0087'              	movwf	??__div_to_l_+1
  9177  0098' 0A84               	incf	4,f
  9178  0099' 0800               	movf	0,w
  9179  009A' 0088'              	movwf	??__div_to_l_+2
  9180  009B' 0A84               	incf	4,f
  9181  009C' 0800               	movf	0,w
  9182  009D' 0089'              	movwf	??__div_to_l_+3
  9183  009E' 3000'              	movlw	low (__div_to_l_@f1| 0)
  9184  009F' 0084               	movwf	4
  9185  00A0' 0800               	movf	0,w
  9186  00A1' 008A'              	movwf	??__div_to_l_+4
  9187  00A2' 0A84               	incf	4,f
  9188  00A3' 0800               	movf	0,w
  9189  00A4' 008B'              	movwf	??__div_to_l_+5
  9190  00A5' 0A84               	incf	4,f
  9191  00A6' 0800               	movf	0,w
  9192  00A7' 008C'              	movwf	??__div_to_l_+6
  9193  00A8' 0A84               	incf	4,f
  9194  00A9' 0800               	movf	0,w
  9195  00AA' 008D'              	movwf	??__div_to_l_+7
  9196  00AB' 0809'              	movf	??__div_to_l_+3,w
  9197  00AC' 020D'              	subwf	??__div_to_l_+7,w
  9198  00AD' 1D03               	skipz
  9199  00AE' 2800'              	goto	u6885
  9200  00AF' 0808'              	movf	??__div_to_l_+2,w
  9201  00B0' 020C'              	subwf	??__div_to_l_+6,w
  9202  00B1' 1D03               	skipz
  9203  00B2' 2800'              	goto	u6885
  9204  00B3' 0807'              	movf	??__div_to_l_+1,w
  9205  00B4' 020B'              	subwf	??__div_to_l_+5,w
  9206  00B5' 1D03               	skipz
  9207  00B6' 2800'              	goto	u6885
  9208  00B7' 0806'              	movf	??__div_to_l_,w
  9209  00B8' 020A'              	subwf	??__div_to_l_+4,w
  9210  00B9'                    u6885:	
  9211  00B9' 1C03               	skipc
  9212  00BA' 2800'              	goto	l647
  9213  00BB' 3000'              	movlw	low (__div_to_l_@f2| 0)
  9214  00BC' 0084               	movwf	4
  9215  00BD' 0800               	movf	0,w
  9216  00BE' 0086'              	movwf	??__div_to_l_
  9217  00BF' 0A84               	incf	4,f
  9218  00C0' 0800               	movf	0,w
  9219  00C1' 0087'              	movwf	??__div_to_l_+1
  9220  00C2' 0A84               	incf	4,f
  9221  00C3' 0800               	movf	0,w
  9222  00C4' 0088'              	movwf	??__div_to_l_+2
  9223  00C5' 0A84               	incf	4,f
  9224  00C6' 0800               	movf	0,w
  9225  00C7' 0089'              	movwf	??__div_to_l_+3
  9226  00C8' 3000'              	movlw	low (__div_to_l_@f1| 0)
  9227  00C9' 0084               	movwf	4
  9228  00CA' 0806'              	movf	??__div_to_l_,w
  9229  00CB' 0280               	subwf	0,f
  9230  00CC' 0A84               	incf	4,f
  9231  00CD' 0807'              	movf	??__div_to_l_+1,w
  9232  00CE' 1C03               	skipc
  9233  00CF' 0F07'              	incfsz	??__div_to_l_+1,w
  9234  00D0' 0280               	subwf	0,f
  9235  00D1' 0A84               	incf	4,f
  9236  00D2' 0808'              	movf	??__div_to_l_+2,w
  9237  00D3' 1C03               	skipc
  9238  00D4' 0F08'              	incfsz	??__div_to_l_+2,w
  9239  00D5' 0280               	subwf	0,f
  9240  00D6' 0A84               	incf	4,f
  9241  00D7' 0809'              	movf	??__div_to_l_+3,w
  9242  00D8' 1C03               	skipc
  9243  00D9' 0A09'              	incf	??__div_to_l_+3,w
  9244  00DA' 0280               	subwf	0,f
  9245  00DB' 3003               	movlw	3
  9246  00DC' 0284               	subwf	4,f
  9247  00DD' 140E'              	bsf	__div_to_l_@quot,0
  9248  00DE'                    l647:	
  9249  00DE' 3000'              	movlw	low (__div_to_l_@f1| 0)
  9250  00DF' 0084               	movwf	4
  9251  00E0' 1003               	clrc
  9252  00E1' 0D80               	rlf	0,f
  9253  00E2' 0A84               	incf	4,f
  9254  00E3' 0D80               	rlf	0,f
  9255  00E4' 0A84               	incf	4,f
  9256  00E5' 0D80               	rlf	0,f
  9257  00E6' 0A84               	incf	4,f
  9258  00E7' 0D80               	rlf	0,f
  9259  00E8' 0384               	decf	4,f
  9260  00E9' 0384               	decf	4,f
  9261  00EA' 0384               	decf	4,f
  9262  00EB' 3001               	movlw	1
  9263  00EC' 0292'              	subwf	__div_to_l_@cntr,f
  9264  00ED' 1D03               	btfss	3,2
  9265  00EE' 2800'              	goto	l4308
  9266  00EF' 1F93'              	btfss	__div_to_l_@exp1,7
  9267  00F0' 2800'              	goto	l4326
  9268  00F1' 0813'              	movf	__div_to_l_@exp1,w
  9269  00F2' 3A80               	xorlw	128
  9270  00F3' 3E9F               	addlw	159
  9271  00F4' 1803               	skipnc
  9272  00F5' 2800'              	goto	l4324
  9273  00F6' 3000               	movlw	0
  9274  00F7' 0083'              	movwf	?__div_to_l_+3
  9275  00F8' 3000               	movlw	0
  9276  00F9' 0082'              	movwf	?__div_to_l_+2
  9277  00FA' 3000               	movlw	0
  9278  00FB' 0081'              	movwf	?__div_to_l_+1
  9279  00FC' 3000               	movlw	0
  9280  00FD' 0080'              	movwf	?__div_to_l_
  9281  00FE' 0008               	return
  9282  00FF'                    l4324:	
  9283  00FF' 3001               	movlw	1
  9284  0100'                    u6925:	
  9285  0100' 1003               	clrc
  9286  0101' 0C91'              	rrf	__div_to_l_@quot+3,f
  9287  0102' 0C90'              	rrf	__div_to_l_@quot+2,f
  9288  0103' 0C8F'              	rrf	__div_to_l_@quot+1,f
  9289  0104' 0C8E'              	rrf	__div_to_l_@quot,f
  9290  0105' 3EFF               	addlw	-1
  9291  0106' 1D03               	skipz
  9292  0107' 2800'              	goto	u6925
  9293  0108' 3001               	movlw	1
  9294  0109' 0086'              	movwf	??__div_to_l_
  9295  010A' 0806'              	movf	??__div_to_l_,w
  9296  010B' 0793'              	addwf	__div_to_l_@exp1,f
  9297  010C' 1903               	btfsc	3,2
  9298  010D' 2800'              	goto	l4334
  9299  010E' 2800'              	goto	l4324
  9300  010F'                    l4326:	
  9301  010F' 3020               	movlw	32
  9302  0110' 0213'              	subwf	__div_to_l_@exp1,w
  9303  0111' 1C03               	skipc
  9304  0112' 2800'              	goto	l655
  9305  0113' 3000               	movlw	0
  9306  0114' 0083'              	movwf	?__div_to_l_+3
  9307  0115' 3000               	movlw	0
  9308  0116' 0082'              	movwf	?__div_to_l_+2
  9309  0117' 3000               	movlw	0
  9310  0118' 0081'              	movwf	?__div_to_l_+1
  9311  0119' 3000               	movlw	0
  9312  011A' 0080'              	movwf	?__div_to_l_
  9313  011B' 0008               	return
  9314  011C'                    l4332:	
  9315  011C' 3001               	movlw	1
  9316  011D' 0086'              	movwf	??__div_to_l_
  9317  011E'                    u6955:	
  9318  011E' 1003               	clrc
  9319  011F' 0D8E'              	rlf	__div_to_l_@quot,f
  9320  0120' 0D8F'              	rlf	__div_to_l_@quot+1,f
  9321  0121' 0D90'              	rlf	__div_to_l_@quot+2,f
  9322  0122' 0D91'              	rlf	__div_to_l_@quot+3,f
  9323  0123' 0B86'              	decfsz	??__div_to_l_,f
  9324  0124' 2800'              	goto	u6955
  9325  0125' 3001               	movlw	1
  9326  0126' 0293'              	subwf	__div_to_l_@exp1,f
  9327  0127'                    l655:	
  9328  0127' 0813'              	movf	__div_to_l_@exp1,w
  9329  0128' 1D03               	btfss	3,2
  9330  0129' 2800'              	goto	l4332
  9331  012A'                    l4334:	
  9332  012A' 0811'              	movf	__div_to_l_@quot+3,w
  9333  012B' 0083'              	movwf	?__div_to_l_+3
  9334  012C' 0810'              	movf	__div_to_l_@quot+2,w
  9335  012D' 0082'              	movwf	?__div_to_l_+2
  9336  012E' 080F'              	movf	__div_to_l_@quot+1,w
  9337  012F' 0081'              	movwf	?__div_to_l_+1
  9338  0130' 080E'              	movf	__div_to_l_@quot,w
  9339  0131' 0080'              	movwf	?__div_to_l_
  9340  0132' 0008               	return
  9341  0133'                    __end_of__div_to_l_:	
  9342                           
  9343                           	psect	text27
  9344  0000'                    __ptext27:	
  9345 ;; *************** function ___wmul *****************
  9346 ;; Defined at:
  9347 ;;		line 15 in file "D:\mplab\sources\common\Umul16.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9350 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  product         2    4[BANK0 ] unsigned int 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  2    0[BANK0 ] unsigned int 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9362 ;;      Params:         0       4       0       0       0
  9363 ;;      Locals:         0       2       0       0       0
  9364 ;;      Temps:          0       0       0       0       0
  9365 ;;      Totals:         0       6       0       0       0
  9366 ;;Total ram usage:        6 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    1
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_sprintf
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           
  9377                           ;psect for function ___wmul
  9378  0000'                    ___wmul:	
  9379                           
  9380                           ;incstack = 0
  9381                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9382  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9383  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9384  0002' 0184'              	clrf	___wmul@product
  9385  0003' 0185'              	clrf	___wmul@product+1
  9386  0004'                    l4340:	
  9387  0004' 1C00'              	btfss	___wmul@multiplier,0
  9388  0005' 2800'              	goto	l386
  9389  0006' 0802'              	movf	___wmul@multiplicand,w
  9390  0007' 0784'              	addwf	___wmul@product,f
  9391  0008' 1803               	skipnc
  9392  0009' 0A85'              	incf	___wmul@product+1,f
  9393  000A' 0803'              	movf	___wmul@multiplicand+1,w
  9394  000B' 0785'              	addwf	___wmul@product+1,f
  9395  000C'                    l386:	
  9396  000C' 3001               	movlw	1
  9397  000D'                    u6985:	
  9398  000D' 1003               	clrc
  9399  000E' 0D82'              	rlf	___wmul@multiplicand,f
  9400  000F' 0D83'              	rlf	___wmul@multiplicand+1,f
  9401  0010' 3EFF               	addlw	-1
  9402  0011' 1D03               	skipz
  9403  0012' 2800'              	goto	u6985
  9404  0013' 3001               	movlw	1
  9405  0014'                    u6995:	
  9406  0014' 1003               	clrc
  9407  0015' 0C81'              	rrf	___wmul@multiplier+1,f
  9408  0016' 0C80'              	rrf	___wmul@multiplier,f
  9409  0017' 3EFF               	addlw	-1
  9410  0018' 1D03               	skipz
  9411  0019' 2800'              	goto	u6995
  9412  001A' 0800'              	movf	___wmul@multiplier,w
  9413  001B' 0401'              	iorwf	___wmul@multiplier+1,w
  9414  001C' 1D03               	btfss	3,2
  9415  001D' 2800'              	goto	l4340
  9416  001E' 0805'              	movf	___wmul@product+1,w
  9417  001F' 0081'              	movwf	?___wmul+1
  9418  0020' 0804'              	movf	___wmul@product,w
  9419  0021' 0080'              	movwf	?___wmul
  9420  0022' 0008               	return
  9421  0023'                    __end_of___wmul:	
  9422                           
  9423                           	psect	text28
  9424  0000'                    __ptext28:	
  9425 ;; *************** function ___lltoft *****************
  9426 ;; Defined at:
  9427 ;;		line 35 in file "D:\mplab\sources\common\lltoft.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  c               4    8[BANK0 ] unsigned long 
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;  exp             1   13[BANK0 ] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  3    8[BANK0 ] float 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0, pclath, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9441 ;;      Params:         0       4       0       0       0
  9442 ;;      Locals:         0       1       0       0       0
  9443 ;;      Temps:          0       1       0       0       0
  9444 ;;      Totals:         0       6       0       0       0
  9445 ;;Total ram usage:        6 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    2
  9448 ;; This function calls:
  9449 ;;		___ftpack
  9450 ;; This function is called by:
  9451 ;;		_sprintf
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           
  9456                           ;psect for function ___lltoft
  9457  0000'                    ___lltoft:	
  9458                           
  9459                           ;incstack = 0
  9460                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  9461  0000' 308E               	movlw	142
  9462  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9463  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9464  0003' 008C'              	movwf	??___lltoft
  9465  0004' 080C'              	movf	??___lltoft,w
  9466  0005' 008D'              	movwf	___lltoft@exp
  9467  0006'                    l4644:	
  9468  0006' 30FF               	movlw	255
  9469  0007' 050B'              	andwf	___lltoft@c+3,w
  9470  0008' 1903               	btfsc	3,2
  9471  0009' 2800'              	goto	l4646
  9472  000A' 3001               	movlw	1
  9473  000B'                    u7595:	
  9474  000B' 1003               	clrc
  9475  000C' 0C8B'              	rrf	___lltoft@c+3,f
  9476  000D' 0C8A'              	rrf	___lltoft@c+2,f
  9477  000E' 0C89'              	rrf	___lltoft@c+1,f
  9478  000F' 0C88'              	rrf	___lltoft@c,f
  9479  0010' 3EFF               	addlw	-1
  9480  0011' 1D03               	skipz
  9481  0012' 2800'              	goto	u7595
  9482  0013' 3001               	movlw	1
  9483  0014' 008C'              	movwf	??___lltoft
  9484  0015' 080C'              	movf	??___lltoft,w
  9485  0016' 078D'              	addwf	___lltoft@exp,f
  9486  0017' 2800'              	goto	l4644
  9487  0018'                    l4646:	
  9488  0018' 0808'              	movf	___lltoft@c,w
  9489  0019' 0080'              	movwf	___ftpack@arg
  9490  001A' 0809'              	movf	___lltoft@c+1,w
  9491  001B' 0081'              	movwf	___ftpack@arg+1
  9492  001C' 080A'              	movf	___lltoft@c+2,w
  9493  001D' 0082'              	movwf	___ftpack@arg+2
  9494  001E' 080D'              	movf	___lltoft@exp,w
  9495  001F' 008C'              	movwf	??___lltoft
  9496  0020' 080C'              	movf	??___lltoft,w
  9497  0021' 0083'              	movwf	___ftpack@exp
  9498  0022' 0184'              	clrf	___ftpack@sign
  9499  0023' 120A' 118A' 2000'  	fcall	___ftpack
  9500  0026' 1283               	bcf	3,5	;RP0=0, select bank0
  9501  0027' 1303               	bcf	3,6	;RP1=0, select bank0
  9502  0028' 0800'              	movf	?___ftpack,w
  9503  0029' 0088'              	movwf	?___lltoft
  9504  002A' 0801'              	movf	?___ftpack+1,w
  9505  002B' 0089'              	movwf	?___lltoft+1
  9506  002C' 0802'              	movf	?___ftpack+2,w
  9507  002D' 008A'              	movwf	?___lltoft+2
  9508  002E' 0008               	return
  9509  002F'                    __end_of___lltoft:	
  9510                           
  9511                           	psect	text29
  9512  0000'                    __ptext29:	
  9513 ;; *************** function ___llmod *****************
  9514 ;; Defined at:
  9515 ;;		line 6 in file "D:\mplab\sources\common\llmod.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  divisor         4    0[BANK0 ] unsigned long 
  9518 ;;  dividend        4    4[BANK0 ] unsigned long 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  counter         1    9[BANK0 ] unsigned char 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  4    0[BANK0 ] unsigned long 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2, status,0
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9530 ;;      Params:         0       8       0       0       0
  9531 ;;      Locals:         0       1       0       0       0
  9532 ;;      Temps:          0       1       0       0       0
  9533 ;;      Totals:         0      10       0       0       0
  9534 ;;Total ram usage:       10 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_convert_time_to_UTC
  9541 ;;		_sprintf
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function ___llmod
  9547  0000'                    ___llmod:	
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  9551  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9552  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9553  0002' 0803'              	movf	___llmod@divisor+3,w
  9554  0003' 0402'              	iorwf	___llmod@divisor+2,w
  9555  0004' 0401'              	iorwf	___llmod@divisor+1,w
  9556  0005' 0400'              	iorwf	___llmod@divisor,w
  9557  0006' 1903               	skipnz
  9558  0007' 2800'              	goto	l4636
  9559  0008' 0189'              	clrf	___llmod@counter
  9560  0009' 0A89'              	incf	___llmod@counter,f
  9561  000A'                    l4626:	
  9562  000A' 1B83'              	btfsc	___llmod@divisor+3,7
  9563  000B' 2800'              	goto	l4628
  9564  000C' 3001               	movlw	1
  9565  000D' 0088'              	movwf	??___llmod
  9566  000E'                    u7545:	
  9567  000E' 1003               	clrc
  9568  000F' 0D80'              	rlf	___llmod@divisor,f
  9569  0010' 0D81'              	rlf	___llmod@divisor+1,f
  9570  0011' 0D82'              	rlf	___llmod@divisor+2,f
  9571  0012' 0D83'              	rlf	___llmod@divisor+3,f
  9572  0013' 0B88'              	decfsz	??___llmod,f
  9573  0014' 2800'              	goto	u7545
  9574  0015' 3001               	movlw	1
  9575  0016' 0088'              	movwf	??___llmod
  9576  0017' 0808'              	movf	??___llmod,w
  9577  0018' 0789'              	addwf	___llmod@counter,f
  9578  0019' 2800'              	goto	l4626
  9579  001A'                    l4628:	
  9580  001A' 0803'              	movf	___llmod@divisor+3,w
  9581  001B' 0207'              	subwf	___llmod@dividend+3,w
  9582  001C' 1D03               	skipz
  9583  001D' 2800'              	goto	u7565
  9584  001E' 0802'              	movf	___llmod@divisor+2,w
  9585  001F' 0206'              	subwf	___llmod@dividend+2,w
  9586  0020' 1D03               	skipz
  9587  0021' 2800'              	goto	u7565
  9588  0022' 0801'              	movf	___llmod@divisor+1,w
  9589  0023' 0205'              	subwf	___llmod@dividend+1,w
  9590  0024' 1D03               	skipz
  9591  0025' 2800'              	goto	u7565
  9592  0026' 0800'              	movf	___llmod@divisor,w
  9593  0027' 0204'              	subwf	___llmod@dividend,w
  9594  0028'                    u7565:	
  9595  0028' 1C03               	skipc
  9596  0029' 2800'              	goto	l4632
  9597  002A' 0800'              	movf	___llmod@divisor,w
  9598  002B' 0284'              	subwf	___llmod@dividend,f
  9599  002C' 0801'              	movf	___llmod@divisor+1,w
  9600  002D' 1C03               	skipc
  9601  002E' 0F01'              	incfsz	___llmod@divisor+1,w
  9602  002F' 0285'              	subwf	___llmod@dividend+1,f
  9603  0030' 0802'              	movf	___llmod@divisor+2,w
  9604  0031' 1C03               	skipc
  9605  0032' 0F02'              	incfsz	___llmod@divisor+2,w
  9606  0033' 0286'              	subwf	___llmod@dividend+2,f
  9607  0034' 0803'              	movf	___llmod@divisor+3,w
  9608  0035' 1C03               	skipc
  9609  0036' 0F03'              	incfsz	___llmod@divisor+3,w
  9610  0037' 0287'              	subwf	___llmod@dividend+3,f
  9611  0038'                    l4632:	
  9612  0038' 3001               	movlw	1
  9613  0039'                    u7575:	
  9614  0039' 1003               	clrc
  9615  003A' 0C83'              	rrf	___llmod@divisor+3,f
  9616  003B' 0C82'              	rrf	___llmod@divisor+2,f
  9617  003C' 0C81'              	rrf	___llmod@divisor+1,f
  9618  003D' 0C80'              	rrf	___llmod@divisor,f
  9619  003E' 3EFF               	addlw	-1
  9620  003F' 1D03               	skipz
  9621  0040' 2800'              	goto	u7575
  9622  0041' 3001               	movlw	1
  9623  0042' 0289'              	subwf	___llmod@counter,f
  9624  0043' 1D03               	btfss	3,2
  9625  0044' 2800'              	goto	l4628
  9626  0045'                    l4636:	
  9627  0045' 0807'              	movf	___llmod@dividend+3,w
  9628  0046' 0083'              	movwf	?___llmod+3
  9629  0047' 0806'              	movf	___llmod@dividend+2,w
  9630  0048' 0082'              	movwf	?___llmod+2
  9631  0049' 0805'              	movf	___llmod@dividend+1,w
  9632  004A' 0081'              	movwf	?___llmod+1
  9633  004B' 0804'              	movf	___llmod@dividend,w
  9634  004C' 0080'              	movwf	?___llmod
  9635  004D' 0008               	return
  9636  004E'                    __end_of___llmod:	
  9637                           
  9638                           	psect	text30
  9639  0000'                    __ptext30:	
  9640 ;; *************** function ___lldiv *****************
  9641 ;; Defined at:
  9642 ;;		line 6 in file "D:\mplab\sources\common\lldiv.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  divisor         4   10[BANK0 ] unsigned long 
  9645 ;;  dividend        4   14[BANK0 ] unsigned long 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  quotient        4   19[BANK0 ] unsigned long 
  9648 ;;  counter         1   23[BANK0 ] unsigned char 
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  4   10[BANK0 ] unsigned long 
  9651 ;; Registers used:
  9652 ;;		wreg, status,2, status,0
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9658 ;;      Params:         0       8       0       0       0
  9659 ;;      Locals:         0       5       0       0       0
  9660 ;;      Temps:          0       1       0       0       0
  9661 ;;      Totals:         0      14       0       0       0
  9662 ;;Total ram usage:       14 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    1
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		_convert_time_to_UTC
  9669 ;;		_sprintf
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           
  9674                           ;psect for function ___lldiv
  9675  0000'                    ___lldiv:	
  9676                           
  9677                           ;incstack = 0
  9678                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9679  0000' 3000               	movlw	0
  9680  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9681  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9682  0003' 0096'              	movwf	___lldiv@quotient+3
  9683  0004' 3000               	movlw	0
  9684  0005' 0095'              	movwf	___lldiv@quotient+2
  9685  0006' 3000               	movlw	0
  9686  0007' 0094'              	movwf	___lldiv@quotient+1
  9687  0008' 3000               	movlw	0
  9688  0009' 0093'              	movwf	___lldiv@quotient
  9689  000A' 080D'              	movf	___lldiv@divisor+3,w
  9690  000B' 040C'              	iorwf	___lldiv@divisor+2,w
  9691  000C' 040B'              	iorwf	___lldiv@divisor+1,w
  9692  000D' 040A'              	iorwf	___lldiv@divisor,w
  9693  000E' 1903               	skipnz
  9694  000F' 2800'              	goto	l4616
  9695  0010' 0197'              	clrf	___lldiv@counter
  9696  0011' 0A97'              	incf	___lldiv@counter,f
  9697  0012'                    l4602:	
  9698  0012' 1B8D'              	btfsc	___lldiv@divisor+3,7
  9699  0013' 2800'              	goto	l4604
  9700  0014' 3001               	movlw	1
  9701  0015' 0092'              	movwf	??___lldiv
  9702  0016'                    u7475:	
  9703  0016' 1003               	clrc
  9704  0017' 0D8A'              	rlf	___lldiv@divisor,f
  9705  0018' 0D8B'              	rlf	___lldiv@divisor+1,f
  9706  0019' 0D8C'              	rlf	___lldiv@divisor+2,f
  9707  001A' 0D8D'              	rlf	___lldiv@divisor+3,f
  9708  001B' 0B92'              	decfsz	??___lldiv,f
  9709  001C' 2800'              	goto	u7475
  9710  001D' 3001               	movlw	1
  9711  001E' 0092'              	movwf	??___lldiv
  9712  001F' 0812'              	movf	??___lldiv,w
  9713  0020' 0797'              	addwf	___lldiv@counter,f
  9714  0021' 2800'              	goto	l4602
  9715  0022'                    l4604:	
  9716  0022' 3001               	movlw	1
  9717  0023' 0092'              	movwf	??___lldiv
  9718  0024'                    u7495:	
  9719  0024' 1003               	clrc
  9720  0025' 0D93'              	rlf	___lldiv@quotient,f
  9721  0026' 0D94'              	rlf	___lldiv@quotient+1,f
  9722  0027' 0D95'              	rlf	___lldiv@quotient+2,f
  9723  0028' 0D96'              	rlf	___lldiv@quotient+3,f
  9724  0029' 0B92'              	decfsz	??___lldiv,f
  9725  002A' 2800'              	goto	u7495
  9726  002B' 080D'              	movf	___lldiv@divisor+3,w
  9727  002C' 0211'              	subwf	___lldiv@dividend+3,w
  9728  002D' 1D03               	skipz
  9729  002E' 2800'              	goto	u7505
  9730  002F' 080C'              	movf	___lldiv@divisor+2,w
  9731  0030' 0210'              	subwf	___lldiv@dividend+2,w
  9732  0031' 1D03               	skipz
  9733  0032' 2800'              	goto	u7505
  9734  0033' 080B'              	movf	___lldiv@divisor+1,w
  9735  0034' 020F'              	subwf	___lldiv@dividend+1,w
  9736  0035' 1D03               	skipz
  9737  0036' 2800'              	goto	u7505
  9738  0037' 080A'              	movf	___lldiv@divisor,w
  9739  0038' 020E'              	subwf	___lldiv@dividend,w
  9740  0039'                    u7505:	
  9741  0039' 1C03               	skipc
  9742  003A' 2800'              	goto	l4612
  9743  003B' 080A'              	movf	___lldiv@divisor,w
  9744  003C' 028E'              	subwf	___lldiv@dividend,f
  9745  003D' 080B'              	movf	___lldiv@divisor+1,w
  9746  003E' 1C03               	skipc
  9747  003F' 0F0B'              	incfsz	___lldiv@divisor+1,w
  9748  0040' 028F'              	subwf	___lldiv@dividend+1,f
  9749  0041' 080C'              	movf	___lldiv@divisor+2,w
  9750  0042' 1C03               	skipc
  9751  0043' 0F0C'              	incfsz	___lldiv@divisor+2,w
  9752  0044' 0290'              	subwf	___lldiv@dividend+2,f
  9753  0045' 080D'              	movf	___lldiv@divisor+3,w
  9754  0046' 1C03               	skipc
  9755  0047' 0F0D'              	incfsz	___lldiv@divisor+3,w
  9756  0048' 0291'              	subwf	___lldiv@dividend+3,f
  9757  0049' 1413'              	bsf	___lldiv@quotient,0
  9758  004A'                    l4612:	
  9759  004A' 3001               	movlw	1
  9760  004B'                    u7515:	
  9761  004B' 1003               	clrc
  9762  004C' 0C8D'              	rrf	___lldiv@divisor+3,f
  9763  004D' 0C8C'              	rrf	___lldiv@divisor+2,f
  9764  004E' 0C8B'              	rrf	___lldiv@divisor+1,f
  9765  004F' 0C8A'              	rrf	___lldiv@divisor,f
  9766  0050' 3EFF               	addlw	-1
  9767  0051' 1D03               	skipz
  9768  0052' 2800'              	goto	u7515
  9769  0053' 3001               	movlw	1
  9770  0054' 0297'              	subwf	___lldiv@counter,f
  9771  0055' 1D03               	btfss	3,2
  9772  0056' 2800'              	goto	l4604
  9773  0057'                    l4616:	
  9774  0057' 0816'              	movf	___lldiv@quotient+3,w
  9775  0058' 008D'              	movwf	?___lldiv+3
  9776  0059' 0815'              	movf	___lldiv@quotient+2,w
  9777  005A' 008C'              	movwf	?___lldiv+2
  9778  005B' 0814'              	movf	___lldiv@quotient+1,w
  9779  005C' 008B'              	movwf	?___lldiv+1
  9780  005D' 0813'              	movf	___lldiv@quotient,w
  9781  005E' 008A'              	movwf	?___lldiv
  9782  005F' 0008               	return
  9783  0060'                    __end_of___lldiv:	
  9784                           
  9785                           	psect	text31
  9786  0000'                    __ptext31:	
  9787 ;; *************** function ___fttol *****************
  9788 ;; Defined at:
  9789 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;  f1              3   52[BANK0 ] float 
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  lval            4   61[BANK0 ] unsigned long 
  9794 ;;  exp1            1   65[BANK0 ] unsigned char 
  9795 ;;  sign1           1   60[BANK0 ] unsigned char 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  4   52[BANK0 ] long 
  9798 ;; Registers used:
  9799 ;;		wreg, status,2, status,0
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9805 ;;      Params:         0       4       0       0       0
  9806 ;;      Locals:         0       6       0       0       0
  9807 ;;      Temps:          0       4       0       0       0
  9808 ;;      Totals:         0      14       0       0       0
  9809 ;;Total ram usage:       14 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    1
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_main
  9816 ;;		_convert_to_degrees
  9817 ;;		_sprintf
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           
  9822                           ;psect for function ___fttol
  9823  0000'                    ___fttol:	
  9824                           
  9825                           ;incstack = 0
  9826                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9827  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9828  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9829  0002' 0834'              	movf	___fttol@f1,w
  9830  0003' 00B8'              	movwf	??___fttol
  9831  0004' 0835'              	movf	___fttol@f1+1,w
  9832  0005' 00B9'              	movwf	??___fttol+1
  9833  0006' 0836'              	movf	___fttol@f1+2,w
  9834  0007' 00BA'              	movwf	??___fttol+2
  9835  0008' 1003               	clrc
  9836  0009' 0D39'              	rlf	??___fttol+1,w
  9837  000A' 0D3A'              	rlf	??___fttol+2,w
  9838  000B' 00BB'              	movwf	??___fttol+3
  9839  000C' 083B'              	movf	??___fttol+3,w
  9840  000D' 00C1'              	movwf	___fttol@exp1
  9841  000E' 0841'              	movf	___fttol@exp1,w
  9842  000F' 1D03               	btfss	3,2
  9843  0010' 2800'              	goto	l4560
  9844  0011' 3000               	movlw	0
  9845  0012' 00B7'              	movwf	?___fttol+3
  9846  0013' 3000               	movlw	0
  9847  0014' 00B6'              	movwf	?___fttol+2
  9848  0015' 3000               	movlw	0
  9849  0016' 00B5'              	movwf	?___fttol+1
  9850  0017' 3000               	movlw	0
  9851  0018' 00B4'              	movwf	?___fttol
  9852  0019' 0008               	return
  9853  001A'                    l4560:	
  9854  001A' 0834'              	movf	___fttol@f1,w
  9855  001B' 00B8'              	movwf	??___fttol
  9856  001C' 0835'              	movf	___fttol@f1+1,w
  9857  001D' 00B9'              	movwf	??___fttol+1
  9858  001E' 0836'              	movf	___fttol@f1+2,w
  9859  001F' 00BA'              	movwf	??___fttol+2
  9860  0020' 3017               	movlw	23
  9861  0021'                    u7375:	
  9862  0021' 1003               	clrc
  9863  0022' 0CBA'              	rrf	??___fttol+2,f
  9864  0023' 0CB9'              	rrf	??___fttol+1,f
  9865  0024' 0CB8'              	rrf	??___fttol,f
  9866  0025' 3EFF               	addlw	-1
  9867  0026' 1D03               	skipz
  9868  0027' 2800'              	goto	u7375
  9869  0028' 0838'              	movf	??___fttol,w
  9870  0029' 00BB'              	movwf	??___fttol+3
  9871  002A' 083B'              	movf	??___fttol+3,w
  9872  002B' 00BC'              	movwf	___fttol@sign1
  9873  002C' 17B5'              	bsf	___fttol@f1+1,7
  9874  002D' 30FF               	movlw	255
  9875  002E' 05B4'              	andwf	___fttol@f1,f
  9876  002F' 30FF               	movlw	255
  9877  0030' 05B5'              	andwf	___fttol@f1+1,f
  9878  0031' 3000               	movlw	0
  9879  0032' 05B6'              	andwf	___fttol@f1+2,f
  9880  0033' 0834'              	movf	___fttol@f1,w
  9881  0034' 00BD'              	movwf	___fttol@lval
  9882  0035' 0835'              	movf	___fttol@f1+1,w
  9883  0036' 00BE'              	movwf	___fttol@lval+1
  9884  0037' 0836'              	movf	___fttol@f1+2,w
  9885  0038' 00BF'              	movwf	___fttol@lval+2
  9886  0039' 01C0'              	clrf	___fttol@lval+3
  9887  003A' 308E               	movlw	142
  9888  003B' 02C1'              	subwf	___fttol@exp1,f
  9889  003C' 1FC1'              	btfss	___fttol@exp1,7
  9890  003D' 2800'              	goto	l4580
  9891  003E' 0841'              	movf	___fttol@exp1,w
  9892  003F' 3A80               	xorlw	128
  9893  0040' 3E8F               	addlw	143
  9894  0041' 1803               	skipnc
  9895  0042' 2800'              	goto	l4578
  9896  0043' 3000               	movlw	0
  9897  0044' 00B7'              	movwf	?___fttol+3
  9898  0045' 3000               	movlw	0
  9899  0046' 00B6'              	movwf	?___fttol+2
  9900  0047' 3000               	movlw	0
  9901  0048' 00B5'              	movwf	?___fttol+1
  9902  0049' 3000               	movlw	0
  9903  004A' 00B4'              	movwf	?___fttol
  9904  004B' 0008               	return
  9905  004C'                    l4578:	
  9906  004C' 3001               	movlw	1
  9907  004D'                    u7405:	
  9908  004D' 1003               	clrc
  9909  004E' 0CC0'              	rrf	___fttol@lval+3,f
  9910  004F' 0CBF'              	rrf	___fttol@lval+2,f
  9911  0050' 0CBE'              	rrf	___fttol@lval+1,f
  9912  0051' 0CBD'              	rrf	___fttol@lval,f
  9913  0052' 3EFF               	addlw	-1
  9914  0053' 1D03               	skipz
  9915  0054' 2800'              	goto	u7405
  9916  0055' 3001               	movlw	1
  9917  0056' 00B8'              	movwf	??___fttol
  9918  0057' 0838'              	movf	??___fttol,w
  9919  0058' 07C1'              	addwf	___fttol@exp1,f
  9920  0059' 1903               	btfsc	3,2
  9921  005A' 2800'              	goto	l4588
  9922  005B' 2800'              	goto	l4578
  9923  005C'                    l4580:	
  9924  005C' 3018               	movlw	24
  9925  005D' 0241'              	subwf	___fttol@exp1,w
  9926  005E' 1C03               	skipc
  9927  005F' 2800'              	goto	l775
  9928  0060' 3000               	movlw	0
  9929  0061' 00B7'              	movwf	?___fttol+3
  9930  0062' 3000               	movlw	0
  9931  0063' 00B6'              	movwf	?___fttol+2
  9932  0064' 3000               	movlw	0
  9933  0065' 00B5'              	movwf	?___fttol+1
  9934  0066' 3000               	movlw	0
  9935  0067' 00B4'              	movwf	?___fttol
  9936  0068' 0008               	return
  9937  0069'                    l4586:	
  9938  0069' 3001               	movlw	1
  9939  006A' 00B8'              	movwf	??___fttol
  9940  006B'                    u7435:	
  9941  006B' 1003               	clrc
  9942  006C' 0DBD'              	rlf	___fttol@lval,f
  9943  006D' 0DBE'              	rlf	___fttol@lval+1,f
  9944  006E' 0DBF'              	rlf	___fttol@lval+2,f
  9945  006F' 0DC0'              	rlf	___fttol@lval+3,f
  9946  0070' 0BB8'              	decfsz	??___fttol,f
  9947  0071' 2800'              	goto	u7435
  9948  0072' 3001               	movlw	1
  9949  0073' 02C1'              	subwf	___fttol@exp1,f
  9950  0074'                    l775:	
  9951  0074' 0841'              	movf	___fttol@exp1,w
  9952  0075' 1D03               	btfss	3,2
  9953  0076' 2800'              	goto	l4586
  9954  0077'                    l4588:	
  9955  0077' 083C'              	movf	___fttol@sign1,w
  9956  0078' 1903               	btfsc	3,2
  9957  0079' 2800'              	goto	l4592
  9958  007A' 09BD'              	comf	___fttol@lval,f
  9959  007B' 09BE'              	comf	___fttol@lval+1,f
  9960  007C' 09BF'              	comf	___fttol@lval+2,f
  9961  007D' 09C0'              	comf	___fttol@lval+3,f
  9962  007E' 0ABD'              	incf	___fttol@lval,f
  9963  007F' 1903               	skipnz
  9964  0080' 0ABE'              	incf	___fttol@lval+1,f
  9965  0081' 1903               	skipnz
  9966  0082' 0ABF'              	incf	___fttol@lval+2,f
  9967  0083' 1903               	skipnz
  9968  0084' 0AC0'              	incf	___fttol@lval+3,f
  9969  0085'                    l4592:	
  9970  0085' 0840'              	movf	___fttol@lval+3,w
  9971  0086' 00B7'              	movwf	?___fttol+3
  9972  0087' 083F'              	movf	___fttol@lval+2,w
  9973  0088' 00B6'              	movwf	?___fttol+2
  9974  0089' 083E'              	movf	___fttol@lval+1,w
  9975  008A' 00B5'              	movwf	?___fttol+1
  9976  008B' 083D'              	movf	___fttol@lval,w
  9977  008C' 00B4'              	movwf	?___fttol
  9978  008D' 0008               	return
  9979  008E'                    __end_of___fttol:	
  9980                           
  9981                           	psect	text32
  9982  0000'                    __ptext32:	
  9983 ;; *************** function ___ftsub *****************
  9984 ;; Defined at:
  9985 ;;		line 18 in file "D:\mplab\sources\common\ftsub.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  f2              3   65[BANK0 ] float 
  9988 ;;  f1              3   68[BANK0 ] float 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  3   65[BANK0 ] float 
  9993 ;; Registers used:
  9994 ;;		wreg, status,2, status,0, pclath, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10000 ;;      Params:         0       6       0       0       0
 10001 ;;      Locals:         0       0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0
 10003 ;;      Totals:         0       6       0       0       0
 10004 ;;Total ram usage:        6 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:    3
 10007 ;; This function calls:
 10008 ;;		___ftadd
 10009 ;; This function is called by:
 10010 ;;		_sprintf
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           
 10015                           ;psect for function ___ftsub
 10016  0000'                    ___ftsub:	
 10017                           
 10018                           ;incstack = 0
 10019                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 10020  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10021  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10022  0002' 0843'              	movf	___ftsub@f2+2,w
 10023  0003' 0442'              	iorwf	___ftsub@f2+1,w
 10024  0004' 0441'              	iorwf	___ftsub@f2,w
 10025  0005' 1903               	skipnz
 10026  0006' 2800'              	goto	l4550
 10027  0007' 3080               	movlw	128
 10028  0008' 06C3'              	xorwf	___ftsub@f2+2,f
 10029  0009'                    l4550:	
 10030  0009' 0844'              	movf	___ftsub@f1,w
 10031  000A' 00B4'              	movwf	___ftadd@f1
 10032  000B' 0845'              	movf	___ftsub@f1+1,w
 10033  000C' 00B5'              	movwf	___ftadd@f1+1
 10034  000D' 0846'              	movf	___ftsub@f1+2,w
 10035  000E' 00B6'              	movwf	___ftadd@f1+2
 10036  000F' 0841'              	movf	___ftsub@f2,w
 10037  0010' 00B7'              	movwf	___ftadd@f2
 10038  0011' 0842'              	movf	___ftsub@f2+1,w
 10039  0012' 00B8'              	movwf	___ftadd@f2+1
 10040  0013' 0843'              	movf	___ftsub@f2+2,w
 10041  0014' 00B9'              	movwf	___ftadd@f2+2
 10042  0015' 120A' 118A' 2000'  	fcall	___ftadd
 10043  0018' 1283               	bcf	3,5	;RP0=0, select bank0
 10044  0019' 1303               	bcf	3,6	;RP1=0, select bank0
 10045  001A' 0834'              	movf	?___ftadd,w
 10046  001B' 00C1'              	movwf	?___ftsub
 10047  001C' 0835'              	movf	?___ftadd+1,w
 10048  001D' 00C2'              	movwf	?___ftsub+1
 10049  001E' 0836'              	movf	?___ftadd+2,w
 10050  001F' 00C3'              	movwf	?___ftsub+2
 10051  0020' 0008               	return
 10052  0021'                    __end_of___ftsub:	
 10053                           
 10054                           	psect	text33
 10055  0000'                    __ptext33:	
 10056 ;; *************** function ___ftadd *****************
 10057 ;; Defined at:
 10058 ;;		line 86 in file "D:\mplab\sources\common\ftadd.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  f1              3   52[BANK0 ] float 
 10061 ;;  f2              3   55[BANK0 ] float 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  exp1            1   64[BANK0 ] unsigned char 
 10064 ;;  exp2            1   63[BANK0 ] unsigned char 
 10065 ;;  sign            1   62[BANK0 ] unsigned char 
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  3   52[BANK0 ] float 
 10068 ;; Registers used:
 10069 ;;		wreg, status,2, status,0, pclath, cstack
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10075 ;;      Params:         0       6       0       0       0
 10076 ;;      Locals:         0       3       0       0       0
 10077 ;;      Temps:          0       4       0       0       0
 10078 ;;      Totals:         0      13       0       0       0
 10079 ;;Total ram usage:       13 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:    2
 10082 ;; This function calls:
 10083 ;;		___ftpack
 10084 ;; This function is called by:
 10085 ;;		_convert_to_degrees
 10086 ;;		_sprintf
 10087 ;;		___ftsub
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function ___ftadd
 10093  0000'                    ___ftadd:	
 10094                           
 10095                           ;incstack = 0
 10096                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10097  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10098  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10099  0002' 0834'              	movf	___ftadd@f1,w
 10100  0003' 00BA'              	movwf	??___ftadd
 10101  0004' 0835'              	movf	___ftadd@f1+1,w
 10102  0005' 00BB'              	movwf	??___ftadd+1
 10103  0006' 0836'              	movf	___ftadd@f1+2,w
 10104  0007' 00BC'              	movwf	??___ftadd+2
 10105  0008' 1003               	clrc
 10106  0009' 0D3B'              	rlf	??___ftadd+1,w
 10107  000A' 0D3C'              	rlf	??___ftadd+2,w
 10108  000B' 00BD'              	movwf	??___ftadd+3
 10109  000C' 083D'              	movf	??___ftadd+3,w
 10110  000D' 00C0'              	movwf	___ftadd@exp1
 10111  000E' 0837'              	movf	___ftadd@f2,w
 10112  000F' 00BA'              	movwf	??___ftadd
 10113  0010' 0838'              	movf	___ftadd@f2+1,w
 10114  0011' 00BB'              	movwf	??___ftadd+1
 10115  0012' 0839'              	movf	___ftadd@f2+2,w
 10116  0013' 00BC'              	movwf	??___ftadd+2
 10117  0014' 1003               	clrc
 10118  0015' 0D3B'              	rlf	??___ftadd+1,w
 10119  0016' 0D3C'              	rlf	??___ftadd+2,w
 10120  0017' 00BD'              	movwf	??___ftadd+3
 10121  0018' 083D'              	movf	??___ftadd+3,w
 10122  0019' 00BF'              	movwf	___ftadd@exp2
 10123  001A' 0840'              	movf	___ftadd@exp1,w
 10124  001B' 1903               	btfsc	3,2
 10125  001C' 2800'              	goto	l3988
 10126  001D' 083F'              	movf	___ftadd@exp2,w
 10127  001E' 0240'              	subwf	___ftadd@exp1,w
 10128  001F' 1803               	skipnc
 10129  0020' 2800'              	goto	l3992
 10130  0021' 0340'              	decf	___ftadd@exp1,w
 10131  0022' 3AFF               	xorlw	255
 10132  0023' 073F'              	addwf	___ftadd@exp2,w
 10133  0024' 00BA'              	movwf	??___ftadd
 10134  0025' 3019               	movlw	25
 10135  0026' 023A'              	subwf	??___ftadd,w
 10136  0027' 1C03               	skipc
 10137  0028' 2800'              	goto	l3992
 10138  0029'                    l3988:	
 10139  0029' 0837'              	movf	___ftadd@f2,w
 10140  002A' 00B4'              	movwf	?___ftadd
 10141  002B' 0838'              	movf	___ftadd@f2+1,w
 10142  002C' 00B5'              	movwf	?___ftadd+1
 10143  002D' 0839'              	movf	___ftadd@f2+2,w
 10144  002E' 00B6'              	movwf	?___ftadd+2
 10145  002F' 0008               	return
 10146  0030'                    l3992:	
 10147  0030' 083F'              	movf	___ftadd@exp2,w
 10148  0031' 1903               	btfsc	3,2
 10149  0032' 0008               	return
 10150  0033' 0840'              	movf	___ftadd@exp1,w
 10151  0034' 023F'              	subwf	___ftadd@exp2,w
 10152  0035' 1803               	skipnc
 10153  0036' 2800'              	goto	l3998
 10154  0037' 033F'              	decf	___ftadd@exp2,w
 10155  0038' 3AFF               	xorlw	255
 10156  0039' 0740'              	addwf	___ftadd@exp1,w
 10157  003A' 00BA'              	movwf	??___ftadd
 10158  003B' 3019               	movlw	25
 10159  003C' 023A'              	subwf	??___ftadd,w
 10160  003D' 1803               	btfsc	3,0
 10161  003E' 0008               	return
 10162  003F'                    l3998:	
 10163  003F' 3006               	movlw	6
 10164  0040' 00BA'              	movwf	??___ftadd
 10165  0041' 083A'              	movf	??___ftadd,w
 10166  0042' 00BE'              	movwf	___ftadd@sign
 10167  0043' 1BB6'              	btfsc	___ftadd@f1+2,7
 10168  0044' 17BE'              	bsf	___ftadd@sign,7
 10169  0045' 1BB9'              	btfsc	___ftadd@f2+2,7
 10170  0046' 173E'              	bsf	___ftadd@sign,6
 10171  0047' 17B5'              	bsf	___ftadd@f1+1,7
 10172  0048' 30FF               	movlw	255
 10173  0049' 05B4'              	andwf	___ftadd@f1,f
 10174  004A' 30FF               	movlw	255
 10175  004B' 05B5'              	andwf	___ftadd@f1+1,f
 10176  004C' 3000               	movlw	0
 10177  004D' 05B6'              	andwf	___ftadd@f1+2,f
 10178  004E' 17B8'              	bsf	___ftadd@f2+1,7
 10179  004F' 30FF               	movlw	255
 10180  0050' 05B7'              	andwf	___ftadd@f2,f
 10181  0051' 30FF               	movlw	255
 10182  0052' 05B8'              	andwf	___ftadd@f2+1,f
 10183  0053' 3000               	movlw	0
 10184  0054' 05B9'              	andwf	___ftadd@f2+2,f
 10185  0055' 083F'              	movf	___ftadd@exp2,w
 10186  0056' 0240'              	subwf	___ftadd@exp1,w
 10187  0057' 1803               	skipnc
 10188  0058' 2800'              	goto	l4020
 10189  0059'                    l4010:	
 10190  0059' 3001               	movlw	1
 10191  005A'                    u6225:	
 10192  005A' 1003               	clrc
 10193  005B' 0DB7'              	rlf	___ftadd@f2,f
 10194  005C' 0DB8'              	rlf	___ftadd@f2+1,f
 10195  005D' 0DB9'              	rlf	___ftadd@f2+2,f
 10196  005E' 3EFF               	addlw	-1
 10197  005F' 1D03               	skipz
 10198  0060' 2800'              	goto	u6225
 10199  0061' 3001               	movlw	1
 10200  0062' 02BF'              	subwf	___ftadd@exp2,f
 10201  0063' 083F'              	movf	___ftadd@exp2,w
 10202  0064' 0640'              	xorwf	___ftadd@exp1,w
 10203  0065' 1903               	skipnz
 10204  0066' 2800'              	goto	l4018
 10205  0067' 3001               	movlw	1
 10206  0068' 02BE'              	subwf	___ftadd@sign,f
 10207  0069' 083E'              	movf	___ftadd@sign,w
 10208  006A' 3907               	andlw	7
 10209  006B' 1903               	btfsc	3,2
 10210  006C' 2800'              	goto	l4018
 10211  006D' 2800'              	goto	l4010
 10212  006E'                    l4016:	
 10213  006E' 3001               	movlw	1
 10214  006F'                    u6255:	
 10215  006F' 1003               	clrc
 10216  0070' 0CB6'              	rrf	___ftadd@f1+2,f
 10217  0071' 0CB5'              	rrf	___ftadd@f1+1,f
 10218  0072' 0CB4'              	rrf	___ftadd@f1,f
 10219  0073' 3EFF               	addlw	-1
 10220  0074' 1D03               	skipz
 10221  0075' 2800'              	goto	u6255
 10222  0076' 3001               	movlw	1
 10223  0077' 00BA'              	movwf	??___ftadd
 10224  0078' 083A'              	movf	??___ftadd,w
 10225  0079' 07C0'              	addwf	___ftadd@exp1,f
 10226  007A'                    l4018:	
 10227  007A' 0840'              	movf	___ftadd@exp1,w
 10228  007B' 063F'              	xorwf	___ftadd@exp2,w
 10229  007C' 1903               	btfsc	3,2
 10230  007D' 2800'              	goto	l698
 10231  007E' 2800'              	goto	l4016
 10232  007F'                    l4020:	
 10233  007F' 0840'              	movf	___ftadd@exp1,w
 10234  0080' 023F'              	subwf	___ftadd@exp2,w
 10235  0081' 1803               	skipnc
 10236  0082' 2800'              	goto	l698
 10237  0083'                    l4022:	
 10238  0083' 3001               	movlw	1
 10239  0084'                    u6285:	
 10240  0084' 1003               	clrc
 10241  0085' 0DB4'              	rlf	___ftadd@f1,f
 10242  0086' 0DB5'              	rlf	___ftadd@f1+1,f
 10243  0087' 0DB6'              	rlf	___ftadd@f1+2,f
 10244  0088' 3EFF               	addlw	-1
 10245  0089' 1D03               	skipz
 10246  008A' 2800'              	goto	u6285
 10247  008B' 3001               	movlw	1
 10248  008C' 02C0'              	subwf	___ftadd@exp1,f
 10249  008D' 083F'              	movf	___ftadd@exp2,w
 10250  008E' 0640'              	xorwf	___ftadd@exp1,w
 10251  008F' 1903               	skipnz
 10252  0090' 2800'              	goto	l4030
 10253  0091' 3001               	movlw	1
 10254  0092' 02BE'              	subwf	___ftadd@sign,f
 10255  0093' 083E'              	movf	___ftadd@sign,w
 10256  0094' 3907               	andlw	7
 10257  0095' 1903               	btfsc	3,2
 10258  0096' 2800'              	goto	l4030
 10259  0097' 2800'              	goto	l4022
 10260  0098'                    l4028:	
 10261  0098' 3001               	movlw	1
 10262  0099'                    u6315:	
 10263  0099' 1003               	clrc
 10264  009A' 0CB9'              	rrf	___ftadd@f2+2,f
 10265  009B' 0CB8'              	rrf	___ftadd@f2+1,f
 10266  009C' 0CB7'              	rrf	___ftadd@f2,f
 10267  009D' 3EFF               	addlw	-1
 10268  009E' 1D03               	skipz
 10269  009F' 2800'              	goto	u6315
 10270  00A0' 3001               	movlw	1
 10271  00A1' 00BA'              	movwf	??___ftadd
 10272  00A2' 083A'              	movf	??___ftadd,w
 10273  00A3' 07BF'              	addwf	___ftadd@exp2,f
 10274  00A4'                    l4030:	
 10275  00A4' 0840'              	movf	___ftadd@exp1,w
 10276  00A5' 063F'              	xorwf	___ftadd@exp2,w
 10277  00A6' 1D03               	skipz
 10278  00A7' 2800'              	goto	l4028
 10279  00A8'                    l698:	
 10280  00A8' 1FBE'              	btfss	___ftadd@sign,7
 10281  00A9' 2800'              	goto	l4034
 10282  00AA' 30FF               	movlw	255
 10283  00AB' 06B4'              	xorwf	___ftadd@f1,f
 10284  00AC' 30FF               	movlw	255
 10285  00AD' 06B5'              	xorwf	___ftadd@f1+1,f
 10286  00AE' 30FF               	movlw	255
 10287  00AF' 06B6'              	xorwf	___ftadd@f1+2,f
 10288  00B0' 3001               	movlw	1
 10289  00B1' 07B4'              	addwf	___ftadd@f1,f
 10290  00B2' 3000               	movlw	0
 10291  00B3' 1803               	skipnc
 10292  00B4' 3001               	movlw	1
 10293  00B5' 07B5'              	addwf	___ftadd@f1+1,f
 10294  00B6' 3000               	movlw	0
 10295  00B7' 1803               	skipnc
 10296  00B8' 3001               	movlw	1
 10297  00B9' 07B6'              	addwf	___ftadd@f1+2,f
 10298  00BA'                    l4034:	
 10299  00BA' 1F3E'              	btfss	___ftadd@sign,6
 10300  00BB' 2800'              	goto	l4038
 10301  00BC' 30FF               	movlw	255
 10302  00BD' 06B7'              	xorwf	___ftadd@f2,f
 10303  00BE' 30FF               	movlw	255
 10304  00BF' 06B8'              	xorwf	___ftadd@f2+1,f
 10305  00C0' 30FF               	movlw	255
 10306  00C1' 06B9'              	xorwf	___ftadd@f2+2,f
 10307  00C2' 3001               	movlw	1
 10308  00C3' 07B7'              	addwf	___ftadd@f2,f
 10309  00C4' 3000               	movlw	0
 10310  00C5' 1803               	skipnc
 10311  00C6' 3001               	movlw	1
 10312  00C7' 07B8'              	addwf	___ftadd@f2+1,f
 10313  00C8' 3000               	movlw	0
 10314  00C9' 1803               	skipnc
 10315  00CA' 3001               	movlw	1
 10316  00CB' 07B9'              	addwf	___ftadd@f2+2,f
 10317  00CC'                    l4038:	
 10318  00CC' 01BE'              	clrf	___ftadd@sign
 10319  00CD' 0834'              	movf	___ftadd@f1,w
 10320  00CE' 07B7'              	addwf	___ftadd@f2,f
 10321  00CF' 0835'              	movf	___ftadd@f1+1,w
 10322  00D0' 1103               	clrz
 10323  00D1' 1803               	skipnc
 10324  00D2' 0A35'              	incf	___ftadd@f1+1,w
 10325  00D3' 1D03               	btfss	3,2
 10326  00D4' 07B8'              	addwf	___ftadd@f2+1,f
 10327  00D5' 0836'              	movf	___ftadd@f1+2,w
 10328  00D6' 1103               	clrz
 10329  00D7' 1803               	skipnc
 10330  00D8' 0A36'              	incf	___ftadd@f1+2,w
 10331  00D9' 1D03               	btfss	3,2
 10332  00DA' 07B9'              	addwf	___ftadd@f2+2,f
 10333  00DB' 1FB9'              	btfss	___ftadd@f2+2,7
 10334  00DC' 2800'              	goto	l4048
 10335  00DD' 30FF               	movlw	255
 10336  00DE' 06B7'              	xorwf	___ftadd@f2,f
 10337  00DF' 30FF               	movlw	255
 10338  00E0' 06B8'              	xorwf	___ftadd@f2+1,f
 10339  00E1' 30FF               	movlw	255
 10340  00E2' 06B9'              	xorwf	___ftadd@f2+2,f
 10341  00E3' 3001               	movlw	1
 10342  00E4' 07B7'              	addwf	___ftadd@f2,f
 10343  00E5' 3000               	movlw	0
 10344  00E6' 1803               	skipnc
 10345  00E7' 3001               	movlw	1
 10346  00E8' 07B8'              	addwf	___ftadd@f2+1,f
 10347  00E9' 3000               	movlw	0
 10348  00EA' 1803               	skipnc
 10349  00EB' 3001               	movlw	1
 10350  00EC' 07B9'              	addwf	___ftadd@f2+2,f
 10351  00ED' 01BE'              	clrf	___ftadd@sign
 10352  00EE' 0ABE'              	incf	___ftadd@sign,f
 10353  00EF'                    l4048:	
 10354  00EF' 0837'              	movf	___ftadd@f2,w
 10355  00F0' 0080'              	movwf	___ftpack@arg
 10356  00F1' 0838'              	movf	___ftadd@f2+1,w
 10357  00F2' 0081'              	movwf	___ftpack@arg+1
 10358  00F3' 0839'              	movf	___ftadd@f2+2,w
 10359  00F4' 0082'              	movwf	___ftpack@arg+2
 10360  00F5' 0840'              	movf	___ftadd@exp1,w
 10361  00F6' 00BA'              	movwf	??___ftadd
 10362  00F7' 083A'              	movf	??___ftadd,w
 10363  00F8' 0083'              	movwf	___ftpack@exp
 10364  00F9' 083E'              	movf	___ftadd@sign,w
 10365  00FA' 00BB'              	movwf	??___ftadd+1
 10366  00FB' 083B'              	movf	??___ftadd+1,w
 10367  00FC' 0084'              	movwf	___ftpack@sign
 10368  00FD' 120A' 118A' 2000'  	fcall	___ftpack
 10369  0100' 1283               	bcf	3,5	;RP0=0, select bank0
 10370  0101' 1303               	bcf	3,6	;RP1=0, select bank0
 10371  0102' 0800'              	movf	?___ftpack,w
 10372  0103' 00B4'              	movwf	?___ftadd
 10373  0104' 0801'              	movf	?___ftpack+1,w
 10374  0105' 00B5'              	movwf	?___ftadd+1
 10375  0106' 0802'              	movf	?___ftpack+2,w
 10376  0107' 00B6'              	movwf	?___ftadd+2
 10377  0108' 0008               	return
 10378  0109'                    __end_of___ftadd:	
 10379                           
 10380                           	psect	text34
 10381  0000'                    __ptext34:	
 10382 ;; *************** function ___ftpack *****************
 10383 ;; Defined at:
 10384 ;;		line 62 in file "D:\mplab\sources\common\float.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  arg             3    0[BANK0 ] unsigned um
 10387 ;;  exp             1    3[BANK0 ] unsigned char 
 10388 ;;  sign            1    4[BANK0 ] unsigned char 
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;		None
 10391 ;; Return value:  Size  Location     Type
 10392 ;;                  3    0[BANK0 ] float 
 10393 ;; Registers used:
 10394 ;;		wreg, status,2, status,0
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10400 ;;      Params:         0       5       0       0       0
 10401 ;;      Locals:         0       0       0       0       0
 10402 ;;      Temps:          0       3       0       0       0
 10403 ;;      Totals:         0       8       0       0       0
 10404 ;;Total ram usage:        8 bytes
 10405 ;; Hardware stack levels used:    1
 10406 ;; Hardware stack levels required when called:    1
 10407 ;; This function calls:
 10408 ;;		Nothing
 10409 ;; This function is called by:
 10410 ;;		___altoft
 10411 ;;		___awtoft
 10412 ;;		___ftadd
 10413 ;;		___ftdiv
 10414 ;;		___ftmul
 10415 ;;		___lltoft
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           
 10420                           ;psect for function ___ftpack
 10421  0000'                    ___ftpack:	
 10422                           
 10423                           ;incstack = 0
 10424                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10425  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10426  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10427  0002' 0803'              	movf	___ftpack@exp,w
 10428  0003' 1903               	btfsc	3,2
 10429  0004' 2800'              	goto	l3802
 10430  0005' 0802'              	movf	___ftpack@arg+2,w
 10431  0006' 0401'              	iorwf	___ftpack@arg+1,w
 10432  0007' 0400'              	iorwf	___ftpack@arg,w
 10433  0008' 1D03               	skipz
 10434  0009' 2800'              	goto	l3808
 10435  000A'                    l3802:	
 10436  000A' 3000               	movlw	0
 10437  000B' 0080'              	movwf	?___ftpack
 10438  000C' 3000               	movlw	0
 10439  000D' 0081'              	movwf	?___ftpack+1
 10440  000E' 3000               	movlw	0
 10441  000F' 0082'              	movwf	?___ftpack+2
 10442  0010' 0008               	return
 10443  0011'                    l3806:	
 10444  0011' 3001               	movlw	1
 10445  0012' 0085'              	movwf	??___ftpack
 10446  0013' 0805'              	movf	??___ftpack,w
 10447  0014' 0783'              	addwf	___ftpack@exp,f
 10448  0015' 3001               	movlw	1
 10449  0016'                    u5695:	
 10450  0016' 1003               	clrc
 10451  0017' 0C82'              	rrf	___ftpack@arg+2,f
 10452  0018' 0C81'              	rrf	___ftpack@arg+1,f
 10453  0019' 0C80'              	rrf	___ftpack@arg,f
 10454  001A' 3EFF               	addlw	-1
 10455  001B' 1D03               	skipz
 10456  001C' 2800'              	goto	u5695
 10457  001D'                    l3808:	
 10458  001D' 30FE               	movlw	254
 10459  001E' 0502'              	andwf	___ftpack@arg+2,w
 10460  001F' 1903               	btfsc	3,2
 10461  0020' 2800'              	goto	l667
 10462  0021' 2800'              	goto	l3806
 10463  0022'                    l3810:	
 10464  0022' 3001               	movlw	1
 10465  0023' 0085'              	movwf	??___ftpack
 10466  0024' 0805'              	movf	??___ftpack,w
 10467  0025' 0783'              	addwf	___ftpack@exp,f
 10468  0026' 3001               	movlw	1
 10469  0027' 0780'              	addwf	___ftpack@arg,f
 10470  0028' 3000               	movlw	0
 10471  0029' 1803               	skipnc
 10472  002A' 3001               	movlw	1
 10473  002B' 0781'              	addwf	___ftpack@arg+1,f
 10474  002C' 3000               	movlw	0
 10475  002D' 1803               	skipnc
 10476  002E' 3001               	movlw	1
 10477  002F' 0782'              	addwf	___ftpack@arg+2,f
 10478  0030' 3001               	movlw	1
 10479  0031'                    u5715:	
 10480  0031' 1003               	clrc
 10481  0032' 0C82'              	rrf	___ftpack@arg+2,f
 10482  0033' 0C81'              	rrf	___ftpack@arg+1,f
 10483  0034' 0C80'              	rrf	___ftpack@arg,f
 10484  0035' 3EFF               	addlw	-1
 10485  0036' 1D03               	skipz
 10486  0037' 2800'              	goto	u5715
 10487  0038'                    l667:	
 10488  0038' 30FF               	movlw	255
 10489  0039' 0502'              	andwf	___ftpack@arg+2,w
 10490  003A' 1903               	btfsc	3,2
 10491  003B' 2800'              	goto	l3818
 10492  003C' 2800'              	goto	l3810
 10493  003D'                    l3816:	
 10494  003D' 3001               	movlw	1
 10495  003E' 0283'              	subwf	___ftpack@exp,f
 10496  003F' 3001               	movlw	1
 10497  0040'                    u5735:	
 10498  0040' 1003               	clrc
 10499  0041' 0D80'              	rlf	___ftpack@arg,f
 10500  0042' 0D81'              	rlf	___ftpack@arg+1,f
 10501  0043' 0D82'              	rlf	___ftpack@arg+2,f
 10502  0044' 3EFF               	addlw	-1
 10503  0045' 1D03               	skipz
 10504  0046' 2800'              	goto	u5735
 10505  0047'                    l3818:	
 10506  0047' 1B81'              	btfsc	___ftpack@arg+1,7
 10507  0048' 2800'              	goto	l674
 10508  0049' 3002               	movlw	2
 10509  004A' 0203'              	subwf	___ftpack@exp,w
 10510  004B' 1803               	skipnc
 10511  004C' 2800'              	goto	l3816
 10512  004D'                    l674:	
 10513  004D' 1803'              	btfsc	___ftpack@exp,0
 10514  004E' 2800'              	goto	l675
 10515  004F' 30FF               	movlw	255
 10516  0050' 0580'              	andwf	___ftpack@arg,f
 10517  0051' 307F               	movlw	127
 10518  0052' 0581'              	andwf	___ftpack@arg+1,f
 10519  0053' 30FF               	movlw	255
 10520  0054' 0582'              	andwf	___ftpack@arg+2,f
 10521  0055'                    l675:	
 10522  0055' 1003               	clrc
 10523  0056' 0C83'              	rrf	___ftpack@exp,f
 10524  0057' 0803'              	movf	___ftpack@exp,w
 10525  0058' 0085'              	movwf	??___ftpack
 10526  0059' 0186'              	clrf	??___ftpack+1
 10527  005A' 0187'              	clrf	??___ftpack+2
 10528  005B' 3010               	movlw	16
 10529  005C'                    u5775:	
 10530  005C' 1003               	clrc
 10531  005D' 0D85'              	rlf	??___ftpack,f
 10532  005E' 0D86'              	rlf	??___ftpack+1,f
 10533  005F' 0D87'              	rlf	??___ftpack+2,f
 10534  0060' 3EFF               	addlw	-1
 10535  0061' 1D03               	skipz
 10536  0062' 2800'              	goto	u5775
 10537  0063' 0805'              	movf	??___ftpack,w
 10538  0064' 0480'              	iorwf	___ftpack@arg,f
 10539  0065' 0806'              	movf	??___ftpack+1,w
 10540  0066' 0481'              	iorwf	___ftpack@arg+1,f
 10541  0067' 0807'              	movf	??___ftpack+2,w
 10542  0068' 0482'              	iorwf	___ftpack@arg+2,f
 10543  0069' 0804'              	movf	___ftpack@sign,w
 10544  006A' 1903               	btfsc	3,2
 10545  006B' 0008               	return
 10546  006C' 1782'              	bsf	___ftpack@arg+2,7
 10547  006D' 0008               	return
 10548  006E'                    __end_of___ftpack:	
 10549                           
 10550                           	psect	text35
 10551  0000'                    __ptext35:	
 10552 ;; *************** function ___ftneg *****************
 10553 ;; Defined at:
 10554 ;;		line 15 in file "D:\mplab\sources\common\ftneg.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;  f1              3   36[BANK0 ] float 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;		None
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  3   36[BANK0 ] float 
 10561 ;; Registers used:
 10562 ;;		wreg
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10568 ;;      Params:         0       3       0       0       0
 10569 ;;      Locals:         0       0       0       0       0
 10570 ;;      Temps:          0       0       0       0       0
 10571 ;;      Totals:         0       3       0       0       0
 10572 ;;Total ram usage:        3 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:    1
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_convert_to_degrees
 10579 ;;		_sprintf
 10580 ;;		_strtod
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           
 10585                           ;psect for function ___ftneg
 10586  0000'                    ___ftneg:	
 10587                           
 10588                           ;incstack = 0
 10589                           ; Regs used in ___ftneg: [wreg]
 10590  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10591  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10592  0002' 0826'              	movf	___ftneg@f1+2,w
 10593  0003' 0425'              	iorwf	___ftneg@f1+1,w
 10594  0004' 0424'              	iorwf	___ftneg@f1,w
 10595  0005' 1903               	skipnz
 10596  0006' 0008               	return
 10597  0007' 3080               	movlw	128
 10598  0008' 06A6'              	xorwf	___ftneg@f1+2,f
 10599  0009' 0008               	return
 10600  000A'                    __end_of___ftneg:	
 10601                           
 10602                           	psect	text36
 10603  0000'                    __ptext36:	
 10604 ;; *************** function ___ftge *****************
 10605 ;; Defined at:
 10606 ;;		line 4 in file "D:\mplab\sources\common\ftge.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  ff1             3    0[BANK0 ] float 
 10609 ;;  ff2             3    3[BANK0 ] float 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;		None               void
 10614 ;; Registers used:
 10615 ;;		wreg, status,2, status,0
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10621 ;;      Params:         0       6       0       0       0
 10622 ;;      Locals:         0       0       0       0       0
 10623 ;;      Temps:          0       6       0       0       0
 10624 ;;      Totals:         0      12       0       0       0
 10625 ;;Total ram usage:       12 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:    1
 10628 ;; This function calls:
 10629 ;;		Nothing
 10630 ;; This function is called by:
 10631 ;;		_sprintf
 10632 ;;		_strtod
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           
 10637                           ;psect for function ___ftge
 10638  0000'                    ___ftge:	
 10639                           
 10640                           ;incstack = 0
 10641                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10642  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10643  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10644  0002' 1F82'              	btfss	___ftge@ff1+2,7
 10645  0003' 2800'              	goto	l4098
 10646  0004' 3000               	movlw	0
 10647  0005' 0086'              	movwf	??___ftge
 10648  0006' 3000               	movlw	0
 10649  0007' 0087'              	movwf	??___ftge+1
 10650  0008' 3080               	movlw	128
 10651  0009' 0088'              	movwf	??___ftge+2
 10652  000A' 0900'              	comf	___ftge@ff1,w
 10653  000B' 0089'              	movwf	??___ftge+3
 10654  000C' 0901'              	comf	___ftge@ff1+1,w
 10655  000D' 008A'              	movwf	??___ftge+4
 10656  000E' 0902'              	comf	___ftge@ff1+2,w
 10657  000F' 008B'              	movwf	??___ftge+5
 10658  0010' 0A89'              	incf	??___ftge+3,f
 10659  0011' 1903               	skipnz
 10660  0012' 0A8A'              	incf	??___ftge+4,f
 10661  0013' 1903               	skipnz
 10662  0014' 0A8B'              	incf	??___ftge+5,f
 10663  0015' 0809'              	movf	??___ftge+3,w
 10664  0016' 0786'              	addwf	??___ftge,f
 10665  0017' 080A'              	movf	??___ftge+4,w
 10666  0018' 1803               	skipnc
 10667  0019' 0F0A'              	incfsz	??___ftge+4,w
 10668  001A' 2800'              	goto	u6461
 10669  001B' 2800'              	goto	u6462
 10670  001C'                    u6461:	
 10671  001C' 0787'              	addwf	??___ftge+1,f
 10672  001D'                    u6462:	
 10673  001D' 080B'              	movf	??___ftge+5,w
 10674  001E' 1803               	skipnc
 10675  001F' 0F0B'              	incfsz	??___ftge+5,w
 10676  0020' 2800'              	goto	u6463
 10677  0021' 2800'              	goto	u6464
 10678  0022'                    u6463:	
 10679  0022' 0788'              	addwf	??___ftge+2,f
 10680  0023'                    u6464:	
 10681  0023' 0806'              	movf	??___ftge,w
 10682  0024' 0080'              	movwf	___ftge@ff1
 10683  0025' 0807'              	movf	??___ftge+1,w
 10684  0026' 0081'              	movwf	___ftge@ff1+1
 10685  0027' 0808'              	movf	??___ftge+2,w
 10686  0028' 0082'              	movwf	___ftge@ff1+2
 10687  0029'                    l4098:	
 10688  0029' 1F85'              	btfss	___ftge@ff2+2,7
 10689  002A' 2800'              	goto	l4102
 10690  002B' 3000               	movlw	0
 10691  002C' 0086'              	movwf	??___ftge
 10692  002D' 3000               	movlw	0
 10693  002E' 0087'              	movwf	??___ftge+1
 10694  002F' 3080               	movlw	128
 10695  0030' 0088'              	movwf	??___ftge+2
 10696  0031' 0903'              	comf	___ftge@ff2,w
 10697  0032' 0089'              	movwf	??___ftge+3
 10698  0033' 0904'              	comf	___ftge@ff2+1,w
 10699  0034' 008A'              	movwf	??___ftge+4
 10700  0035' 0905'              	comf	___ftge@ff2+2,w
 10701  0036' 008B'              	movwf	??___ftge+5
 10702  0037' 0A89'              	incf	??___ftge+3,f
 10703  0038' 1903               	skipnz
 10704  0039' 0A8A'              	incf	??___ftge+4,f
 10705  003A' 1903               	skipnz
 10706  003B' 0A8B'              	incf	??___ftge+5,f
 10707  003C' 0809'              	movf	??___ftge+3,w
 10708  003D' 0786'              	addwf	??___ftge,f
 10709  003E' 080A'              	movf	??___ftge+4,w
 10710  003F' 1803               	skipnc
 10711  0040' 0F0A'              	incfsz	??___ftge+4,w
 10712  0041' 2800'              	goto	u6481
 10713  0042' 2800'              	goto	u6482
 10714  0043'                    u6481:	
 10715  0043' 0787'              	addwf	??___ftge+1,f
 10716  0044'                    u6482:	
 10717  0044' 080B'              	movf	??___ftge+5,w
 10718  0045' 1803               	skipnc
 10719  0046' 0F0B'              	incfsz	??___ftge+5,w
 10720  0047' 2800'              	goto	u6483
 10721  0048' 2800'              	goto	u6484
 10722  0049'                    u6483:	
 10723  0049' 0788'              	addwf	??___ftge+2,f
 10724  004A'                    u6484:	
 10725  004A' 0806'              	movf	??___ftge,w
 10726  004B' 0083'              	movwf	___ftge@ff2
 10727  004C' 0807'              	movf	??___ftge+1,w
 10728  004D' 0084'              	movwf	___ftge@ff2+1
 10729  004E' 0808'              	movf	??___ftge+2,w
 10730  004F' 0085'              	movwf	___ftge@ff2+2
 10731  0050'                    l4102:	
 10732  0050' 3080               	movlw	128
 10733  0051' 0682'              	xorwf	___ftge@ff1+2,f
 10734  0052' 3080               	movlw	128
 10735  0053' 0685'              	xorwf	___ftge@ff2+2,f
 10736  0054' 0805'              	movf	___ftge@ff2+2,w
 10737  0055' 0202'              	subwf	___ftge@ff1+2,w
 10738  0056' 1D03               	skipz
 10739  0057' 0008               	return
 10740  0058' 0804'              	movf	___ftge@ff2+1,w
 10741  0059' 0201'              	subwf	___ftge@ff1+1,w
 10742  005A' 1D03               	skipz
 10743  005B' 0008               	return
 10744  005C' 0803'              	movf	___ftge@ff2,w
 10745  005D' 0200'              	subwf	___ftge@ff1,w
 10746  005E' 0008               	return
 10747  005F'                    __end_of___ftge:	
 10748                           
 10749                           	psect	text37
 10750  0000'                    __ptext37:	
 10751 ;; *************** function _USART_SendString *****************
 10752 ;; Defined at:
 10753 ;;		line 37 in file "uart.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  out             1    wreg     PTR const unsigned char 
 10756 ;;		 -> stringBT(50), 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  out             1    2[BANK0 ] PTR const unsigned char 
 10759 ;;		 -> stringBT(50), 
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  1    wreg      void 
 10762 ;; Registers used:
 10763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/0
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10769 ;;      Params:         0       0       0       0       0
 10770 ;;      Locals:         0       1       0       0       0
 10771 ;;      Temps:          0       1       0       0       0
 10772 ;;      Totals:         0       2       0       0       0
 10773 ;;Total ram usage:        2 bytes
 10774 ;; Hardware stack levels used:    1
 10775 ;; Hardware stack levels required when called:    2
 10776 ;; This function calls:
 10777 ;;		_USART_TxChar
 10778 ;; This function is called by:
 10779 ;;		_main
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           
 10784                           ;psect for function _USART_SendString
 10785  0000'                    _USART_SendString:	
 10786                           
 10787                           ;incstack = 0
 10788                           ; Regs used in _USART_SendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10789                           ;USART_SendString@out stored from wreg
 10790  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10791  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10792  0002' 0082'              	movwf	USART_SendString@out
 10793  0003'                    l4998:	
 10794                           ;uart.c: 39: while(*out!='\0')
 10795                           
 10796  0003' 0802'              	movf	USART_SendString@out,w
 10797  0004' 0084               	movwf	4
 10798  0005' 1783               	bsf	3,7	;select IRP bank2
 10799  0006' 0800               	movf	0,w
 10800  0007' 1903               	btfsc	3,2
 10801  0008' 0008               	return
 10802                           
 10803                           ;uart.c: 40: {
 10804                           ;uart.c: 41: USART_TxChar(*out);
 10805  0009' 0802'              	movf	USART_SendString@out,w
 10806  000A' 0084               	movwf	4
 10807  000B' 1783               	bsf	3,7	;select IRP bank2
 10808  000C' 0800               	movf	0,w
 10809  000D' 120A' 118A' 2000' 120A' 118A' 	fcall	_USART_TxChar
 10810                           
 10811                           ;uart.c: 42: out++;
 10812  0012' 3001               	movlw	1
 10813  0013' 1283               	bcf	3,5	;RP0=0, select bank0
 10814  0014' 1303               	bcf	3,6	;RP1=0, select bank0
 10815  0015' 0081'              	movwf	??_USART_SendString
 10816  0016' 0801'              	movf	??_USART_SendString,w
 10817  0017' 0782'              	addwf	USART_SendString@out,f
 10818  0018' 2800'              	goto	l4998
 10819  0019'                    __end_of_USART_SendString:	
 10820                           
 10821                           	psect	text38
 10822  0000'                    __ptext38:	
 10823 ;; *************** function _USART_TxChar *****************
 10824 ;; Defined at:
 10825 ;;		line 16 in file "uart.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  out             1    wreg     unsigned char 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;  out             1    0[BANK0 ] unsigned char 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10839 ;;      Params:         0       0       0       0       0
 10840 ;;      Locals:         0       1       0       0       0
 10841 ;;      Temps:          0       0       0       0       0
 10842 ;;      Totals:         0       1       0       0       0
 10843 ;;Total ram usage:        1 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    1
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_USART_SendString
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           
 10854                           ;psect for function _USART_TxChar
 10855  0000'                    _USART_TxChar:	
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in _USART_TxChar: [wreg]
 10859                           ;USART_TxChar@out stored from wreg
 10860  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10861  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10862  0002' 0080'              	movwf	USART_TxChar@out
 10863  0003'                    l30:	
 10864                           ;uart.c: 18: while(TXIF==0);
 10865                           
 10866  0003' 1E0C               	btfss	12,4	;volatile
 10867  0004' 2800'              	goto	l30
 10868                           
 10869                           ;uart.c: 19: TXREG=out;
 10870  0005' 0800'              	movf	USART_TxChar@out,w
 10871  0006' 0099               	movwf	25	;volatile
 10872  0007' 0008               	return
 10873  0008'                    __end_of_USART_TxChar:	
 10874                           
 10875                           	psect	text39
 10876  0000'                    __ptext39:	
 10877 ;; *************** function _USART_Init *****************
 10878 ;; Defined at:
 10879 ;;		line 5 in file "uart.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  baud_rate       4   15[BANK0 ] long 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  temp            3    0        float 
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1    wreg      void 
 10886 ;; Registers used:
 10887 ;;		wreg, status,2, status,0, pclath, cstack
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10893 ;;      Params:         0       4       0       0       0
 10894 ;;      Locals:         0       4       0       0       0
 10895 ;;      Temps:          0       0       0       0       0
 10896 ;;      Totals:         0       8       0       0       0
 10897 ;;Total ram usage:        8 bytes
 10898 ;; Hardware stack levels used:    1
 10899 ;; Hardware stack levels required when called:    2
 10900 ;; This function calls:
 10901 ;;		___aldiv
 10902 ;; This function is called by:
 10903 ;;		_main
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           
 10908                           ;psect for function _USART_Init
 10909  0000'                    _USART_Init:	
 10910                           
 10911                           ;uart.c: 7: float temp;
 10912                           ;uart.c: 8: TRISC6=0;
 10913                           
 10914                           ;incstack = 0
 10915                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
 10916  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10917  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10918  0002' 1307               	bcf	7,6	;volatile
 10919                           
 10920                           ;uart.c: 9: TRISC7=1;
 10921  0003' 1787               	bsf	7,7	;volatile
 10922                           
 10923                           ;uart.c: 10: SPBRG=(unsigned char) (((8000000 / baud_rate) / 64) - 1);
 10924  0004' 1283               	bcf	3,5	;RP0=0, select bank0
 10925  0005' 1303               	bcf	3,6	;RP1=0, select bank0
 10926  0006' 0812'              	movf	USART_Init@baud_rate+3,w
 10927  0007' 0083'              	movwf	___aldiv@divisor+3
 10928  0008' 0811'              	movf	USART_Init@baud_rate+2,w
 10929  0009' 0082'              	movwf	___aldiv@divisor+2
 10930  000A' 0810'              	movf	USART_Init@baud_rate+1,w
 10931  000B' 0081'              	movwf	___aldiv@divisor+1
 10932  000C' 080F'              	movf	USART_Init@baud_rate,w
 10933  000D' 0080'              	movwf	___aldiv@divisor
 10934  000E' 3000               	movlw	0
 10935  000F' 0087'              	movwf	___aldiv@dividend+3
 10936  0010' 307A               	movlw	122
 10937  0011' 0086'              	movwf	___aldiv@dividend+2
 10938  0012' 3012               	movlw	18
 10939  0013' 0085'              	movwf	___aldiv@dividend+1
 10940  0014' 3000               	movlw	0
 10941  0015' 0084'              	movwf	___aldiv@dividend
 10942  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	___aldiv
 10943  001B' 1283               	bcf	3,5	;RP0=0, select bank0
 10944  001C' 1303               	bcf	3,6	;RP1=0, select bank0
 10945  001D' 0803'              	movf	?___aldiv+3,w
 10946  001E' 0096'              	movwf	_USART_Init$921+3
 10947  001F' 0802'              	movf	?___aldiv+2,w
 10948  0020' 0095'              	movwf	_USART_Init$921+2
 10949  0021' 0801'              	movf	?___aldiv+1,w
 10950  0022' 0094'              	movwf	_USART_Init$921+1
 10951  0023' 0800'              	movf	?___aldiv,w
 10952  0024' 0093'              	movwf	_USART_Init$921
 10953                           
 10954                           ;uart.c: 10: SPBRG=(unsigned char) (((8000000 / baud_rate) / 64) - 1);
 10955  0025' 3000               	movlw	0
 10956  0026' 0083'              	movwf	___aldiv@divisor+3
 10957  0027' 3000               	movlw	0
 10958  0028' 0082'              	movwf	___aldiv@divisor+2
 10959  0029' 3000               	movlw	0
 10960  002A' 0081'              	movwf	___aldiv@divisor+1
 10961  002B' 3040               	movlw	64
 10962  002C' 0080'              	movwf	___aldiv@divisor
 10963  002D' 0816'              	movf	_USART_Init$921+3,w
 10964  002E' 0087'              	movwf	___aldiv@dividend+3
 10965  002F' 0815'              	movf	_USART_Init$921+2,w
 10966  0030' 0086'              	movwf	___aldiv@dividend+2
 10967  0031' 0814'              	movf	_USART_Init$921+1,w
 10968  0032' 0085'              	movwf	___aldiv@dividend+1
 10969  0033' 0813'              	movf	_USART_Init$921,w
 10970  0034' 0084'              	movwf	___aldiv@dividend
 10971  0035' 120A' 118A' 2000'  	fcall	___aldiv
 10972  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10973  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10974  003A' 0800'              	movf	?___aldiv,w
 10975  003B' 3EFF               	addlw	255
 10976  003C' 1683               	bsf	3,5	;RP0=1, select bank1
 10977  003D' 1303               	bcf	3,6	;RP1=0, select bank1
 10978  003E' 0099               	movwf	25	;volatile
 10979                           
 10980                           ;uart.c: 11: TXSTA=0x20;
 10981  003F' 3020               	movlw	32
 10982  0040' 0098               	movwf	24	;volatile
 10983                           
 10984                           ;uart.c: 12: RCSTA=0x90;
 10985  0041' 3090               	movlw	144
 10986  0042' 1283               	bcf	3,5	;RP0=0, select bank0
 10987  0043' 1303               	bcf	3,6	;RP1=0, select bank0
 10988  0044' 0098               	movwf	24	;volatile
 10989  0045' 0008               	return
 10990  0046'                    __end_of_USART_Init:	
 10991                           
 10992                           	psect	text40
 10993  0000'                    __ptext40:	
 10994 ;; *************** function ___aldiv *****************
 10995 ;; Defined at:
 10996 ;;		line 6 in file "D:\mplab\sources\common\aldiv.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  divisor         4    0[BANK0 ] long 
 10999 ;;  dividend        4    4[BANK0 ] long 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  quotient        4   11[BANK0 ] long 
 11002 ;;  sign            1   10[BANK0 ] unsigned char 
 11003 ;;  counter         1    9[BANK0 ] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  4    0[BANK0 ] long 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2, status,0
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11013 ;;      Params:         0       8       0       0       0
 11014 ;;      Locals:         0       6       0       0       0
 11015 ;;      Temps:          0       1       0       0       0
 11016 ;;      Totals:         0      15       0       0       0
 11017 ;;Total ram usage:       15 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    1
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_USART_Init
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           
 11028                           ;psect for function ___aldiv
 11029  0000'                    ___aldiv:	
 11030                           
 11031                           ;incstack = 0
 11032                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11033  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11034  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11035  0002' 018A'              	clrf	___aldiv@sign
 11036  0003' 1F83'              	btfss	___aldiv@divisor+3,7
 11037  0004' 2800'              	goto	l441
 11038  0005' 0980'              	comf	___aldiv@divisor,f
 11039  0006' 0981'              	comf	___aldiv@divisor+1,f
 11040  0007' 0982'              	comf	___aldiv@divisor+2,f
 11041  0008' 0983'              	comf	___aldiv@divisor+3,f
 11042  0009' 0A80'              	incf	___aldiv@divisor,f
 11043  000A' 1903               	skipnz
 11044  000B' 0A81'              	incf	___aldiv@divisor+1,f
 11045  000C' 1903               	skipnz
 11046  000D' 0A82'              	incf	___aldiv@divisor+2,f
 11047  000E' 1903               	skipnz
 11048  000F' 0A83'              	incf	___aldiv@divisor+3,f
 11049  0010' 018A'              	clrf	___aldiv@sign
 11050  0011' 0A8A'              	incf	___aldiv@sign,f
 11051  0012'                    l441:	
 11052  0012' 1F87'              	btfss	___aldiv@dividend+3,7
 11053  0013' 2800'              	goto	l4942
 11054  0014' 0984'              	comf	___aldiv@dividend,f
 11055  0015' 0985'              	comf	___aldiv@dividend+1,f
 11056  0016' 0986'              	comf	___aldiv@dividend+2,f
 11057  0017' 0987'              	comf	___aldiv@dividend+3,f
 11058  0018' 0A84'              	incf	___aldiv@dividend,f
 11059  0019' 1903               	skipnz
 11060  001A' 0A85'              	incf	___aldiv@dividend+1,f
 11061  001B' 1903               	skipnz
 11062  001C' 0A86'              	incf	___aldiv@dividend+2,f
 11063  001D' 1903               	skipnz
 11064  001E' 0A87'              	incf	___aldiv@dividend+3,f
 11065  001F' 3001               	movlw	1
 11066  0020' 0088'              	movwf	??___aldiv
 11067  0021' 0808'              	movf	??___aldiv,w
 11068  0022' 068A'              	xorwf	___aldiv@sign,f
 11069  0023'                    l4942:	
 11070  0023' 3000               	movlw	0
 11071  0024' 008E'              	movwf	___aldiv@quotient+3
 11072  0025' 3000               	movlw	0
 11073  0026' 008D'              	movwf	___aldiv@quotient+2
 11074  0027' 3000               	movlw	0
 11075  0028' 008C'              	movwf	___aldiv@quotient+1
 11076  0029' 3000               	movlw	0
 11077  002A' 008B'              	movwf	___aldiv@quotient
 11078  002B' 0803'              	movf	___aldiv@divisor+3,w
 11079  002C' 0402'              	iorwf	___aldiv@divisor+2,w
 11080  002D' 0401'              	iorwf	___aldiv@divisor+1,w
 11081  002E' 0400'              	iorwf	___aldiv@divisor,w
 11082  002F' 1903               	skipnz
 11083  0030' 2800'              	goto	l4964
 11084  0031' 0189'              	clrf	___aldiv@counter
 11085  0032' 0A89'              	incf	___aldiv@counter,f
 11086  0033'                    l4950:	
 11087  0033' 1B83'              	btfsc	___aldiv@divisor+3,7
 11088  0034' 2800'              	goto	l4952
 11089  0035' 3001               	movlw	1
 11090  0036' 0088'              	movwf	??___aldiv
 11091  0037'                    u8165:	
 11092  0037' 1003               	clrc
 11093  0038' 0D80'              	rlf	___aldiv@divisor,f
 11094  0039' 0D81'              	rlf	___aldiv@divisor+1,f
 11095  003A' 0D82'              	rlf	___aldiv@divisor+2,f
 11096  003B' 0D83'              	rlf	___aldiv@divisor+3,f
 11097  003C' 0B88'              	decfsz	??___aldiv,f
 11098  003D' 2800'              	goto	u8165
 11099  003E' 3001               	movlw	1
 11100  003F' 0088'              	movwf	??___aldiv
 11101  0040' 0808'              	movf	??___aldiv,w
 11102  0041' 0789'              	addwf	___aldiv@counter,f
 11103  0042' 2800'              	goto	l4950
 11104  0043'                    l4952:	
 11105  0043' 3001               	movlw	1
 11106  0044' 0088'              	movwf	??___aldiv
 11107  0045'                    u8185:	
 11108  0045' 1003               	clrc
 11109  0046' 0D8B'              	rlf	___aldiv@quotient,f
 11110  0047' 0D8C'              	rlf	___aldiv@quotient+1,f
 11111  0048' 0D8D'              	rlf	___aldiv@quotient+2,f
 11112  0049' 0D8E'              	rlf	___aldiv@quotient+3,f
 11113  004A' 0B88'              	decfsz	??___aldiv,f
 11114  004B' 2800'              	goto	u8185
 11115  004C' 0803'              	movf	___aldiv@divisor+3,w
 11116  004D' 0207'              	subwf	___aldiv@dividend+3,w
 11117  004E' 1D03               	skipz
 11118  004F' 2800'              	goto	u8195
 11119  0050' 0802'              	movf	___aldiv@divisor+2,w
 11120  0051' 0206'              	subwf	___aldiv@dividend+2,w
 11121  0052' 1D03               	skipz
 11122  0053' 2800'              	goto	u8195
 11123  0054' 0801'              	movf	___aldiv@divisor+1,w
 11124  0055' 0205'              	subwf	___aldiv@dividend+1,w
 11125  0056' 1D03               	skipz
 11126  0057' 2800'              	goto	u8195
 11127  0058' 0800'              	movf	___aldiv@divisor,w
 11128  0059' 0204'              	subwf	___aldiv@dividend,w
 11129  005A'                    u8195:	
 11130  005A' 1C03               	skipc
 11131  005B' 2800'              	goto	l4960
 11132  005C' 0800'              	movf	___aldiv@divisor,w
 11133  005D' 0284'              	subwf	___aldiv@dividend,f
 11134  005E' 0801'              	movf	___aldiv@divisor+1,w
 11135  005F' 1C03               	skipc
 11136  0060' 0F01'              	incfsz	___aldiv@divisor+1,w
 11137  0061' 0285'              	subwf	___aldiv@dividend+1,f
 11138  0062' 0802'              	movf	___aldiv@divisor+2,w
 11139  0063' 1C03               	skipc
 11140  0064' 0F02'              	incfsz	___aldiv@divisor+2,w
 11141  0065' 0286'              	subwf	___aldiv@dividend+2,f
 11142  0066' 0803'              	movf	___aldiv@divisor+3,w
 11143  0067' 1C03               	skipc
 11144  0068' 0F03'              	incfsz	___aldiv@divisor+3,w
 11145  0069' 0287'              	subwf	___aldiv@dividend+3,f
 11146  006A' 140B'              	bsf	___aldiv@quotient,0
 11147  006B'                    l4960:	
 11148  006B' 3001               	movlw	1
 11149  006C'                    u8205:	
 11150  006C' 1003               	clrc
 11151  006D' 0C83'              	rrf	___aldiv@divisor+3,f
 11152  006E' 0C82'              	rrf	___aldiv@divisor+2,f
 11153  006F' 0C81'              	rrf	___aldiv@divisor+1,f
 11154  0070' 0C80'              	rrf	___aldiv@divisor,f
 11155  0071' 3EFF               	addlw	-1
 11156  0072' 1D03               	skipz
 11157  0073' 2800'              	goto	u8205
 11158  0074' 3001               	movlw	1
 11159  0075' 0289'              	subwf	___aldiv@counter,f
 11160  0076' 1D03               	btfss	3,2
 11161  0077' 2800'              	goto	l4952
 11162  0078'                    l4964:	
 11163  0078' 080A'              	movf	___aldiv@sign,w
 11164  0079' 1903               	btfsc	3,2
 11165  007A' 2800'              	goto	l4968
 11166  007B' 098B'              	comf	___aldiv@quotient,f
 11167  007C' 098C'              	comf	___aldiv@quotient+1,f
 11168  007D' 098D'              	comf	___aldiv@quotient+2,f
 11169  007E' 098E'              	comf	___aldiv@quotient+3,f
 11170  007F' 0A8B'              	incf	___aldiv@quotient,f
 11171  0080' 1903               	skipnz
 11172  0081' 0A8C'              	incf	___aldiv@quotient+1,f
 11173  0082' 1903               	skipnz
 11174  0083' 0A8D'              	incf	___aldiv@quotient+2,f
 11175  0084' 1903               	skipnz
 11176  0085' 0A8E'              	incf	___aldiv@quotient+3,f
 11177  0086'                    l4968:	
 11178  0086' 080E'              	movf	___aldiv@quotient+3,w
 11179  0087' 0083'              	movwf	?___aldiv+3
 11180  0088' 080D'              	movf	___aldiv@quotient+2,w
 11181  0089' 0082'              	movwf	?___aldiv+2
 11182  008A' 080C'              	movf	___aldiv@quotient+1,w
 11183  008B' 0081'              	movwf	?___aldiv+1
 11184  008C' 080B'              	movf	___aldiv@quotient,w
 11185  008D' 0080'              	movwf	?___aldiv
 11186  008E' 0008               	return
 11187  008F'                    __end_of___aldiv:	
 11188                           
 11189                           	psect	text41
 11190  0000'                    __ptext41:	
 11191 ;; *************** function _ADC_Read *****************
 11192 ;; Defined at:
 11193 ;;		line 109 in file "gps_test.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  channel         2    0[BANK0 ] int 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  digital         2    5[BANK0 ] int 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  2    0[BANK0 ] int 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11207 ;;      Params:         0       2       0       0       0
 11208 ;;      Locals:         0       2       0       0       0
 11209 ;;      Temps:          0       3       0       0       0
 11210 ;;      Totals:         0       7       0       0       0
 11211 ;;Total ram usage:        7 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    1
 11214 ;; This function calls:
 11215 ;;		Nothing
 11216 ;; This function is called by:
 11217 ;;		_main
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           
 11222                           ;psect for function _ADC_Read
 11223  0000'                    _ADC_Read:	
 11224                           
 11225                           ;gps_test.c: 111: int digital;
 11226                           ;gps_test.c: 114: ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
 11227                           
 11228                           ;incstack = 0
 11229                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 11230  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11231  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11232  0002' 0800'              	movf	ADC_Read@channel,w
 11233  0003' 0082'              	movwf	??_ADC_Read
 11234  0004' 3002               	movlw	2
 11235  0005'                    u8255:	
 11236  0005' 1003               	clrc
 11237  0006' 0D82'              	rlf	??_ADC_Read,f
 11238  0007' 3EFF               	addlw	-1
 11239  0008' 1D03               	skipz
 11240  0009' 2800'              	goto	u8255
 11241  000A' 303C               	movlw	60
 11242  000B' 0502'              	andwf	??_ADC_Read,w
 11243  000C' 0083'              	movwf	??_ADC_Read+1
 11244  000D' 081F               	movf	31,w	;volatile
 11245  000E' 39C3               	andlw	195
 11246  000F' 0403'              	iorwf	??_ADC_Read+1,w
 11247  0010' 009F               	movwf	31	;volatile
 11248                           
 11249                           ;gps_test.c: 116: ADCON0 |= ((1<<ADON)|(1<<GO));
 11250  0011' 3001               	movlw	1
 11251  0012' 0082'              	movwf	??_ADC_Read
 11252  0013' 3000               	movlw	0
 11253  0014' 189F               	btfsc	31,1	;volatile
 11254  0015' 3001               	movlw	1
 11255  0016' 3E01               	addlw	1
 11256  0017' 2800'              	goto	u8264
 11257  0018'                    u8265:	
 11258  0018' 1003               	clrc
 11259  0019' 0D82'              	rlf	??_ADC_Read,f
 11260  001A'                    u8264:	
 11261  001A' 3EFF               	addlw	-1
 11262  001B' 1D03               	skipz
 11263  001C' 2800'              	goto	u8265
 11264  001D' 3001               	movlw	1
 11265  001E' 0083'              	movwf	??_ADC_Read+1
 11266  001F' 3000               	movlw	0
 11267  0020' 181F               	btfsc	31,0	;volatile
 11268  0021' 3001               	movlw	1
 11269  0022' 3E01               	addlw	1
 11270  0023' 2800'              	goto	u8274
 11271  0024'                    u8275:	
 11272  0024' 1003               	clrc
 11273  0025' 0D83'              	rlf	??_ADC_Read+1,f
 11274  0026'                    u8274:	
 11275  0026' 3EFF               	addlw	-1
 11276  0027' 1D03               	skipz
 11277  0028' 2800'              	goto	u8275
 11278  0029' 0803'              	movf	??_ADC_Read+1,w
 11279  002A' 0402'              	iorwf	??_ADC_Read,w
 11280  002B' 0084'              	movwf	??_ADC_Read+2
 11281  002C' 0804'              	movf	??_ADC_Read+2,w
 11282  002D' 049F               	iorwf	31,f	;volatile
 11283  002E'                    l155:	
 11284                           ;gps_test.c: 119: while(ADCON0bits.GO_nDONE==1);
 11285                           
 11286  002E' 189F               	btfsc	31,1	;volatile
 11287  002F' 2800'              	goto	l155
 11288                           
 11289                           ;gps_test.c: 121: digital = (ADRESH << 8) + ADRESL;
 11290  0030' 081E               	movf	30,w	;volatile
 11291  0031' 0086'              	movwf	ADC_Read@digital+1
 11292  0032' 1683               	bsf	3,5	;RP0=1, select bank1
 11293  0033' 1303               	bcf	3,6	;RP1=0, select bank1
 11294  0034' 081E               	movf	30,w	;volatile
 11295  0035' 1283               	bcf	3,5	;RP0=0, select bank0
 11296  0036' 1303               	bcf	3,6	;RP1=0, select bank0
 11297  0037' 0085'              	movwf	ADC_Read@digital
 11298                           
 11299                           ;gps_test.c: 122: return(digital);
 11300  0038' 0806'              	movf	ADC_Read@digital+1,w
 11301  0039' 0081'              	movwf	?_ADC_Read+1
 11302  003A' 0805'              	movf	ADC_Read@digital,w
 11303  003B' 0080'              	movwf	?_ADC_Read
 11304  003C' 0008               	return
 11305  003D'                    __end_of_ADC_Read:	
 11306                           
 11307                           	psect	text42
 11308  0000'                    __ptext42:	
 11309 ;; *************** function _ADC_Init *****************
 11310 ;; Defined at:
 11311 ;;		line 97 in file "gps_test.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;		None
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11325 ;;      Params:         0       0       0       0       0
 11326 ;;      Locals:         0       0       0       0       0
 11327 ;;      Temps:          0       0       0       0       0
 11328 ;;      Totals:         0       0       0       0       0
 11329 ;;Total ram usage:        0 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    1
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_main
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           
 11340                           ;psect for function _ADC_Init
 11341  0000'                    _ADC_Init:	
 11342                           
 11343                           ;gps_test.c: 99: TRISA0 = 1;
 11344                           
 11345                           ;incstack = 0
 11346                           ; Regs used in _ADC_Init: [wreg+status,2]
 11347  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 11348  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 11349  0002' 1405               	bsf	5,0	;volatile
 11350                           
 11351                           ;gps_test.c: 100: ANSEL = 0x01;
 11352  0003' 3001               	movlw	1
 11353  0004' 1683               	bsf	3,5	;RP0=1, select bank3
 11354  0005' 1703               	bsf	3,6	;RP1=1, select bank3
 11355  0006' 0088               	movwf	8	;volatile
 11356                           
 11357                           ;gps_test.c: 102: ADCON1bits.ADFM = 1;
 11358  0007' 1683               	bsf	3,5	;RP0=1, select bank1
 11359  0008' 1303               	bcf	3,6	;RP1=0, select bank1
 11360  0009' 179F               	bsf	31,7	;volatile
 11361                           
 11362                           ;gps_test.c: 103: ADCON1bits.VCFG0 = 0;
 11363  000A' 121F               	bcf	31,4	;volatile
 11364                           
 11365                           ;gps_test.c: 104: ADCON1bits.VCFG1 = 0;
 11366  000B' 129F               	bcf	31,5	;volatile
 11367                           
 11368                           ;gps_test.c: 105: ADRESH=0;
 11369  000C' 1283               	bcf	3,5	;RP0=0, select bank0
 11370  000D' 1303               	bcf	3,6	;RP1=0, select bank0
 11371  000E' 019E               	clrf	30	;volatile
 11372                           
 11373                           ;gps_test.c: 106: ADRESL=0;
 11374  000F' 1683               	bsf	3,5	;RP0=1, select bank1
 11375  0010' 1303               	bcf	3,6	;RP1=0, select bank1
 11376  0011' 019E               	clrf	30	;volatile
 11377  0012' 0008               	return
 11378  0013'                    __end_of_ADC_Init:	
 11379                           
 11380                           	psect	text43
 11381  0000'                    __ptext43:	
 11382 ;; *************** function _Serial_ISR *****************
 11383 ;; Defined at:
 11384 ;;		line 208 in file "gps_test.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;		None
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  received_cha    1    5[COMMON] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11398 ;;      Params:         0       0       0       0       0
 11399 ;;      Locals:         1       0       0       0       0
 11400 ;;      Temps:          5       0       0       0       0
 11401 ;;      Totals:         6       0       0       0       0
 11402 ;;Total ram usage:        6 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		Interrupt level 1
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function _Serial_ISR
 11413  0000'                    _Serial_ISR:	
 11414                           
 11415                           ;gps_test.c: 213: if(RCIF){
 11416  0000' 1E8C               	btfss	12,5	;volatile
 11417  0001' 2800'              	goto	i1l200
 11418                           
 11419                           ;gps_test.c: 214: GIE = 0;
 11420  0002' 138B               	bcf	11,7	;volatile
 11421                           
 11422                           ;gps_test.c: 215: unsigned char received_char = RCREG;
 11423  0003' 081A               	movf	26,w	;volatile
 11424  0004' 0080'              	movwf	??_Serial_ISR
 11425  0005' 0800'              	movf	??_Serial_ISR,w
 11426  0006' 0085'              	movwf	Serial_ISR@received_char
 11427                           
 11428                           ;gps_test.c: 216: if(RCSTAbits.OERR){
 11429  0007' 1C98               	btfss	24,1	;volatile
 11430  0008' 2800'              	goto	i1l3752
 11431                           
 11432                           ;gps_test.c: 217: CREN = 0;
 11433  0009' 1218               	bcf	24,4	;volatile
 11434                           
 11435                           ;gps_test.c: 218: __nop();
 11436  000A' 0000               	nop
 11437                           
 11438                           ;gps_test.c: 219: CREN=1;
 11439  000B' 1283               	bcf	3,5	;RP0=0, select bank0
 11440  000C' 1303               	bcf	3,6	;RP1=0, select bank0
 11441  000D' 1618               	bsf	24,4	;volatile
 11442  000E'                    i1l3752:	
 11443                           
 11444                           ;gps_test.c: 220: }
 11445                           ;gps_test.c: 222: if(received_char =='$'){
 11446  000E' 3024               	movlw	36
 11447  000F' 0605'              	xorwf	Serial_ISR@received_char,w
 11448  0010' 1D03               	btfss	3,2
 11449  0011' 2800'              	goto	i1l3756
 11450                           
 11451                           ;gps_test.c: 223: GGA_Index = 0;
 11452  0012' 0180'              	clrf	_GGA_Index	;volatile
 11453  0013' 0181'              	clrf	_GGA_Index+1	;volatile
 11454                           
 11455                           ;gps_test.c: 224: IsItGGAString = 0;
 11456  0014' 1683               	bsf	3,5	;RP0=1, select bank1
 11457  0015' 1303               	bcf	3,6	;RP1=0, select bank1
 11458  0016' 0180'              	clrf	_IsItGGAString^(0+128)	;volatile
 11459                           
 11460                           ;gps_test.c: 225: IsLastEndGGA = 0;
 11461  0017' 0182'              	clrf	_IsLastEndGGA	;volatile
 11462                           
 11463                           ;gps_test.c: 226: CommaCounter = 0;
 11464  0018' 0184'              	clrf	_CommaCounter
 11465                           
 11466                           ;gps_test.c: 227: IsEndGGA = 0;
 11467  0019' 0183'              	clrf	_IsEndGGA	;volatile
 11468                           
 11469                           ;gps_test.c: 228: }
 11470  001A' 2800'              	goto	i1l200
 11471  001B'                    i1l3756:	
 11472                           
 11473                           ;gps_test.c: 229: else if(IsItGGAString == 1){
 11474  001B' 1683               	bsf	3,5	;RP0=1, select bank1
 11475  001C' 1303               	bcf	3,6	;RP1=0, select bank1
 11476  001D' 0300'              	decf	_IsItGGAString^(0+128),w	;volatile
 11477  001E' 1D03               	btfss	3,2
 11478  001F' 2800'              	goto	i1l3776
 11479                           
 11480                           ;gps_test.c: 230: if(received_char == ',' ) GGA_Pointers[CommaCounter++] = GGA_Index;
 11481  0020' 302C               	movlw	44
 11482  0021' 0605'              	xorwf	Serial_ISR@received_char,w
 11483  0022' 1D03               	btfss	3,2
 11484  0023' 2800'              	goto	i1l3764
 11485  0024' 0800'              	movf	_GGA_Index,w	;volatile
 11486  0025' 0080'              	movwf	??_Serial_ISR
 11487  0026' 0804'              	movf	_CommaCounter,w
 11488  0027' 3E00'              	addlw	(low (_GGA_Pointers| (0+256)))& (0+255)
 11489  0028' 0084               	movwf	4
 11490  0029' 0800'              	movf	??_Serial_ISR,w
 11491  002A' 1783               	bsf	3,7	;select IRP bank3
 11492  002B' 0080               	movwf	0
 11493  002C' 3001               	movlw	1
 11494  002D' 0080'              	movwf	??_Serial_ISR
 11495  002E' 0800'              	movf	??_Serial_ISR,w
 11496  002F' 0784'              	addwf	_CommaCounter,f
 11497  0030'                    i1l3764:	
 11498                           
 11499                           ;gps_test.c: 231: GGA_Buffer[GGA_Index++] = received_char;
 11500  0030' 0805'              	movf	Serial_ISR@received_char,w
 11501  0031' 0080'              	movwf	??_Serial_ISR
 11502  0032' 0800'              	movf	_GGA_Index,w	;volatile
 11503  0033' 3E00'              	addlw	(low (_GGA_Buffer| (0+256)))& (0+255)
 11504  0034' 0084               	movwf	4
 11505  0035' 0800'              	movf	??_Serial_ISR,w
 11506  0036' 1783               	bsf	3,7	;select IRP bank2
 11507  0037' 0080               	movwf	0
 11508  0038' 3001               	movlw	1
 11509  0039' 0780'              	addwf	_GGA_Index,f	;volatile
 11510  003A' 1803               	skipnc
 11511  003B' 0A81'              	incf	_GGA_Index+1,f	;volatile
 11512  003C' 3000               	movlw	0
 11513  003D' 0781'              	addwf	_GGA_Index+1,f	;volatile
 11514                           
 11515                           ;gps_test.c: 232: if(received_char == '\n'){
 11516  003E' 300A               	movlw	10
 11517  003F' 0605'              	xorwf	Serial_ISR@received_char,w
 11518  0040' 1D03               	btfss	3,2
 11519  0041' 2800'              	goto	i1l3774
 11520                           
 11521                           ;gps_test.c: 233: if (IsLastEndGGA == '\r'){
 11522  0042' 300D               	movlw	13
 11523  0043' 0602'              	xorwf	_IsLastEndGGA,w	;volatile
 11524  0044' 1D03               	btfss	3,2
 11525  0045' 2800'              	goto	i1l200
 11526                           
 11527                           ;gps_test.c: 234: IsEndGGA = 1;
 11528  0046' 3001               	movlw	1
 11529  0047' 0080'              	movwf	??_Serial_ISR
 11530  0048' 0800'              	movf	??_Serial_ISR,w
 11531  0049' 0083'              	movwf	_IsEndGGA	;volatile
 11532                           
 11533                           ;gps_test.c: 235: }
 11534                           ;gps_test.c: 236: }
 11535  004A' 2800'              	goto	i1l200
 11536  004B'                    i1l3774:	
 11537                           
 11538                           ;gps_test.c: 237: else{
 11539                           ;gps_test.c: 238: IsLastEndGGA = received_char;
 11540  004B' 0805'              	movf	Serial_ISR@received_char,w
 11541  004C' 0080'              	movwf	??_Serial_ISR
 11542  004D' 0800'              	movf	??_Serial_ISR,w
 11543  004E' 0082'              	movwf	_IsLastEndGGA	;volatile
 11544                           
 11545                           ;gps_test.c: 239: }
 11546                           ;gps_test.c: 240: }
 11547  004F' 2800'              	goto	i1l200
 11548  0050'                    i1l3776:	
 11549                           
 11550                           ;gps_test.c: 241: else if(GGA_CODE[0] == 'G' && GGA_CODE[1] == 'G' && GGA_CODE[2] == 'A'
      +                          ){
 11551  0050' 3047               	movlw	71
 11552  0051' 0600'              	xorwf	_GGA_CODE^(0+128),w
 11553  0052' 1D03               	btfss	3,2
 11554  0053' 2800'              	goto	i1l3790
 11555  0054' 3047               	movlw	71
 11556  0055' 0601'              	xorwf	(_GGA_CODE^(0+128)+1),w
 11557  0056' 1D03               	btfss	3,2
 11558  0057' 2800'              	goto	i1l3790
 11559  0058' 3041               	movlw	65
 11560  0059' 0602'              	xorwf	(_GGA_CODE^(0+128)+2),w
 11561  005A' 1D03               	btfss	3,2
 11562  005B' 2800'              	goto	i1l3790
 11563                           
 11564                           ;gps_test.c: 242: IsItGGAString = 1;
 11565  005C' 3001               	movlw	1
 11566  005D' 0080'              	movwf	??_Serial_ISR
 11567  005E' 0800'              	movf	??_Serial_ISR,w
 11568  005F' 0080'              	movwf	_IsItGGAString^(0+128)	;volatile
 11569                           
 11570                           ;gps_test.c: 243: GGA_CODE[0] = 0; GGA_CODE[1] = 0; GGA_CODE[2] = 0;
 11571  0060' 0180'              	clrf	_GGA_CODE^(0+128)
 11572  0061' 0181'              	clrf	(_GGA_CODE^(0+128)+1)
 11573  0062' 0182'              	clrf	(_GGA_CODE^(0+128)+2)
 11574                           
 11575                           ;gps_test.c: 244: }
 11576  0063' 2800'              	goto	i1l200
 11577  0064'                    i1l3790:	
 11578                           
 11579                           ;gps_test.c: 245: else{
 11580                           ;gps_test.c: 246: GGA_CODE[0] = GGA_CODE[1]; GGA_CODE[1] = GGA_CODE[2]; GGA_CODE[2] = re
      +                          ceived_char;
 11581  0064' 0801'              	movf	(_GGA_CODE^(0+128)+1),w
 11582  0065' 0080'              	movwf	??_Serial_ISR
 11583  0066' 0800'              	movf	??_Serial_ISR,w
 11584  0067' 0080'              	movwf	_GGA_CODE^(0+128)
 11585  0068' 0802'              	movf	(_GGA_CODE^(0+128)+2),w
 11586  0069' 0080'              	movwf	??_Serial_ISR
 11587  006A' 0800'              	movf	??_Serial_ISR,w
 11588  006B' 0081'              	movwf	(_GGA_CODE^(0+128)+1)
 11589  006C' 0805'              	movf	Serial_ISR@received_char,w
 11590  006D' 0080'              	movwf	??_Serial_ISR
 11591  006E' 0800'              	movf	??_Serial_ISR,w
 11592  006F' 0082'              	movwf	(_GGA_CODE^(0+128)+2)
 11593  0070'                    i1l200:	
 11594  0070' 0804'              	movf	??_Serial_ISR+4,w
 11595  0071' 1283               	bcf	3,5	;RP0=0, select bank0
 11596  0072' 00FF               	movwf	127
 11597  0073' 0803'              	movf	??_Serial_ISR+3,w
 11598  0074' 008A               	movwf	10
 11599  0075' 0802'              	movf	??_Serial_ISR+2,w
 11600  0076' 0084               	movwf	4
 11601  0077' 0E00'              	swapf	(??_Serial_ISR+1)^(0+-128),w
 11602  0078' 0083               	movwf	3
 11603  0079' 0EFE               	swapf	126,f
 11604  007A' 0E7E               	swapf	126,w
 11605  007B' 0009               	retfie
 11606  007C'                    __end_of_Serial_ISR:	
 11607  007E                     btemp	set	126	;btemp
 11608  007E                     wtemp0	set	126
 11609                           
 11610                           	psect	intentry
 11611  0000'                    __pintentry:	
 11612                           ;incstack = 0
 11613                           ; Regs used in _Serial_ISR: [wreg-fsr0h+status,2+status,0]
 11614                           
 11615  0000'                    interrupt_function:	
 11616  007E                     saved_w	set	btemp
 11617  0000' 00FE               	movwf	btemp
 11618  0001' 0E03               	swapf	3,w
 11619  0002' 0081'              	movwf	??_Serial_ISR+1
 11620  0003' 0804               	movf	4,w
 11621  0004' 0082'              	movwf	??_Serial_ISR+2
 11622  0005' 080A               	movf	10,w
 11623  0006' 0083'              	movwf	??_Serial_ISR+3
 11624  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 11625  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 11626  0009' 087F               	movf	btemp+1,w
 11627  000A' 0084'              	movwf	??_Serial_ISR+4
 11628  000B' 120A' 118A' 2800'  	ljmp	_Serial_ISR
 11629                           
 11630                           	psect	text17_split_1
 11631  0000'                    l4822:	
 11632                           ;doprnt.c: 1233: }
 11633                           ;doprnt.c: 1235: while(prec) {
 11634                           
 11635                           
 11636                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 11637  0000' 3030               	movlw	48
 11638  0001' 0080'              	movwf	??_sprintf^(0+128)
 11639  0002' 1283               	bcf	3,5	;RP0=0, select bank0
 11640  0003' 1303               	bcf	3,6	;RP1=0, select bank0
 11641  0004' 0847'              	movf	sprintf@sp,w
 11642  0005' 0084               	movwf	4
 11643  0006' 1783               	bsf	3,7
 11644  0007' 1C48'              	btfss	sprintf@sp+1,0
 11645  0008' 1383               	bcf	3,7
 11646  0009' 1683               	bsf	3,5	;RP0=1, select bank1
 11647  000A' 1303               	bcf	3,6	;RP1=0, select bank1
 11648  000B' 0800'              	movf	??_sprintf^(0+128),w
 11649  000C' 0080               	movwf	0
 11650  000D' 3001               	movlw	1
 11651  000E' 1283               	bcf	3,5	;RP0=0, select bank0
 11652  000F' 1303               	bcf	3,6	;RP1=0, select bank0
 11653  0010' 07C7'              	addwf	sprintf@sp,f
 11654  0011' 1803               	skipnc
 11655  0012' 0AC8'              	incf	sprintf@sp+1,f
 11656                           
 11657                           ;doprnt.c: 1237: prec--;
 11658  0013' 30FF               	movlw	255
 11659  0014' 1683               	bsf	3,5	;RP0=1, select bank1
 11660  0015' 1303               	bcf	3,6	;RP1=0, select bank1
 11661  0016' 0780'              	addwf	sprintf@prec^(0+128),f
 11662  0017' 1803               	skipnc
 11663  0018' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11664  0019' 30FF               	movlw	255
 11665  001A' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11666  001B'                    l4828:	
 11667  001B' 0800'              	movf	sprintf@prec^(0+128),w
 11668  001C' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11669  001D' 1903               	btfsc	3,2
 11670  001E' 2800'              	goto	L17
 11671  001F' 2800'              	goto	l4822
 11672  0020'                    l4830:	
 11673                           ;doprnt.c: 1238: }
 11674                           ;doprnt.c: 1245: continue;
 11675                           
 11676                           
 11677                           ;doprnt.c: 1246: }
 11678                           ;doprnt.c: 1253: {
 11679                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11680  0020' 0800'              	movf	sprintf@ap^(0+128),w
 11681  0021' 0084               	movwf	4
 11682  0022' 1383               	bcf	3,7	;select IRP bank0
 11683  0023' 0800               	movf	0,w
 11684  0024' 0080'              	movwf	??_sprintf^(0+128)
 11685  0025' 0A84               	incf	4,f
 11686  0026' 0800               	movf	0,w
 11687  0027' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11688  0028' 0800'              	movf	??_sprintf^(0+128),w
 11689  0029' 0080'              	movwf	sprintf@val^(0+128)
 11690  002A' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11691  002B' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11692  002C' 3000               	movlw	0
 11693  002D' 1B80'              	btfsc	(sprintf@val+1)^(0+128),7
 11694  002E' 30FF               	movlw	255
 11695  002F' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11696  0030' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11697  0031' 3002               	movlw	2
 11698  0032' 0080'              	movwf	??_sprintf^(0+128)
 11699  0033' 0800'              	movf	??_sprintf^(0+128),w
 11700  0034' 0780'              	addwf	sprintf@ap^(0+128),f
 11701                           
 11702                           ;doprnt.c: 1261: if((long)val < 0) {
 11703  0035' 1F80'              	btfss	(sprintf@val+3)^(0+128),7
 11704  0036' 2800'              	goto	l4840
 11705                           
 11706                           ;doprnt.c: 1262: flag |= 0x03;
 11707  0037' 3003               	movlw	3
 11708  0038' 0480'              	iorwf	sprintf@flag^(0+128),f
 11709  0039' 3000               	movlw	0
 11710  003A' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
 11711                           
 11712                           ;doprnt.c: 1263: val = -val;
 11713  003B' 0980'              	comf	sprintf@val^(0+128),f
 11714  003C' 0980'              	comf	(sprintf@val+1)^(0+128),f
 11715  003D' 0980'              	comf	(sprintf@val+2)^(0+128),f
 11716  003E' 0980'              	comf	(sprintf@val+3)^(0+128),f
 11717  003F' 0A80'              	incf	sprintf@val^(0+128),f
 11718  0040' 1903               	skipnz
 11719  0041' 0A80'              	incf	(sprintf@val+1)^(0+128),f
 11720  0042' 1903               	skipnz
 11721  0043' 0A80'              	incf	(sprintf@val+2)^(0+128),f
 11722  0044' 1903               	skipnz
 11723  0045' 0A80'              	incf	(sprintf@val+3)^(0+128),f
 11724  0046'                    l4840:	
 11725                           
 11726                           ;doprnt.c: 1264: }
 11727                           ;doprnt.c: 1266: }
 11728                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11729  0046' 0800'              	movf	sprintf@prec^(0+128),w
 11730  0047' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11731  0048' 1D03               	btfss	3,2
 11732  0049' 2800'              	goto	l4846
 11733  004A' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11734  004B' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
 11735  004C' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
 11736  004D' 0400'              	iorwf	sprintf@val^(0+128),w
 11737  004E' 1D03               	skipz
 11738  004F' 2800'              	goto	l4846
 11739                           
 11740                           ;doprnt.c: 1291: prec++;
 11741  0050' 3001               	movlw	1
 11742  0051' 0780'              	addwf	sprintf@prec^(0+128),f
 11743  0052' 1803               	skipnc
 11744  0053' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11745  0054' 3000               	movlw	0
 11746  0055' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11747  0056'                    l4846:	
 11748                           
 11749                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11750  0056' 0180'              	clrf	sprintf@c^(0+128)
 11751  0057' 0A80'              	incf	sprintf@c^(0+128),f
 11752  0058' 300A               	movlw	10
 11753  0059' 0600'              	xorwf	sprintf@c^(0+128),w
 11754  005A' 1903               	btfsc	3,2
 11755  005B' 2800'              	goto	l4858
 11756  005C'                    l4852:	
 11757                           
 11758                           ;doprnt.c: 1306: if(val < dpowers[c])
 11759  005C' 0800'              	movf	sprintf@c^(0+128),w
 11760  005D' 0080'              	movwf	??_sprintf^(0+128)
 11761  005E' 3001               	movlw	1
 11762  005F'                    u7975:	
 11763  005F' 1003               	clrc
 11764  0060' 0D80'              	rlf	??_sprintf^(0+128),f
 11765  0061' 3EFF               	addlw	-1
 11766  0062' 1D03               	skipz
 11767  0063' 2800'              	goto	u7975
 11768  0064' 1003               	clrc
 11769  0065' 0D00'              	rlf	??_sprintf^(0+128),w
 11770  0066' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11771  0067' 0084               	movwf	4
 11772  0068' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11773  006D' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11774  006E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11775  0073' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 11776  0074' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11777  0079' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 11778  007A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11779  007F' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 11780  0080' 0800'              	movf	(??_sprintf+4)^(0+128),w
 11781  0081' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 11782  0082' 1D03               	skipz
 11783  0083' 2800'              	goto	u7985
 11784  0084' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11785  0085' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 11786  0086' 1D03               	skipz
 11787  0087' 2800'              	goto	u7985
 11788  0088' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11789  0089' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 11790  008A' 1D03               	skipz
 11791  008B' 2800'              	goto	u7985
 11792  008C' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11793  008D' 0200'              	subwf	sprintf@val^(0+128),w
 11794  008E'                    u7985:	
 11795  008E' 1C03               	btfss	3,0
 11796  008F' 2800'              	goto	l4858
 11797                           
 11798                           ;doprnt.c: 1307: break;
 11799  0090' 3001               	movlw	1
 11800  0091' 0080'              	movwf	??_sprintf^(0+128)
 11801  0092' 0800'              	movf	??_sprintf^(0+128),w
 11802  0093' 0780'              	addwf	sprintf@c^(0+128),f
 11803  0094' 300A               	movlw	10
 11804  0095' 0600'              	xorwf	sprintf@c^(0+128),w
 11805  0096' 1D03               	btfss	3,2
 11806  0097' 2800'              	goto	l4852
 11807  0098'                    l4858:	
 11808                           
 11809                           ;doprnt.c: 1339: if(c < prec)
 11810  0098' 0800'              	movf	sprintf@c^(0+128),w
 11811  0099' 0080'              	movwf	??_sprintf^(0+128)
 11812  009A' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11813  009B' 1B80'              	btfsc	??_sprintf^(0+128),7
 11814  009C' 0381'              	decf	(??_sprintf^(0+128)+1),f
 11815  009D' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11816  009E' 3A80               	xorlw	128
 11817  009F' 0080'              	movwf	(??_sprintf+2)^(0+128)
 11818  00A0' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11819  00A1' 3A80               	xorlw	128
 11820  00A2' 0200'              	subwf	(??_sprintf+2)^(0+128),w
 11821  00A3' 1D03               	skipz
 11822  00A4' 2800'              	goto	u8005
 11823  00A5' 0800'              	movf	sprintf@prec^(0+128),w
 11824  00A6' 0200'              	subwf	??_sprintf^(0+128),w
 11825  00A7'                    u8005:	
 11826  00A7' 1803               	skipnc
 11827  00A8' 2800'              	goto	l4862
 11828                           
 11829                           ;doprnt.c: 1340: c = prec;
 11830  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
 11831  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
 11832  00AB' 0800'              	movf	sprintf@prec^(0+128),w
 11833  00AC' 0080'              	movwf	??_sprintf^(0+128)
 11834  00AD' 0800'              	movf	??_sprintf^(0+128),w
 11835  00AE' 0080'              	movwf	sprintf@c^(0+128)
 11836  00AF' 2800'              	goto	l295
 11837  00B0'                    l4862:	
 11838                           
 11839                           ;doprnt.c: 1341: else if(prec < c)
 11840  00B0' 1683               	bsf	3,5	;RP0=1, select bank1
 11841  00B1' 1303               	bcf	3,6	;RP1=0, select bank1
 11842  00B2' 0800'              	movf	sprintf@c^(0+128),w
 11843  00B3' 0080'              	movwf	??_sprintf^(0+128)
 11844  00B4' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11845  00B5' 1B80'              	btfsc	??_sprintf^(0+128),7
 11846  00B6' 0381'              	decf	(??_sprintf^(0+128)+1),f
 11847  00B7' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11848  00B8' 3A80               	xorlw	128
 11849  00B9' 0080'              	movwf	(??_sprintf+2)^(0+128)
 11850  00BA' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11851  00BB' 3A80               	xorlw	128
 11852  00BC' 0200'              	subwf	(??_sprintf+2)^(0+128),w
 11853  00BD' 1D03               	skipz
 11854  00BE' 2800'              	goto	u8015
 11855  00BF' 0800'              	movf	??_sprintf^(0+128),w
 11856  00C0' 0200'              	subwf	sprintf@prec^(0+128),w
 11857  00C1'                    u8015:	
 11858  00C1' 1803               	skipnc
 11859  00C2' 2800'              	goto	l295
 11860                           
 11861                           ;doprnt.c: 1342: prec = c;
 11862  00C3' 1683               	bsf	3,5	;RP0=1, select bank1
 11863  00C4' 1303               	bcf	3,6	;RP1=0, select bank1
 11864  00C5' 0800'              	movf	sprintf@c^(0+128),w
 11865  00C6' 0080'              	movwf	sprintf@prec^(0+128)
 11866  00C7' 0180'              	clrf	(sprintf@prec+1)^(0+128)
 11867  00C8' 1B80'              	btfsc	sprintf@prec^(0+128),7
 11868  00C9' 0380'              	decf	(sprintf@prec+1)^(0+128),f
 11869  00CA'                    l295:	
 11870                           
 11871                           ;doprnt.c: 1422: {
 11872                           ;doprnt.c: 1438: if(flag & 0x03)
 11873  00CA' 3003               	movlw	3
 11874  00CB' 1683               	bsf	3,5	;RP0=1, select bank1
 11875  00CC' 1303               	bcf	3,6	;RP1=0, select bank1
 11876  00CD' 0500'              	andwf	sprintf@flag^(0+128),w
 11877  00CE' 0080'              	movwf	??_sprintf^(0+128)
 11878  00CF' 3000               	movlw	0
 11879  00D0' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11880  00D1' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11881  00D2' 0800'              	movf	??_sprintf^(0+128),w
 11882  00D3' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11883  00D4' 1903               	btfsc	3,2
 11884  00D5' 2800'              	goto	l4876
 11885                           
 11886                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11887  00D6' 302D               	movlw	45
 11888  00D7'                    L9:	
 11889  00D7' 0080'              	movwf	??_sprintf^(0+128)
 11890  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
 11891  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
 11892  00DA' 0847'              	movf	sprintf@sp,w
 11893  00DB' 0084               	movwf	4
 11894  00DC' 1783               	bsf	3,7
 11895  00DD' 1C48'              	btfss	sprintf@sp+1,0
 11896  00DE' 1383               	bcf	3,7
 11897  00DF' 1683               	bsf	3,5	;RP0=1, select bank1
 11898  00E0' 1303               	bcf	3,6	;RP1=0, select bank1
 11899  00E1' 0800'              	movf	??_sprintf^(0+128),w
 11900  00E2' 0080               	movwf	0
 11901  00E3' 3001               	movlw	1
 11902  00E4' 1283               	bcf	3,5	;RP0=0, select bank0
 11903  00E5' 1303               	bcf	3,6	;RP1=0, select bank0
 11904  00E6' 07C7'              	addwf	sprintf@sp,f
 11905  00E7' 1803               	skipnc
 11906  00E8' 0AC8'              	incf	sprintf@sp+1,f
 11907  00E9'                    l4876:	
 11908  00E9' 30FF               	movlw	255
 11909  00EA' 1683               	bsf	3,5	;RP0=1, select bank1
 11910  00EB' 1303               	bcf	3,6	;RP1=0, select bank1
 11911  00EC' 0780'              	addwf	sprintf@prec^(0+128),f
 11912  00ED' 1803               	skipnc
 11913  00EE' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11914  00EF' 30FF               	movlw	255
 11915  00F0' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11916  00F1' 0A00'              	incf	sprintf@prec^(0+128),w
 11917  00F2' 1903               	btfsc	3,2
 11918  00F3' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 11919  00F4' 1903               	btfsc	3,2
 11920  00F5' 2800'              	goto	L17
 11921                           
 11922                           ;doprnt.c: 1478: {
 11923                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11924                           
 11925                           ;doprnt.c: 1469: }
 11926                           ;doprnt.c: 1474: while(prec--) {
 11927  00F6' 3000               	movlw	0
 11928  00F7' 1283               	bcf	3,5	;RP0=0, select bank0
 11929  00F8' 0083'              	movwf	___llmod@divisor+3
 11930  00F9' 3000               	movlw	0
 11931  00FA' 0082'              	movwf	___llmod@divisor+2
 11932  00FB' 3000               	movlw	0
 11933  00FC' 0081'              	movwf	___llmod@divisor+1
 11934  00FD' 300A               	movlw	10
 11935  00FE' 0080'              	movwf	___llmod@divisor
 11936  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
 11937  0100' 1303               	bcf	3,6	;RP1=0, select bank1
 11938  0101' 0800'              	movf	sprintf@prec^(0+128),w
 11939  0102' 0080'              	movwf	??_sprintf^(0+128)
 11940  0103' 3001               	movlw	1
 11941  0104'                    u8035:	
 11942  0104' 1003               	clrc
 11943  0105' 0D80'              	rlf	??_sprintf^(0+128),f
 11944  0106' 3EFF               	addlw	-1
 11945  0107' 1D03               	skipz
 11946  0108' 2800'              	goto	u8035
 11947  0109' 1003               	clrc
 11948  010A' 0D00'              	rlf	??_sprintf^(0+128),w
 11949  010B' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11950  010C' 0084               	movwf	4
 11951  010D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11952  0112' 1283               	bcf	3,5	;RP0=0, select bank0
 11953  0113' 1303               	bcf	3,6	;RP1=0, select bank0
 11954  0114' 008A'              	movwf	___lldiv@divisor
 11955  0115' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11956  011A' 008B'              	movwf	___lldiv@divisor+1
 11957  011B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11958  0120' 008C'              	movwf	___lldiv@divisor+2
 11959  0121' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11960  0126' 008D'              	movwf	___lldiv@divisor+3
 11961  0127' 1683               	bsf	3,5	;RP0=1, select bank1
 11962  0128' 1303               	bcf	3,6	;RP1=0, select bank1
 11963  0129' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11964  012A' 1283               	bcf	3,5	;RP0=0, select bank0
 11965  012B' 1303               	bcf	3,6	;RP1=0, select bank0
 11966  012C' 0091'              	movwf	___lldiv@dividend+3
 11967  012D' 1683               	bsf	3,5	;RP0=1, select bank1
 11968  012E' 1303               	bcf	3,6	;RP1=0, select bank1
 11969  012F' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11970  0130' 1283               	bcf	3,5	;RP0=0, select bank0
 11971  0131' 1303               	bcf	3,6	;RP1=0, select bank0
 11972  0132' 0090'              	movwf	___lldiv@dividend+2
 11973  0133' 1683               	bsf	3,5	;RP0=1, select bank1
 11974  0134' 1303               	bcf	3,6	;RP1=0, select bank1
 11975  0135' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11976  0136' 1283               	bcf	3,5	;RP0=0, select bank0
 11977  0137' 1303               	bcf	3,6	;RP1=0, select bank0
 11978  0138' 008F'              	movwf	___lldiv@dividend+1
 11979  0139' 1683               	bsf	3,5	;RP0=1, select bank1
 11980  013A' 1303               	bcf	3,6	;RP1=0, select bank1
 11981  013B' 0800'              	movf	sprintf@val^(0+128),w
 11982  013C' 1283               	bcf	3,5	;RP0=0, select bank0
 11983  013D' 1303               	bcf	3,6	;RP1=0, select bank0
 11984  013E' 008E'              	movwf	___lldiv@dividend
 11985  013F' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11986  0144' 1283               	bcf	3,5	;RP0=0, select bank0
 11987  0145' 1303               	bcf	3,6	;RP1=0, select bank0
 11988  0146' 080D'              	movf	?___lldiv+3,w
 11989  0147' 0087'              	movwf	___llmod@dividend+3
 11990  0148' 080C'              	movf	?___lldiv+2,w
 11991  0149' 0086'              	movwf	___llmod@dividend+2
 11992  014A' 080B'              	movf	?___lldiv+1,w
 11993  014B' 0085'              	movwf	___llmod@dividend+1
 11994  014C' 080A'              	movf	?___lldiv,w
 11995  014D' 0084'              	movwf	___llmod@dividend
 11996  014E' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11997  0153' 1283               	bcf	3,5	;RP0=0, select bank0
 11998  0154' 1303               	bcf	3,6	;RP1=0, select bank0
 11999  0155' 0800'              	movf	?___llmod,w
 12000  0156' 3E30               	addlw	48
 12001  0157' 1683               	bsf	3,5	;RP0=1, select bank1
 12002  0158' 1303               	bcf	3,6	;RP1=0, select bank1
 12003  0159' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12004  015A' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12005  015B' 0080'              	movwf	sprintf@c^(0+128)
 12006                           
 12007                           ;doprnt.c: 1523: }
 12008                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12009  015C' 0800'              	movf	sprintf@c^(0+128),w
 12010  015D' 2800'              	goto	L9
 12011  015E'                    l4880:	
 12012                           ;doprnt.c: 1525: }
 12013                           ;doprnt.c: 1533: }
 12014                           ;doprnt.c: 1535: alldone:
 12015                           
 12016                           
 12017                           ;doprnt.c: 1538: *sp = 0;
 12018  015E' 1283               	bcf	3,5	;RP0=0, select bank0
 12019  015F' 1303               	bcf	3,6	;RP1=0, select bank0
 12020  0160' 0847'              	movf	sprintf@sp,w
 12021  0161' 0084               	movwf	4
 12022  0162' 1783               	bsf	3,7
 12023  0163' 1C48'              	btfss	sprintf@sp+1,0
 12024  0164' 1383               	bcf	3,7
 12025  0165' 0180               	clrf	0
 12026  0166' 0008               	return
 12027  0167'                    L17:	
 12028  0167'                    __end_of_sprintf:	
 12029                           ;doprnt.c: 1540: return 0;
 12030                           ;	Return value of _sprintf is never used
 12031                           
 12032  0167' 120A' 118A' 2800'  	ljmp	l4878


Data Sizes:
    Strings     20
    Constant    118
    Data        0
    BSS         181
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     80      80
    BANK1            80     70      80
    BANK3            96      4      96
    BANK2            96      6      86

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 15
		 -> Data_Buffer(BANK3[15]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[3]), STR_5(CODE[2]), STR_3(CODE[2]), STR_1(CODE[2]), 
		 -> main@GPS_Buffer(BANK1[15]), Temperature(BANK3[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    memset@p1	PTR void  size(1) Largest target is 15
		 -> main@GPS_Buffer(BANK1[15]), 

    memset@p	PTR unsigned char  size(1) Largest target is 15
		 -> main@GPS_Buffer(BANK1[15]), 

    atol@s	PTR const unsigned char  size(1) Largest target is 15
		 -> get_gpstime@Time_Buffer(BANK0[15]), 

    atof@s	PTR const unsigned char  size(1) Largest target is 15
		 -> get_longitude@Long_Buffer(BANK1[15]), get_latitude@Lat_Buffer(BANK1[15]), 

    strtod@s	PTR const unsigned char  size(1) Largest target is 15
		 -> get_longitude@Long_Buffer(BANK1[15]), get_latitude@Lat_Buffer(BANK1[15]), 

    strtod@res	PTR PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_7(CODE[9]), STR_4(CODE[6]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 15
		 -> Data_Buffer(BANK3[15]), main@GPS_Buffer(BANK1[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    sp__memset	PTR void  size(1) Largest target is 15
		 -> main@GPS_Buffer(BANK1[15]), 

    USART_SendString@out	PTR const unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Serial_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_convert_to_degrees
    _main->_sprintf
    _get_longitude->_atof
    _get_latitude->_atof
    _atof->_strtod
    _strtod->___ftdiv
    ___altoft->___ftpack
    _get_gpstime->_atol
    _atol->___lmul
    _convert_to_degrees->___fttol
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _convert_time_to_UTC->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___lldiv->___llmod
    ___fttol->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___ftmul
    _USART_SendString->_USART_TxChar
    _USART_Init->___aldiv

Critical Paths under _Serial_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_get_latitude
    _main->_get_longitude
    _get_longitude->_atof
    _get_latitude->_atof
    _atof->_strtod
    _convert_time_to_UTC->_sprintf

Critical Paths under _Serial_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Serial_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Serial_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0  169584
                                             50 BANK1     20    20      0
                                              0 BANK3      4     4      0
                                              0 BANK2      6     6      0
                           _ADC_Init
                           _ADC_Read
                         _USART_Init
                   _USART_SendString
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                _convert_time_to_UTC
                 _convert_to_degrees
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                             _memset
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               4     3      1     204
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     808
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     457
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _get_longitude                                       25    22      3   16235
                                             60 BANK0      1     1      0
                                             26 BANK1     24    21      3
                               _atof
 ---------------------------------------------------------------------------------
 (1) _get_latitude                                        25    22      3   16235
                                             60 BANK0      1     1      0
                                             26 BANK1     24    21      3
                               _atof
 ---------------------------------------------------------------------------------
 (2) _atof                                                 5     1      4   15918
                                             59 BANK0      1     1      0
                                             22 BANK1      4     0      4
                             _strtod
 ---------------------------------------------------------------------------------
 (3) _strtod                                              29    26      3   15827
                                             52 BANK0      7     4      3
                                              0 BANK1     22    22      0
                           ___altoft
                             ___bmul
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2457
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _get_gpstime                                         25    21      4    1208
                                             28 BANK0     25    21      4
                               _atol
 ---------------------------------------------------------------------------------
 (2) _atol                                                15    11      4     995
                                             13 BANK0     15    11      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     396
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _convert_to_degrees                                  17    14      3   16332
                                             66 BANK0     14    11      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    3258
                                             36 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2516
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _convert_time_to_UTC                                 15    11      4   51634
                                             28 BANK1     15    11      4
                            ___lldiv
                            ___llmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    35      9   49307
                                             71 BANK0      9     0      9
                                              0 BANK1     28    28      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3   10737
                                             36 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3   10458
                                             36 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    5146
                                             20 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     896
                                             16 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1993
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2005
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1476
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2355
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8    1142
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     891
                                             10 BANK0     14     6      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     696
                                             52 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4159
                                             65 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3933
                                             52 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2188
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     390
                                             36 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     978
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     2      0     126
                                              1 BANK0      2     2      0
                       _USART_TxChar
 ---------------------------------------------------------------------------------
 (2) _USART_TxChar                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          11     7      4     835
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             7     5      2     130
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Serial_ISR                                           6     6      0     133
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _USART_Init
     ___aldiv
   _USART_SendString
     _USART_TxChar
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
   _convert_time_to_UTC
     ___lldiv
       ___llmod (ARG)
     ___llmod
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lldiv
         ___llmod (ARG)
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
   _convert_to_degrees
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
   _get_gpstime
     _atol
       ___lmul
       _isdigit
   _get_latitude
     _atof
       _strtod
         ___altoft
           ___ftpack
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
         ___lmul
         _isdigit
         _isspace
   _get_longitude
     _atof
       _strtod
         ___altoft
           ___ftpack
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
         ___lmul
         _isdigit
         _isspace
   _memset
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___lldiv
       ___llmod (ARG)
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
   _strcat
   _strcpy

 _Serial_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     161       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     46      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      4      60       9      100.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      6      56      11       89.6%
DATA                 0      0     161      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Sep 27 07:18:59 2021

                   ___altoft@exp 000E                                pc 0002                   ___bmul@product 0012  
                 ?_get_longitude 001A                      __CFG_CP$OFF 0000                    ___altoft@sign 000F  
                             l30 0003                               _GO 00F9                     ___awdiv@sign 000D  
                             fsr 0004              ___wmul@multiplicand 0002            get_latitude@_latitude 002C  
                   ___ftadd@exp1 0040                     ___ftadd@exp2 003F                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 003E                              l145 0019                              l155 002E  
                            l173 000D                              l246 009D                              l167 000D  
                            l441 0012                              l274 042B                              l523 009A  
                            l540 0228                              l518 0116                              l295 00CA  
                            l386 000C                              l563 03E3                              l724 0032  
                            l734 00B7                              l655 0127                              l647 00DE  
                            l593 0003                              l674 004D                              l675 0055  
                            l667 0038                              l775 0074                              l698 00A8  
                            _GIE 005F                     __CFG_CPD$OFF 0000                              _E_W 0004  
                            _N_S 0005                     main@Latitude 0000                              fsr0 0004  
                            indf 0000                     ___awmod@sign 0006        convert_to_degrees@dec_deg 0048  
                   __CFG_IESO$ON 0000                     __CFG_FOSC$XT 0000        convert_to_degrees@decimal 004D  
                    _sprintf$927 0006        convert_to_degrees@degrees 004B                     ___ftdiv@cntr 002E  
                   ___ftdiv@sign 0033                             l4010 0059                             l4020 007F  
                           l4102 0050                             l4030 00A4                             l4022 0083  
                           l4016 006E                             l4120 0018                             l4034 00BA  
                           l4018 007A                             l4028 0098                             l4212 013E  
                           l4038 00CC                             l4150 0095                             l4142 007D  
                           l4126 002E                             l4230 0294                             l4206 00CC  
                           l4048 00EF                             l4240 001A                             l4224 0222  
                           l4216 015D                             l4064 002E                             l4154 00A5  
                           l4138 006D                             l4058 0018                             l5034 0003  
                           l5106 0036                             l5026 0007                             l5050 0007  
                           l4340 0004                             l4332 011C                             l4324 00FF  
                           l4308 0088                             l5036 001C                             l4500 0304  
                           l4412 0133                             l4334 012A                             l4326 010F  
                           l4262 0073                             l4254 0053                             l4190 0174  
                           l4182 00E6                             l4086 0092                             l4078 0073  
                           l4510 034A                             l4422 0149                             l4406 0123  
                           l5062 001A                             l4280 00AC                             l4272 008F  
                           l4504 030C                             l4424 0151                             l4360 002A  
                           l5056 0007                             l4098 0029                             l3810 0022  
                           l3802 000A                             l4602 0012                             l4282 00BA  
                           l4274 009F                             l5090 00B1                             l4514 0383  
                           l4442 01CB                             l4418 0143                             l4370 0038  
                           l5074 0036                             l5058 0012                             l4612 004A  
                           l4604 0022                             l4292 0022                             l5092 00CA  
                           l4508 0345                             l4380 004B                             l4372 0040  
                           l3806 0011                             l4550 0009                             l4702 0124  
                           l4542 040C                             l4470 026B                             l4454 01EB  
                           l4446 01D1                             l4358 0013                             l3816 003D  
                           l3808 001D                             l4560 001A                             l4616 0057  
                           l4632 0038                             l4536 03DB                             l4368 0034  
                           l3818 0047                             l4626 000A                             l4298 0041  
                           l3914 0017                             l4730 0244                             l4474 02A4  
                           l4386 005D                             l4378 005B                             l4580 005C  
                           l4628 001A                             l4636 0045                             l4644 0006  
                           l3940 0056                             l3932 0043                             l3924 001F  
                           l3908 000C                             l3844 000A                             l4468 022C  
                           l4646 0018                             l3926 002D                             l3862 000A  
                           l3838 000E                             l4822 0000                             l4806 0533  
                           l4742 02C8                             l4734 028A                             l4726 021D  
                           l4718 01A6                             l4830 0020                             l4662 0031  
                           l4592 0085                             l3936 004E                             l3952 000C  
                           l4840 0046                             l4760 03CC                             l3848 0020  
                           l4904 0028                             l3880 0016                             l4496 02FC  
                           l4586 0069                             l4578 004C                             l3970 0035  
                           l3858 0004                             l4746 02E9                             l3882 0028  
                           l4588 0077                             l3964 0019                             l3956 0013  
                           l4852 005C                             l4828 001B                             l4772 040E  
                           l4756 034F                             l4692 00CB                             l4684 009F  
                           l4676 004E                             l4924 0090                             l4916 0036  
                           l4950 0033                             l4942 0023                             l3966 0027  
                           l3974 0040                             l4862 00B0                             l4846 0056  
                           l4766 03D2                             l4686 00BB                             l4678 0097  
                           l4918 007B                             l3894 0011                             l4960 006B  
                           l4952 0043                             l3992 0030                             l4792 04F0  
                           l4880 015E                             l3896 0012                             l3978 0048  
                           l4858 0098                             l4786 04D3                             l4964 0078  
                           l3988 0029                             l4876 00E9                             l4980 000C  
                           l3998 003F                             l4798 050C                             l4878 0006  
                           l4968 0086                             l4998 0003                             _ADON 00F8  
                           STR_1 0098                             STR_2 008F                             STR_3 0098  
                           STR_4 008F                             STR_5 0098                             STR_6 0095  
                           STR_7 0086                             _CREN 00C4                             u6005 003A  
                           u6015 0044                             u6105 0036                             u7101 00FB  
                           u7102 0106                             u7103 0111                             u6225 005A  
                           u6315 0099                             u6075 001C                             u8100 0064  
                           _RCIF 0065                             u8005 00A7                             u6405 0052  
                           u8101 0065                             u8102 006A                             u6255 006F  
                           u6095 002D                             u8015 00C1                             u6415 0074  
                           u8103 006B                             u6425 0085                             u5715 0031  
                           u8035 0104                             u6435 0093                             u8205 006C  
                           u6461 001C                             u6285 0084                             u7405 004D  
                           u6525 003A                             u7085 008C                             u6462 001D  
                           u6463 0022                             u5735 0040                             u6615 00A6  
                           u6535 004C                             u6464 0023                             u6481 0043  
                           u7505 0039                             u6625 00AE                             u6482 0044  
                           u6483 0049                             u7435 006B                             u7515 004B  
                           u6395 0040                             u5835 0022                             u6484 004A  
                           u8165 0037                             u6805 0090                             u6565 007E  
                           u5845 002A                             u8255 0005                             u5775 005C  
                           u5695 0016                             u7375 0021                             u6575 0086  
                           u8264 001A                             u8265 0018                             u8185 0045  
                           u7545 000E                             u6745 0055                             u8274 0026  
                           u8275 0024                             u8195 005A                             u7475 0016  
                           u6835 00AE                             u6755 0066                             u7565 0028  
                           u6925 0100                             u6765 0074                             u7805 03D5  
                           u7495 0024                             u7575 0039                             u5975 0022  
                           u7815 0404                             u7735 024F                             u5895 001B  
                           u7905 0653                             u7745 0295                             u7595 000B  
                           u6955 011E                             u6875 008A                             u5995 002E  
                           u6885 00B9                             u7845 0439                             u7775 02C6  
                           u7695 013C                             u6985 000D                             u7865 04F9  
                           u6995 0014                             u7875 0506                             u7975 005F  
                           u7895 05A3                             u7985 008E                             _TXIF 0064  
      convert_to_degrees@minutes 0045                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _lm35 0003                             _atof 0000                             _atol 0000  
                           _main 0000                     ___ftpack@arg 0000                     ___ftpack@exp 0003  
                           _temp 0000                             btemp 007E         __end_of_USART_SendString 0019  
          get_latitude@lat_index 0031                 __end_of_ADC_Init 0013                 __end_of_ADC_Read 003D  
                  __CFG_BOREN$ON 0000                   ??_get_latitude 003C                             start 0000* 
              ___bmul@multiplier 0013                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 0022  
                   ___ftmul@sign 0023                    main@Longitude 0003                     ___fttol@exp1 0041  
                   ___fttol@lval 003D                      _Data_Buffer 0046                  __end_of___aldiv 008F  
                          ?_atof 0016                            ?_atol 000D                            ?_main 0000  
                __end_of___awdiv 005B                  __end_of___ftadd 0109                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 004D                  __end_of___ftdiv 00B8                  __end_of___ftneg 000A  
                          _ANSEL 0188                  __end_of___lldiv 0060                  __end_of___ftmul 00D3  
                ___awdiv@divisor 0007                  __end_of___llmod 004E                  __end_of___ftsub 0021  
                __end_of___fttol 008E                            i1l200 0070                  ___awdiv@counter 000C  
                          _RCREG 001A                            _RCSTA 0018                            _SPBRG 0099  
                          _TXREG 0019                            _TXSTA 0098              ___lmul@multiplicand 0004  
                   ___lltoft@exp 000D  convert_to_degrees@NMEA_lat_long 0042                    ___awtoft@sign 000D  
                __end_of_dpowers 0038                            _scale 0000                  __end_of_isdigit 0010  
       get_longitude@Long_Buffer 001D                    ___ftpack@sign 0004                            atof@s 003B  
                          atol@a 0016                            atol@c 001B                            atol@s 001A  
                __end_of_isspace 0014                            pclath 000A                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 0167                      ?_USART_Init 000F  
        _convert_time_to_UTC$923 0021                  __initialization 0000                  ??_get_longitude 003C  
                   __end_of_atof 001B                     __end_of_atol 0099                     __end_of_main 02E1  
               get_gpstime@_Time 0030                 get_gpstime@index 0034                           ??_atof 003B  
                         ??_atol 0011                           ??_main 0032                    ___fttol@sign1 003C  
           __size_of__tdiv_to_l_ 00C3      __size_of_convert_to_degrees 00D2                           _ADCON0 001F  
               __end_of___altoft 0042                 ___llmod@dividend 0004                           ?_scale 0024  
                         _ADRESH 001E                           _ADRESL 009E                 ___awdiv@dividend 0009  
               __end_of___awtoft 0025                 __end_of___ftpack 006E                 __end_of___lltoft 002F  
                         i1l3752 000E                           i1l3764 0030                           i1l3756 001B  
                         i1l3790 0064                           i1l3774 004B                           i1l3776 0050  
                         _TRISA0 0428                           _TRISC6 043E                           _TRISC7 043F  
                     _Serial_ISR 0000                   __CFG_PWRTE$OFF 0000               get_longitude@index 0030  
               __end_of__powers_ 005F                           ___bmul 0000                           ___ftge 0000  
                         ___lmul 0000                        ??___aldiv 0008                           ___wmul 0000  
                      ??___awdiv 000B                        ??___ftadd 003A                        ??___awmod 0004  
                      ??___ftdiv 002A                        ??___ftneg 0027                        ??___lldiv 0012  
                      ??___ftmul 001A                        ??___llmod 0008                        ??___ftsub 0047  
                      ??___fttol 0038             __size_of_get_gpstime 0033                  ADC_Read@channel 0000  
                         _memset 0000                           _fround 0000                  ADC_Read@digital 0005  
               ___awdiv@quotient 000E                  ___awmod@divisor 0000                  ___awmod@counter 0005  
                         _strcat 0000                           _strcpy 0000                           _strtod 0000  
          ___ftmul@f3_as_product 001F          get_longitude@_longitude 002C                        ??_isdigit 0000  
           __end_of_get_latitude 005C                        ?_ADC_Init 0000                        ?_ADC_Read 0000  
                         saved_w 007E                        ??_isspace 0000              __size_of_USART_Init 0046  
        get_latitude@lat_pointer 002F                        ??_sprintf 0000          __end_of__initialization 001C  
                     ___altoft@c 0008                       ___ftadd@f1 0034                       ___ftadd@f2 0037  
                     ___ftge@ff1 0000                       ___ftge@ff2 0003                       ___ftdiv@f1 0027  
                     ___ftdiv@f2 0024                       ___ftdiv@f3 002F                       ___ftneg@f1 0024  
                     ___awtoft@c 0008              ___bmul@multiplicand 0010                       ___ftmul@f1 0014  
                     ___ftmul@f2 0017                       ___ftsub@f1 0044                       ___ftsub@f2 0041  
                     ___fttol@f1 0034                   __pcstackCOMMON 0000                       ___lltoft@c 0008  
                  __end_of_scale 02B3                       __div_to_l_ 0000                       ??_ADC_Init 0000  
                     ??_ADC_Read 0002                  __div_to_l_@exp1 0013                  __div_to_l_@cntr 0012  
                        ??_scale 0027                  __div_to_l_@quot 000E                       __pbssBANK1 0000  
                     __pbssBANK2 0000                       __pbssBANK3 0000                ?_USART_SendString 0000  
                  __div_to_l_@f1 0000                    __div_to_l_@f2 0003                      ?_Serial_ISR 0000  
             ??_USART_SendString 0001                       __pmaintext 0000          get_longitude@long_index 0031  
                        ?___bmul 0010                          ?___ftge 0000     __size_of_convert_time_to_UTC 0121  
                        ?___lmul 0000                          ?___wmul 0000                       __pintentry 0000  
                      ?___altoft 0008                          ?_memset 0000                          ?_fround 0024  
                 ___lmul@product 0009                        ?___awtoft 0008                        ?___ftpack 0000  
                      ?___lltoft 0008                          ?_strcat 0000                          ?_strcpy 0000  
                        ?_strtod 0034                     _CommaCounter 0004                     _IsLastEndGGA 0002  
                     __stringtab 0000                     _GGA_Pointers 0000                     ??_USART_Init 0013  
              __end_of__npowers_ 0086                          ___aldiv 0000                  __size_of___bmul 0013  
                __size_of___ftge 005F                          ___awdiv 0000                  __size_of___lmul 0041  
                        ___ftadd 0000                          ___awmod 0000                          ___ftdiv 0000  
                        ___ftneg 0000                          ___lldiv 0000                  __size_of___wmul 0023  
                        ___ftmul 0000                          ___llmod 0000                          ___ftsub 0000  
                        ___fttol 0000                       _fround$924 0030                       _fround$925 002D  
                     ??___altoft 000C            __size_of_get_latitude 005C                      _Temperature 0055  
                     ??___awtoft 000B                       ??___ftpack 0005                  __size_of_memset 001E  
                __size_of_fround 01A6                       ??___lltoft 000C                          __ptext1 0000  
                        __ptext2 0000                          __ptext3 0000                          __ptext4 0000  
                        __ptext5 0000                          __ptext6 0000                          __ptext7 0000  
                        __ptext8 0000                          __ptext9 0000              USART_SendString@out 0002  
         convert_time_to_UTC@min 0027           convert_time_to_UTC@sec 0029                        _GGA_Index 0000  
                __size_of_strcat 002D                  __size_of_strcpy 001C                      ?__div_to_l_ 0000  
                __size_of_strtod 041D                          _dpowers 0010                          _isdigit 0000  
               ___awmod@dividend 0002                 ___aldiv@dividend 0004              __size_of_Serial_ISR 007C  
                        _isspace 0000               __end_of_USART_Init 0046                          _sprintf 0000  
                        clrloop0 0001             end_of_initialization 001C                          memset@c 0000  
                        memset@n 0002                          memset@p 0005                  ___lldiv@divisor 000A  
                   _get_latitude 0000                  ___lldiv@counter 0017                        _RCSTAbits 0018  
               ___aldiv@quotient 000B                          psplit$0 21003D            __end_of_get_longitude 005C  
                 __tdiv_to_l_@f1 0000                   __tdiv_to_l_@f2 0003                    ??__tdiv_to_l_ 0006  
                        strtod@s 0015       __end_of_convert_to_degrees 00D2                __size_of_ADC_Init 0013  
              __size_of_ADC_Read 003D              USART_Init@baud_rate 000F                      ___ftdiv@exp 0032  
                  ?_USART_TxChar 0000              __size_of__div_to_l_ 0133                    ??_get_gpstime 0020  
                     _strtod$600 0003                       _strtod$601 0006                       _strtod$602 0009  
                    ___ftmul@exp 001E                       _strtod$598 000C                       _strtod$599 0000  
                  _IsItGGAString 0003                   __end_of___bmul 0013                   __end_of___ftge 005F  
                 __end_of___lmul 0041                   __end_of___wmul 0023                   __end_of_memset 001E  
                 __end_of_fround 01A6                   __end_of_strcat 002D                   __end_of_strcpy 001C  
                 __end_of_strtod 041D              start_initialization 0000              __end_of__tdiv_to_l_ 00C3  
            _convert_time_to_UTC 0000                   ??_USART_TxChar 0000                  ___llmod@divisor 0000  
                ___llmod@counter 0009                     ??_Serial_ISR 0000                         ??___bmul 0011  
           ?_convert_time_to_UTC 001C                         ??___ftge 0006                         ??___lmul 0008  
                       ??___wmul 0004                         ??_memset 0004                         ??_fround 0027  
            __end_of_get_gpstime 0033                    sprintf@tmpval 000E                         ??_strcat 0002  
                       ??_strcpy 0001                         ??_strtod 0037        __size_of_USART_SendString 0019  
              __size_of___altoft 0042                       fround@prec 0033                __size_of___awtoft 0025  
              __size_of___ftpack 006E                __size_of___lltoft 002F                      __pbssCOMMON 0000  
                      ___latbits 0002                    __pcstackBANK0 0000                    __pcstackBANK1 0000  
                  __pcstackBANK2 0000                    __pcstackBANK3 0000               __end_of_Serial_ISR 007C  
                    sprintf@flag 000A                      sprintf@fval 0018                      sprintf@prec 0016  
                      __pnvBANK1 0000                        __pnvBANK3 0000            ??_convert_time_to_UTC 0020  
                       ?___aldiv 0000                         ?___awdiv 0007                         ?___ftadd 0034  
                       ?___awmod 0000                         ?___ftdiv 0024                         ?___ftneg 0024  
                       ?___lldiv 000A                         ?___ftmul 0014                         ?___llmod 0000  
                       ?___ftsub 0041                        __npowers_ 005F                         ?___fttol 0034  
                      __pstrings 0000                      __tdiv_to_l_ 0000                     ??__div_to_l_ 0006  
                       ?_isdigit 0000                         _ADC_Init 0000                         _ADC_Read 0000  
                       ?_isspace 0000                        _scale$926 0029                         _GGA_CODE 0000  
                     pnum$text17 0021                         ?_sprintf 0047                   __size_of_scale 02B3  
                ___aldiv@divisor 0000                interrupt_function 0000                  ___aldiv@counter 0009  
                 ___wmul@product 0004                        clear_ram0 0000                         _PIE1bits 008C  
             __end_of__div_to_l_ 0133                      _get_gpstime 0000                        _value_adc 0000  
                    strtod@flags 000F                      strtod@expon 0010          Serial_ISR@received_char 0005  
                     _ADCON0bits 001F                      __stringbase 000F                       _ADCON1bits 009F  
           __end_of_USART_TxChar 0008                ___wmul@multiplier 0000                         _IsEndGGA 0003  
              ___lmul@multiplier 0000               _convert_to_degrees 0000              ?_convert_to_degrees 0042  
               __size_of___aldiv 008F                 __size_of___awdiv 005B                 __size_of___ftadd 0109  
               __size_of___awmod 004D                 __size_of___ftdiv 00B8                 __size_of___ftneg 000A  
               __size_of___lldiv 0060                         ___altoft 0000                 __size_of___ftmul 00D3  
               __size_of___llmod 004E                 __size_of___ftsub 0021                 __size_of___fttol 008E  
                       ___awtoft 0000                         ___ftpack 0000               __end_of__stringtab 0010  
                       ___lltoft 0000                      _isdigit$687 0000                 _USART_SendString 0000  
         get_latitude@Lat_Buffer 001D                       sprintf@exp 000C                       sprintf@val 0012  
                     strcat@from 0000             ??_convert_to_degrees 0045                 __size_of_isdigit 0010  
                       _main$922 0044                 __size_of_isspace 0014                         __ptext10 0000  
                       __ptext11 0000                         __ptext20 0000                         __ptext12 0000  
                       __ptext21 0000                         __ptext13 0000                         __ptext30 0000  
                       __ptext22 0000                         __ptext14 0000                         __ptext31 0000  
                       __ptext23 0000                         __ptext15 0000                         __ptext40 0000  
                       __ptext32 0000                         __ptext24 0000                         __ptext16 0000  
                       __ptext41 0000                         __ptext33 0000                         __ptext25 0000  
                       __ptext17 0000                         __ptext42 0000                         __ptext34 0000  
                       __ptext26 0000                         __ptext18 0000                         __ptext43 0000  
                       __ptext35 0000                         __ptext27 0000                         __ptext19 0000  
                       __ptext36 0000                         __ptext28 0000                         __ptext37 0000  
                       __ptext29 0000                         __ptext38 0000                         __ptext39 0000  
              __CFG_BOR4V$BOR40V 0000                         __powers_ 0038                       _GGA_Buffer 0000  
        convert_time_to_UTC@hour 0025                 __size_of_sprintf 0000           __size_of_get_longitude 005C  
                     strcpy@from 0000                    __size_of_atof 001B                    __size_of_atol 0099  
                  __size_of_main 02E1                       strtod@eexp 000E                         atol@sign 0015  
                       main@Time 0000                         _stringBT 0014                   main@GPS_Buffer 0035  
                    _isspace$690 0000           get_gpstime@Time_Buffer 0021               pnum$text17_split_1 003D  
                     _INTCONbits 000B                         isdigit@c 0001                         memset@p1 0006  
                USART_TxChar@out 0000                         scale@scl 002C                         intlevel1 0000* 
                      sprintf@ap 0009                 __tdiv_to_l_@exp1 000F                        sprintf@sp 0047  
               __tdiv_to_l_@cntr 000E                 __tdiv_to_l_@quot 000A      convert_time_to_UTC@UTC_Time 001C  
                       isspace@c 0001                 ___lldiv@dividend 000E                        stringcode 000A  
                 _USART_Init$921 0013                        strtod@res 0034        get_longitude@long_pointer 002F  
          __size_of_USART_TxChar 0008                get_latitude@index 0030                    _get_longitude 0000  
                   ?__tdiv_to_l_ 0000                         sprintf@c 001B                         sprintf@f 0049  
                       strcat@cp 0003                         strcat@to 0004                 ___lldiv@quotient 0013  
                       strcpy@cp 0003                         strcpy@to 0002                         stringdir 000A  
                       stringtab 0000                     ___aldiv@sign 000A                         strtod@_u 0011  
    __end_of_convert_time_to_UTC 0121                     _USART_TxChar 0000                    ?_get_latitude 001A  
                     _USART_Init 0000                     ?_get_gpstime 001C  
