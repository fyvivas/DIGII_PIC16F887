

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Sep 23 09:05:23 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.41
    12                           ; Generated 25/01/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123                           
   124                           	psect	idataCOMMON
   125  07AE                     __pidataCOMMON:	
   126                           
   127                           ;initializer for _var
   128  07AE  3430               	retlw	48
   129  0007                     _PORTCbits	set	7
   130  0019                     _TXREG	set	25
   131  0018                     _RCSTAbits	set	24
   132  003E                     _RC6	set	62
   133  0099                     _SPBRG	set	153
   134  0098                     _TXSTAbits	set	152
   135  0187                     _BAUDCTLbits	set	391
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  07F8                     start_initialization:	
   141  07F8                     __initialization:	
   142                           
   143                           ; Initialize objects allocated to COMMON
   144  07F8  120A  118A  27AE   	fcall	__pidataCOMMON	;fetch initializer
   145  07FB  00F3               	movwf	__pdataCOMMON& (0+127)
   146  07FC                     end_of_initialization:	
   147                           ;End of C runtime variable initialization code
   148                           
   149  07FC                     __end_of__initialization:	
   150  07FC  0183               	clrf	3
   151  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   152                           
   153                           	psect	dataCOMMON
   154  0073                     __pdataCOMMON:	
   155  0073                     _var:	
   156  0073                     	ds	1
   157                           
   158                           	psect	cstackCOMMON
   159  0070                     __pcstackCOMMON:	
   160  0070                     ?_main:	
   161  0070                     ??_main:	
   162                           ; 1 bytes @ 0x0
   163                           
   164                           
   165                           ; 1 bytes @ 0x0
   166  0070                     	ds	3
   167                           
   168                           	psect	maintext
   169  07AF                     __pmaintext:	
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 29 in file "uart_sec.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2, status,0
   184 ;; Tracked objects:
   185 ;;		On entry : B00/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   189 ;;      Params:         0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0
   191 ;;      Temps:          3       0       0       0       0
   192 ;;      Totals:         3       0       0       0       0
   193 ;;Total ram usage:        3 bytes
   194 ;; This function calls:
   195 ;;		Nothing
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           
   202                           ;psect for function _main
   203  07AF                     _main:	
   204                           
   205                           ;uart_sec.c: 31: RC6 = 0;
   206                           
   207                           ;incstack = 0
   208                           ; Regs used in _main: [wreg+status,2+status,0]
   209  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   210  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   211  07B1  1307               	bcf	7,6	;volatile
   212                           
   213                           ;uart_sec.c: 33: TXSTAbits.TX9 = 0;
   214  07B2  1683               	bsf	3,5	;RP0=1, select bank1
   215  07B3  1303               	bcf	3,6	;RP1=0, select bank1
   216  07B4  1318               	bcf	24,6	;volatile
   217                           
   218                           ;uart_sec.c: 34: TXSTAbits.TXEN = 1;
   219  07B5  1698               	bsf	24,5	;volatile
   220                           
   221                           ;uart_sec.c: 35: TXSTAbits.SYNC = 0;
   222  07B6  1218               	bcf	24,4	;volatile
   223                           
   224                           ;uart_sec.c: 36: TXSTAbits.BRGH = 0;
   225  07B7  1118               	bcf	24,2	;volatile
   226                           
   227                           ;uart_sec.c: 37: BAUDCTLbits.BRG16 = 0;
   228  07B8  1683               	bsf	3,5	;RP0=1, select bank3
   229  07B9  1703               	bsf	3,6	;RP1=1, select bank3
   230  07BA  1187               	bcf	7,3	;volatile
   231                           
   232                           ;uart_sec.c: 38: RCSTAbits.SPEN = 1;
   233  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   234  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   235  07BD  1798               	bsf	24,7	;volatile
   236                           
   237                           ;uart_sec.c: 40: SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
   238  07BE  300C               	movlw	12
   239  07BF  1683               	bsf	3,5	;RP0=1, select bank1
   240  07C0  1303               	bcf	3,6	;RP1=0, select bank1
   241  07C1  0099               	movwf	25	;volatile
   242  07C2                     l22:	
   243                           ;uart_sec.c: 43: while (!TXSTAbits.TRMT) {
   244                           
   245                           ;uart_sec.c: 41: while (1) {
   246                           
   247  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   248  07C3  1303               	bcf	3,6	;RP1=0, select bank1
   249  07C4  1C98               	btfss	24,1	;volatile
   250  07C5  2FC2               	goto	l22
   251                           
   252                           ;uart_sec.c: 44: }
   253                           ;uart_sec.c: 46: TXREG = var;
   254  07C6  0873               	movf	_var,w
   255  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   256  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   257  07C9  0099               	movwf	25	;volatile
   258                           
   259                           ;uart_sec.c: 48: PORTCbits.RC0 = !PORTCbits.RC0;
   260  07CA  1003               	clrc
   261  07CB  1C07               	btfss	7,0	;volatile
   262  07CC  1403               	setc
   263  07CD  1C03               	btfss	3,0
   264  07CE  2FD3               	goto	u20
   265  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   266  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   267  07D1  1407               	bsf	7,0	;volatile
   268  07D2  2FD6               	goto	l503
   269  07D3                     u20:	
   270  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   271  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   272  07D5  1007               	bcf	7,0	;volatile
   273  07D6                     l503:	
   274                           
   275                           ;uart_sec.c: 49: if (++var > 122) {
   276  07D6  3001               	movlw	1
   277  07D7  00F0               	movwf	??_main
   278  07D8  0870               	movf	??_main,w
   279  07D9  07F3               	addwf	_var,f
   280  07DA  307B               	movlw	123
   281  07DB  0273               	subwf	_var,w
   282  07DC  1C03               	skipc
   283  07DD  2FEA               	goto	l25
   284  07DE                     l26:	
   285                           ;uart_sec.c: 50: while (!TXSTAbits.TRMT) {
   286                           
   287  07DE  1683               	bsf	3,5	;RP0=1, select bank1
   288  07DF  1303               	bcf	3,6	;RP1=0, select bank1
   289  07E0  1C98               	btfss	24,1	;volatile
   290  07E1  2FDE               	goto	l26
   291                           
   292                           ;uart_sec.c: 51: }
   293                           ;uart_sec.c: 52: TXREG = 13;
   294  07E2  300D               	movlw	13
   295  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   296  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   297  07E5  0099               	movwf	25	;volatile
   298                           
   299                           ;uart_sec.c: 53: var = 48;
   300  07E6  3030               	movlw	48
   301  07E7  00F0               	movwf	??_main
   302  07E8  0870               	movf	??_main,w
   303  07E9  00F3               	movwf	_var
   304  07EA                     l25:	
   305                           
   306                           ;uart_sec.c: 54: }
   307                           ;uart_sec.c: 56: _delay((unsigned long)((100)*(8000000/4000.0)));
   308  07EA  3002               	movlw	2
   309  07EB  00F2               	movwf	??_main+2
   310  07EC  3004               	movlw	4
   311  07ED  00F1               	movwf	??_main+1
   312  07EE  30BA               	movlw	186
   313  07EF  00F0               	movwf	??_main
   314  07F0                     u67:	
   315  07F0  0BF0               	decfsz	??_main,f
   316  07F1  2FF0               	goto	u67
   317  07F2  0BF1               	decfsz	??_main+1,f
   318  07F3  2FF0               	goto	u67
   319  07F4  0BF2               	decfsz	??_main+2,f
   320  07F5  2FF0               	goto	u67
   321  07F6  0000               	nop
   322  07F7  2FC2               	goto	l22
   323  07F8                     __end_of_main:	
   324  007E                     btemp	set	126	;btemp
   325  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       4      12        0.0%
ABS                  0      0       4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Sep 23 09:05:23 2021

            __CFG_CP$OFF 0000                       l22 07C2                       l25 07EA  
                     l26 07DE                       u20 07D3                       u67 07F0  
            __CFG_LVP$ON 0000                      l503 07D6                      _RC6 003E  
           __CFG_CPD$OFF 0000                      _var 0073             __CFG_IESO$ON 0000  
           __CFG_FOSC$XT 0000             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 07AF                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0000            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _SPBRG 0099                    _TXREG 0019  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0070           __CFG_PWRTE$OFF 0000  
           __pdataCOMMON 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07AF     end_of_initialization 07FC                _RCSTAbits 0018  
              _PORTCbits 0007                _TXSTAbits 0098            __pidataCOMMON 07AE  
            _BAUDCTLbits 0187      start_initialization 07F8                ___latbits 0002  
      __CFG_BOR4V$BOR40V 0000            __size_of_main 0049  
