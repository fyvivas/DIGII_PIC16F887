

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Sep 27 08:39:43 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.41
    22                           ; Generated 25/01/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133                           
   134                           	psect	idataBANK0
   135  0354                     __pidataBANK0:	
   136                           
   137                           ;initializer for _buffer_TX
   138  0354  3454               	retlw	84
   139  0355  3465               	retlw	101
   140  0356  346D               	retlw	109
   141  0357  3470               	retlw	112
   142  0358  343A               	retlw	58
   143  0359  3420               	retlw	32
   144  035A  3478               	retlw	120
   145  035B  3478               	retlw	120
   146  035C  3478               	retlw	120
   147  035D  3420               	retlw	32
   148  035E  3467               	retlw	103
   149  035F  3472               	retlw	114
   150  0360  3461               	retlw	97
   151  0361  3464               	retlw	100
   152  0362  346F               	retlw	111
   153  0363  3473               	retlw	115
   154  0364  340D               	retlw	13
   155  0365  3400               	retlw	0
   156  0019                     _TXREG	set	25
   157  001E                     _ADRESH	set	30
   158  001F                     _ADCON0bits	set	31
   159  0018                     _RCSTAbits	set	24
   160  003E                     _RC6	set	62
   161  009E                     _ADRESL	set	158
   162  009F                     _ADCON1bits	set	159
   163  0099                     _SPBRG	set	153
   164  0098                     _TXSTAbits	set	152
   165  0428                     _TRISA0	set	1064
   166  0188                     _ANSEL	set	392
   167  0187                     _BAUDCTLbits	set	391
   168                           
   169                           ; #config settings
   170  0000                     
   171                           	psect	cinit
   172  07EA                     start_initialization:	
   173  07EA                     __initialization:	
   174                           
   175                           ; Initialize objects allocated to BANK0
   176  07EA  1383               	bcf	3,7	;select IRP bank0
   177  07EB  3054               	movlw	low (__pdataBANK0+18)
   178  07EC  00FD               	movwf	btemp+-1
   179  07ED  3003               	movlw	high __pidataBANK0
   180  07EE  00FE               	movwf	btemp
   181  07EF  3054               	movlw	low __pidataBANK0
   182  07F0  00FF               	movwf	btemp+1
   183  07F1  3042               	movlw	low __pdataBANK0
   184  07F2  0084               	movwf	4
   185  07F3  120A  118A  2347   	fcall	init_ram0
   186                           
   187                           ; Clear objects allocated to BANK0
   188  07F6  01D4               	clrf	__pbssBANK0& (0+127)
   189  07F7  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   190  07F8  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   191  07F9  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   192  07FA  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   193  07FB  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   194  07FC                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197  07FC                     __end_of__initialization:	
   198  07FC  0183               	clrf	3
   199  07FD  120A  118A  2EAE   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssBANK0
   202  0054                     __pbssBANK0:	
   203  0054                     _temp:	
   204  0054                     	ds	3
   205  0057                     _value_adc:	
   206  0057                     	ds	2
   207  0059                     _lm35:	
   208  0059                     	ds	1
   209                           
   210                           	psect	dataBANK0
   211  0042                     __pdataBANK0:	
   212  0042                     _buffer_TX:	
   213  0042                     	ds	18
   214                           
   215                           	psect	inittext
   216  0343                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219  0343  087E               	movf	126,w
   220  0344  008A               	movwf	10
   221  0345  087F               	movf	127,w
   222  0346  0082               	movwf	2
   223  0347                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230  0347  2343  120A  118A   	fcall	init_fetch0
   231  034A  0080               	movwf	0
   232  034B  0A84               	incf	4,f
   233  034C  0804               	movf	4,w
   234  034D  067D               	xorwf	125,w
   235  034E  1903               	btfsc	3,2
   236  034F  3400               	retlw	0
   237  0350  0AFF               	incf	127,f
   238  0351  1903               	btfsc	3,2
   239  0352  0AFE               	incf	126,f
   240  0353  2B47               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:	
   244  0070                     ?_main:	
   245  0070                     ?___awmod:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?___ftpack:	
   249                           ; 2 bytes @ 0x0
   250                           
   251  0070                     ?___fttol:	
   252                           ; 3 bytes @ 0x0
   253                           
   254  0070                     ___awmod@divisor:	
   255                           ; 4 bytes @ 0x0
   256                           
   257  0070                     ___ftpack@arg:	
   258                           ; 2 bytes @ 0x0
   259                           
   260  0070                     ___fttol@f1:	
   261                           ; 3 bytes @ 0x0
   262                           
   263                           
   264                           ; 3 bytes @ 0x0
   265  0070                     	ds	2
   266  0072                     ___awmod@dividend:	
   267                           
   268                           ; 2 bytes @ 0x2
   269  0072                     	ds	1
   270  0073                     ___ftpack@exp:	
   271                           
   272                           ; 1 bytes @ 0x3
   273  0073                     	ds	1
   274  0074                     ??___awmod:	
   275  0074                     ??___fttol:	
   276                           ; 1 bytes @ 0x4
   277                           
   278  0074                     ___ftpack@sign:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283  0074                     	ds	1
   284  0075                     ??___ftpack:	
   285  0075                     ___awmod@counter:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 1 bytes @ 0x5
   290  0075                     	ds	1
   291  0076                     ___awmod@sign:	
   292                           
   293                           ; 1 bytes @ 0x6
   294  0076                     	ds	1
   295  0077                     ?___awdiv:	
   296  0077                     ___awdiv@divisor:	
   297                           ; 2 bytes @ 0x7
   298                           
   299                           
   300                           ; 2 bytes @ 0x7
   301  0077                     	ds	1
   302  0078                     ?___awtoft:	
   303  0078                     ?___ftmul:	
   304                           ; 3 bytes @ 0x8
   305                           
   306  0078                     ___fttol@sign1:	
   307                           ; 3 bytes @ 0x8
   308                           
   309  0078                     ___awtoft@c:	
   310                           ; 1 bytes @ 0x8
   311                           
   312  0078                     ___ftmul@f1:	
   313                           ; 2 bytes @ 0x8
   314                           
   315                           
   316                           ; 3 bytes @ 0x8
   317  0078                     	ds	1
   318  0079                     ___awdiv@dividend:	
   319  0079                     ___fttol@lval:	
   320                           ; 2 bytes @ 0x9
   321                           
   322                           
   323                           ; 4 bytes @ 0x9
   324  0079                     	ds	2
   325  007B                     ??___awdiv:	
   326  007B                     ??___awtoft:	
   327                           ; 1 bytes @ 0xB
   328                           
   329  007B                     ___ftmul@f2:	
   330                           ; 1 bytes @ 0xB
   331                           
   332                           
   333                           ; 3 bytes @ 0xB
   334  007B                     	ds	2
   335  007D                     ___awtoft@sign:	
   336  007D                     ___fttol@exp1:	
   337                           ; 1 bytes @ 0xD
   338                           
   339                           
   340                           ; 1 bytes @ 0xD
   341  007D                     	ds	1
   342                           
   343                           	psect	cstackBANK0
   344  0020                     __pcstackBANK0:	
   345  0020                     ??___ftmul:	
   346  0020                     ___awdiv@counter:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351  0020                     	ds	1
   352  0021                     ___awdiv@sign:	
   353                           
   354                           ; 1 bytes @ 0x1
   355  0021                     	ds	1
   356  0022                     ___awdiv@quotient:	
   357                           
   358                           ; 2 bytes @ 0x2
   359  0022                     	ds	2
   360  0024                     ___ftmul@exp:	
   361                           
   362                           ; 1 bytes @ 0x4
   363  0024                     	ds	1
   364  0025                     ___ftmul@f3_as_product:	
   365                           
   366                           ; 3 bytes @ 0x5
   367  0025                     	ds	3
   368  0028                     ___ftmul@cntr:	
   369                           
   370                           ; 1 bytes @ 0x8
   371  0028                     	ds	1
   372  0029                     ___ftmul@sign:	
   373                           
   374                           ; 1 bytes @ 0x9
   375  0029                     	ds	1
   376  002A                     ?___ftdiv:	
   377  002A                     ___ftdiv@f2:	
   378                           ; 3 bytes @ 0xA
   379                           
   380                           
   381                           ; 3 bytes @ 0xA
   382  002A                     	ds	3
   383  002D                     ___ftdiv@f1:	
   384                           
   385                           ; 3 bytes @ 0xD
   386  002D                     	ds	3
   387  0030                     ??___ftdiv:	
   388                           
   389                           ; 1 bytes @ 0x10
   390  0030                     	ds	4
   391  0034                     ___ftdiv@cntr:	
   392                           
   393                           ; 1 bytes @ 0x14
   394  0034                     	ds	1
   395  0035                     ___ftdiv@f3:	
   396                           
   397                           ; 3 bytes @ 0x15
   398  0035                     	ds	3
   399  0038                     ___ftdiv@exp:	
   400                           
   401                           ; 1 bytes @ 0x18
   402  0038                     	ds	1
   403  0039                     ___ftdiv@sign:	
   404                           
   405                           ; 1 bytes @ 0x19
   406  0039                     	ds	1
   407  003A                     ??_main:	
   408                           
   409                           ; 1 bytes @ 0x1A
   410  003A                     	ds	4
   411  003E                     _main$616:	
   412                           
   413                           ; 2 bytes @ 0x1E
   414  003E                     	ds	2
   415  0040                     main@i:	
   416                           
   417                           ; 2 bytes @ 0x20
   418  0040                     	ds	2
   419                           
   420                           	psect	maintext
   421  06AE                     __pmaintext:	
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 12 in file "uart_lm35.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  i               2   32[BANK0 ] int 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : B00/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       4       0       0       0
   443 ;;      Temps:          0       4       0       0       0
   444 ;;      Totals:         0       8       0       0       0
   445 ;;Total ram usage:        8 bytes
   446 ;; Hardware stack levels required when called:    2
   447 ;; This function calls:
   448 ;;		___awdiv
   449 ;;		___awmod
   450 ;;		___awtoft
   451 ;;		___ftdiv
   452 ;;		___ftmul
   453 ;;		___fttol
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _main
   461  06AE                     _main:	
   462                           
   463                           ;uart_lm35.c: 15: RC6 = 0;
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   467  06AE  1283               	bcf	3,5	;RP0=0, select bank0
   468  06AF  1303               	bcf	3,6	;RP1=0, select bank0
   469  06B0  1307               	bcf	7,6	;volatile
   470                           
   471                           ;uart_lm35.c: 16: TXSTAbits.TX9 = 0;
   472  06B1  1683               	bsf	3,5	;RP0=1, select bank1
   473  06B2  1303               	bcf	3,6	;RP1=0, select bank1
   474  06B3  1318               	bcf	24,6	;volatile
   475                           
   476                           ;uart_lm35.c: 17: TXSTAbits.TXEN = 1;
   477  06B4  1698               	bsf	24,5	;volatile
   478                           
   479                           ;uart_lm35.c: 18: TXSTAbits.SYNC = 0;
   480  06B5  1218               	bcf	24,4	;volatile
   481                           
   482                           ;uart_lm35.c: 19: TXSTAbits.BRGH = 0;
   483  06B6  1118               	bcf	24,2	;volatile
   484                           
   485                           ;uart_lm35.c: 20: BAUDCTLbits.BRG16 = 0;
   486  06B7  1683               	bsf	3,5	;RP0=1, select bank3
   487  06B8  1703               	bsf	3,6	;RP1=1, select bank3
   488  06B9  1187               	bcf	7,3	;volatile
   489                           
   490                           ;uart_lm35.c: 21: RCSTAbits.SPEN = 1;
   491  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   492  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   493  06BC  1798               	bsf	24,7	;volatile
   494                           
   495                           ;uart_lm35.c: 22: SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
   496  06BD  300C               	movlw	12
   497  06BE  1683               	bsf	3,5	;RP0=1, select bank1
   498  06BF  1303               	bcf	3,6	;RP1=0, select bank1
   499  06C0  0099               	movwf	25	;volatile
   500                           
   501                           ;uart_lm35.c: 25: TRISA0 = 1;
   502  06C1  1405               	bsf	5,0	;volatile
   503                           
   504                           ;uart_lm35.c: 26: ANSEL = 0x01;
   505  06C2  3001               	movlw	1
   506  06C3  1683               	bsf	3,5	;RP0=1, select bank3
   507  06C4  1703               	bsf	3,6	;RP1=1, select bank3
   508  06C5  0088               	movwf	8	;volatile
   509                           
   510                           ;uart_lm35.c: 28: ADCON1bits.ADFM = 1;
   511  06C6  1683               	bsf	3,5	;RP0=1, select bank1
   512  06C7  1303               	bcf	3,6	;RP1=0, select bank1
   513  06C8  179F               	bsf	31,7	;volatile
   514                           
   515                           ;uart_lm35.c: 29: ADCON1bits.VCFG0 = 0;
   516  06C9  121F               	bcf	31,4	;volatile
   517                           
   518                           ;uart_lm35.c: 30: ADCON1bits.VCFG1 = 0;
   519  06CA  129F               	bcf	31,5	;volatile
   520                           
   521                           ;uart_lm35.c: 32: ADCON0bits.CHS = 0b0000;
   522  06CB  30C3               	movlw	-61
   523  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   524  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   525  06CE  059F               	andwf	31,f	;volatile
   526                           
   527                           ;uart_lm35.c: 33: ADCON0bits.ADCS = 0b01;
   528  06CF  081F               	movf	31,w	;volatile
   529  06D0  393F               	andlw	-193
   530  06D1  3840               	iorlw	64
   531  06D2  009F               	movwf	31	;volatile
   532                           
   533                           ;uart_lm35.c: 35: ADCON0bits.ADON = 1;
   534  06D3  141F               	bsf	31,0	;volatile
   535                           
   536                           ;uart_lm35.c: 36: _delay((unsigned long)((30)*(8000000/4000000.0)));
   537  06D4  3013               	movlw	19
   538  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   539  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   540  06D7  00BA               	movwf	??_main
   541  06D8                     u1377:	
   542  06D8  0BBA               	decfsz	??_main,f
   543  06D9  2ED8               	goto	u1377
   544  06DA                     l1098:	
   545                           ;uart_lm35.c: 38: while (1) {
   546                           
   547                           
   548                           ;uart_lm35.c: 40: ADCON0bits.GO_DONE = 1;
   549  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   550  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   551  06DC  149F               	bsf	31,1	;volatile
   552  06DD                     l38:	
   553                           ;uart_lm35.c: 41: while (ADCON0bits.GO_DONE);
   554                           
   555  06DD  189F               	btfsc	31,1	;volatile
   556  06DE  2EDD               	goto	l38
   557                           
   558                           ;uart_lm35.c: 42: value_adc = ADRESH;
   559  06DF  081E               	movf	30,w	;volatile
   560  06E0  00BA               	movwf	??_main
   561  06E1  01BB               	clrf	??_main+1
   562  06E2  083A               	movf	??_main,w
   563  06E3  00D7               	movwf	_value_adc
   564  06E4  083B               	movf	??_main+1,w
   565  06E5  00D8               	movwf	_value_adc+1
   566                           
   567                           ;uart_lm35.c: 43: value_adc = (value_adc << 8) + ADRESL;
   568  06E6  0858               	movf	_value_adc+1,w
   569  06E7  00BB               	movwf	??_main+1
   570  06E8  0857               	movf	_value_adc,w
   571  06E9  00BA               	movwf	??_main
   572  06EA  083A               	movf	??_main,w
   573  06EB  00BB               	movwf	??_main+1
   574  06EC  01BA               	clrf	??_main
   575  06ED  1683               	bsf	3,5	;RP0=1, select bank1
   576  06EE  1303               	bcf	3,6	;RP1=0, select bank1
   577  06EF  081E               	movf	30,w	;volatile
   578  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   579  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   580  06F2  073A               	addwf	??_main,w
   581  06F3  00BC               	movwf	??_main+2
   582  06F4  3000               	movlw	0
   583  06F5  1803               	skipnc
   584  06F6  3001               	movlw	1
   585  06F7  073B               	addwf	??_main+1,w
   586  06F8  00BD               	movwf	??_main+3
   587  06F9  083C               	movf	??_main+2,w
   588  06FA  00D7               	movwf	_value_adc
   589  06FB  083D               	movf	??_main+3,w
   590  06FC  00D8               	movwf	_value_adc+1
   591                           
   592                           ;uart_lm35.c: 44: temp = value_adc;
   593  06FD  0858               	movf	_value_adc+1,w
   594  06FE  00F9               	movwf	___awtoft@c+1
   595  06FF  0857               	movf	_value_adc,w
   596  0700  00F8               	movwf	___awtoft@c
   597  0701  120A  118A  2366  120A  118A  	fcall	___awtoft
   598  0706  0878               	movf	?___awtoft,w
   599  0707  1283               	bcf	3,5	;RP0=0, select bank0
   600  0708  1303               	bcf	3,6	;RP1=0, select bank0
   601  0709  00D4               	movwf	_temp
   602  070A  0879               	movf	?___awtoft+1,w
   603  070B  00D5               	movwf	_temp+1
   604  070C  087A               	movf	?___awtoft+2,w
   605  070D  00D6               	movwf	_temp+2
   606                           
   607                           ;uart_lm35.c: 45: temp = (temp * 500.0) / 1023.0;
   608  070E  30C0               	movlw	192
   609  070F  00AA               	movwf	___ftdiv@f2
   610  0710  307F               	movlw	127
   611  0711  00AB               	movwf	___ftdiv@f2+1
   612  0712  3044               	movlw	68
   613  0713  00AC               	movwf	___ftdiv@f2+2
   614  0714  3000               	movlw	0
   615  0715  00F8               	movwf	___ftmul@f1
   616  0716  30FA               	movlw	250
   617  0717  00F9               	movwf	___ftmul@f1+1
   618  0718  3043               	movlw	67
   619  0719  00FA               	movwf	___ftmul@f1+2
   620  071A  0854               	movf	_temp,w
   621  071B  00FB               	movwf	___ftmul@f2
   622  071C  0855               	movf	_temp+1,w
   623  071D  00FC               	movwf	___ftmul@f2+1
   624  071E  0856               	movf	_temp+2,w
   625  071F  00FD               	movwf	___ftmul@f2+2
   626  0720  120A  118A  25DD  120A  118A  	fcall	___ftmul
   627  0725  0878               	movf	?___ftmul,w
   628  0726  1283               	bcf	3,5	;RP0=0, select bank0
   629  0727  1303               	bcf	3,6	;RP1=0, select bank0
   630  0728  00AD               	movwf	___ftdiv@f1
   631  0729  0879               	movf	?___ftmul+1,w
   632  072A  00AE               	movwf	___ftdiv@f1+1
   633  072B  087A               	movf	?___ftmul+2,w
   634  072C  00AF               	movwf	___ftdiv@f1+2
   635  072D  120A  118A  2525  120A  118A  	fcall	___ftdiv
   636  0732  1283               	bcf	3,5	;RP0=0, select bank0
   637  0733  1303               	bcf	3,6	;RP1=0, select bank0
   638  0734  082A               	movf	?___ftdiv,w
   639  0735  00D4               	movwf	_temp
   640  0736  082B               	movf	?___ftdiv+1,w
   641  0737  00D5               	movwf	_temp+1
   642  0738  082C               	movf	?___ftdiv+2,w
   643  0739  00D6               	movwf	_temp+2
   644                           
   645                           ;uart_lm35.c: 46: lm35 = (char) temp;
   646  073A  0854               	movf	_temp,w
   647  073B  00F0               	movwf	___fttol@f1
   648  073C  0855               	movf	_temp+1,w
   649  073D  00F1               	movwf	___fttol@f1+1
   650  073E  0856               	movf	_temp+2,w
   651  073F  00F2               	movwf	___fttol@f1+2
   652  0740  120A  118A  2499  120A  118A  	fcall	___fttol
   653  0745  0870               	movf	?___fttol,w
   654  0746  1283               	bcf	3,5	;RP0=0, select bank0
   655  0747  1303               	bcf	3,6	;RP1=0, select bank0
   656  0748  00BA               	movwf	??_main
   657  0749  083A               	movf	??_main,w
   658  074A  00D9               	movwf	_lm35
   659                           
   660                           ;uart_lm35.c: 47: buffer_TX[6] = (lm35 / 100) + '0';
   661  074B  3064               	movlw	100
   662  074C  00F7               	movwf	___awdiv@divisor
   663  074D  3000               	movlw	0
   664  074E  00F8               	movwf	___awdiv@divisor+1
   665  074F  0859               	movf	_lm35,w
   666  0750  00BA               	movwf	??_main
   667  0751  01BB               	clrf	??_main+1
   668  0752  083A               	movf	??_main,w
   669  0753  00F9               	movwf	___awdiv@dividend
   670  0754  083B               	movf	??_main+1,w
   671  0755  00FA               	movwf	___awdiv@dividend+1
   672  0756  120A  118A  23D2  120A  118A  	fcall	___awdiv
   673  075B  0877               	movf	?___awdiv,w
   674  075C  3E30               	addlw	48
   675  075D  1283               	bcf	3,5	;RP0=0, select bank0
   676  075E  1303               	bcf	3,6	;RP1=0, select bank0
   677  075F  00BC               	movwf	??_main+2
   678  0760  083C               	movf	??_main+2,w
   679  0761  00C8               	movwf	_buffer_TX+6
   680                           
   681                           ;uart_lm35.c: 48: buffer_TX[7] = (lm35 % 100) / 10 + '0';
   682  0762  300A               	movlw	10
   683  0763  00F7               	movwf	___awdiv@divisor
   684  0764  3000               	movlw	0
   685  0765  00F8               	movwf	___awdiv@divisor+1
   686  0766  0859               	movf	_lm35,w
   687  0767  00BA               	movwf	??_main
   688  0768  01BB               	clrf	??_main+1
   689  0769  083A               	movf	??_main,w
   690  076A  00F2               	movwf	___awmod@dividend
   691  076B  083B               	movf	??_main+1,w
   692  076C  00F3               	movwf	___awmod@dividend+1
   693  076D  3064               	movlw	100
   694  076E  00F0               	movwf	___awmod@divisor
   695  076F  3000               	movlw	0
   696  0770  00F1               	movwf	___awmod@divisor+1
   697  0771  120A  118A  2387  120A  118A  	fcall	___awmod
   698  0776  0871               	movf	?___awmod+1,w
   699  0777  00FA               	movwf	___awdiv@dividend+1
   700  0778  0870               	movf	?___awmod,w
   701  0779  00F9               	movwf	___awdiv@dividend
   702  077A  120A  118A  23D2  120A  118A  	fcall	___awdiv
   703  077F  0877               	movf	?___awdiv,w
   704  0780  3E30               	addlw	48
   705  0781  1283               	bcf	3,5	;RP0=0, select bank0
   706  0782  1303               	bcf	3,6	;RP1=0, select bank0
   707  0783  00BC               	movwf	??_main+2
   708  0784  083C               	movf	??_main+2,w
   709  0785  00C9               	movwf	_buffer_TX+7
   710                           
   711                           ;uart_lm35.c: 49: buffer_TX[8] = (lm35 % 100) % 10 + '0';
   712  0786  0859               	movf	_lm35,w
   713  0787  00BA               	movwf	??_main
   714  0788  01BB               	clrf	??_main+1
   715  0789  083A               	movf	??_main,w
   716  078A  00F2               	movwf	___awmod@dividend
   717  078B  083B               	movf	??_main+1,w
   718  078C  00F3               	movwf	___awmod@dividend+1
   719  078D  3064               	movlw	100
   720  078E  00F0               	movwf	___awmod@divisor
   721  078F  3000               	movlw	0
   722  0790  00F1               	movwf	___awmod@divisor+1
   723  0791  120A  118A  2387  120A  118A  	fcall	___awmod
   724  0796  0871               	movf	?___awmod+1,w
   725  0797  1283               	bcf	3,5	;RP0=0, select bank0
   726  0798  1303               	bcf	3,6	;RP1=0, select bank0
   727  0799  00BF               	movwf	_main$616+1
   728  079A  0870               	movf	?___awmod,w
   729  079B  00BE               	movwf	_main$616
   730                           
   731                           ;uart_lm35.c: 49: buffer_TX[8] = (lm35 % 100) % 10 + '0';
   732  079C  300A               	movlw	10
   733  079D  00F0               	movwf	___awmod@divisor
   734  079E  3000               	movlw	0
   735  079F  00F1               	movwf	___awmod@divisor+1
   736  07A0  083F               	movf	_main$616+1,w
   737  07A1  00F3               	movwf	___awmod@dividend+1
   738  07A2  083E               	movf	_main$616,w
   739  07A3  00F2               	movwf	___awmod@dividend
   740  07A4  120A  118A  2387  120A  118A  	fcall	___awmod
   741  07A9  0870               	movf	?___awmod,w
   742  07AA  3E30               	addlw	48
   743  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   744  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   745  07AD  00BA               	movwf	??_main
   746  07AE  083A               	movf	??_main,w
   747  07AF  00CA               	movwf	_buffer_TX+8
   748                           
   749                           ;uart_lm35.c: 51: for (int i = 0; i < 17; i++) {
   750  07B0  01C0               	clrf	main@i
   751  07B1  01C1               	clrf	main@i+1
   752  07B2  0841               	movf	main@i+1,w
   753  07B3  3A80               	xorlw	128
   754  07B4  00FF               	movwf	127
   755  07B5  3080               	movlw	128
   756  07B6  027F               	subwf	127,w
   757  07B7  1D03               	skipz
   758  07B8  2FBB               	goto	u1345
   759  07B9  3011               	movlw	17
   760  07BA  0240               	subwf	main@i,w
   761  07BB                     u1345:	
   762  07BB  1803               	btfsc	3,0
   763  07BC  2FDA               	goto	l1130
   764  07BD                     l43:	
   765                           ;uart_lm35.c: 53: while (!TXSTAbits.TRMT) {
   766                           
   767  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   768  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   769  07BF  1C98               	btfss	24,1	;volatile
   770  07C0  2FBD               	goto	l43
   771                           
   772                           ;uart_lm35.c: 54: }
   773                           ;uart_lm35.c: 56: TXREG = buffer_TX[i];
   774  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   775  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   776  07C3  0840               	movf	main@i,w
   777  07C4  3E42               	addlw	(low (_buffer_TX| 0))& (0+255)
   778  07C5  0084               	movwf	4
   779  07C6  1383               	bcf	3,7	;select IRP bank0
   780  07C7  0800               	movf	0,w
   781  07C8  0099               	movwf	25	;volatile
   782  07C9  3001               	movlw	1
   783  07CA  07C0               	addwf	main@i,f
   784  07CB  1803               	skipnc
   785  07CC  0AC1               	incf	main@i+1,f
   786  07CD  3000               	movlw	0
   787  07CE  07C1               	addwf	main@i+1,f
   788  07CF  0841               	movf	main@i+1,w
   789  07D0  3A80               	xorlw	128
   790  07D1  00FF               	movwf	127
   791  07D2  3080               	movlw	128
   792  07D3  027F               	subwf	127,w
   793  07D4  1D03               	skipz
   794  07D5  2FD8               	goto	u1365
   795  07D6  3011               	movlw	17
   796  07D7  0240               	subwf	main@i,w
   797  07D8                     u1365:	
   798  07D8  1C03               	skipc
   799  07D9  2FBD               	goto	l43
   800  07DA                     l1130:	
   801                           
   802                           ;uart_lm35.c: 57: }
   803                           ;uart_lm35.c: 58: _delay((unsigned long)((100)*(8000000/4000.0)));
   804  07DA  3002               	movlw	2
   805  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   806  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   807  07DD  00BC               	movwf	??_main+2
   808  07DE  3004               	movlw	4
   809  07DF  00BB               	movwf	??_main+1
   810  07E0  30B9               	movlw	185
   811  07E1  00BA               	movwf	??_main
   812  07E2                     u1387:	
   813  07E2  0BBA               	decfsz	??_main,f
   814  07E3  2FE2               	goto	u1387
   815  07E4  0BBB               	decfsz	??_main+1,f
   816  07E5  2FE2               	goto	u1387
   817  07E6  0BBC               	decfsz	??_main+2,f
   818  07E7  2FE2               	goto	u1387
   819  07E8  2FE9               	nop2
   820  07E9  2EDA               	goto	l1098
   821  07EA                     __end_of_main:	
   822                           
   823                           	psect	text1
   824  0499                     __ptext1:	
   825 ;; *************** function ___fttol *****************
   826 ;; Defined at:
   827 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  f1              3    0[COMMON] float 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  lval            4    9[COMMON] unsigned long 
   832 ;;  exp1            1   13[COMMON] unsigned char 
   833 ;;  sign1           1    8[COMMON] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  4    0[COMMON] long 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         4       0       0       0       0
   844 ;;      Locals:         6       0       0       0       0
   845 ;;      Temps:          4       0       0       0       0
   846 ;;      Totals:        14       0       0       0       0
   847 ;;Total ram usage:       14 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function ___fttol
   858  0499                     ___fttol:	
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   862  0499  0870               	movf	___fttol@f1,w
   863  049A  00F4               	movwf	??___fttol
   864  049B  0871               	movf	___fttol@f1+1,w
   865  049C  00F5               	movwf	??___fttol+1
   866  049D  0872               	movf	___fttol@f1+2,w
   867  049E  00F6               	movwf	??___fttol+2
   868  049F  1003               	clrc
   869  04A0  0D75               	rlf	??___fttol+1,w
   870  04A1  0D76               	rlf	??___fttol+2,w
   871  04A2  00F7               	movwf	??___fttol+3
   872  04A3  0877               	movf	??___fttol+3,w
   873  04A4  00FD               	movwf	___fttol@exp1
   874  04A5  087D               	movf	___fttol@exp1,w
   875  04A6  1D03               	btfss	3,2
   876  04A7  2CB1               	goto	l1044
   877  04A8  3000               	movlw	0
   878  04A9  00F3               	movwf	?___fttol+3
   879  04AA  3000               	movlw	0
   880  04AB  00F2               	movwf	?___fttol+2
   881  04AC  3000               	movlw	0
   882  04AD  00F1               	movwf	?___fttol+1
   883  04AE  3000               	movlw	0
   884  04AF  00F0               	movwf	?___fttol
   885  04B0  0008               	return
   886  04B1                     l1044:	
   887  04B1  0870               	movf	___fttol@f1,w
   888  04B2  00F4               	movwf	??___fttol
   889  04B3  0871               	movf	___fttol@f1+1,w
   890  04B4  00F5               	movwf	??___fttol+1
   891  04B5  0872               	movf	___fttol@f1+2,w
   892  04B6  00F6               	movwf	??___fttol+2
   893  04B7  3017               	movlw	23
   894  04B8                     u1245:	
   895  04B8  1003               	clrc
   896  04B9  0CF6               	rrf	??___fttol+2,f
   897  04BA  0CF5               	rrf	??___fttol+1,f
   898  04BB  0CF4               	rrf	??___fttol,f
   899  04BC  3EFF               	addlw	-1
   900  04BD  1D03               	skipz
   901  04BE  2CB8               	goto	u1245
   902  04BF  0874               	movf	??___fttol,w
   903  04C0  00F7               	movwf	??___fttol+3
   904  04C1  0877               	movf	??___fttol+3,w
   905  04C2  00F8               	movwf	___fttol@sign1
   906  04C3  17F1               	bsf	___fttol@f1+1,7
   907  04C4  30FF               	movlw	255
   908  04C5  05F0               	andwf	___fttol@f1,f
   909  04C6  30FF               	movlw	255
   910  04C7  05F1               	andwf	___fttol@f1+1,f
   911  04C8  3000               	movlw	0
   912  04C9  05F2               	andwf	___fttol@f1+2,f
   913  04CA  0870               	movf	___fttol@f1,w
   914  04CB  00F9               	movwf	___fttol@lval
   915  04CC  0871               	movf	___fttol@f1+1,w
   916  04CD  00FA               	movwf	___fttol@lval+1
   917  04CE  0872               	movf	___fttol@f1+2,w
   918  04CF  00FB               	movwf	___fttol@lval+2
   919  04D0  01FC               	clrf	___fttol@lval+3
   920  04D1  308E               	movlw	142
   921  04D2  02FD               	subwf	___fttol@exp1,f
   922  04D3  1FFD               	btfss	___fttol@exp1,7
   923  04D4  2CF3               	goto	l1064
   924  04D5  087D               	movf	___fttol@exp1,w
   925  04D6  3A80               	xorlw	128
   926  04D7  3E8F               	addlw	143
   927  04D8  1803               	skipnc
   928  04D9  2CE3               	goto	l1062
   929  04DA  3000               	movlw	0
   930  04DB  00F3               	movwf	?___fttol+3
   931  04DC  3000               	movlw	0
   932  04DD  00F2               	movwf	?___fttol+2
   933  04DE  3000               	movlw	0
   934  04DF  00F1               	movwf	?___fttol+1
   935  04E0  3000               	movlw	0
   936  04E1  00F0               	movwf	?___fttol
   937  04E2  0008               	return
   938  04E3                     l1062:	
   939  04E3  3001               	movlw	1
   940  04E4                     u1275:	
   941  04E4  1003               	clrc
   942  04E5  0CFC               	rrf	___fttol@lval+3,f
   943  04E6  0CFB               	rrf	___fttol@lval+2,f
   944  04E7  0CFA               	rrf	___fttol@lval+1,f
   945  04E8  0CF9               	rrf	___fttol@lval,f
   946  04E9  3EFF               	addlw	-1
   947  04EA  1D03               	skipz
   948  04EB  2CE4               	goto	u1275
   949  04EC  3001               	movlw	1
   950  04ED  00F4               	movwf	??___fttol
   951  04EE  0874               	movf	??___fttol,w
   952  04EF  07FD               	addwf	___fttol@exp1,f
   953  04F0  1903               	btfsc	3,2
   954  04F1  2D0E               	goto	l1072
   955  04F2  2CE3               	goto	l1062
   956  04F3                     l1064:	
   957  04F3  3018               	movlw	24
   958  04F4  027D               	subwf	___fttol@exp1,w
   959  04F5  1C03               	skipc
   960  04F6  2D0B               	goto	l384
   961  04F7  3000               	movlw	0
   962  04F8  00F3               	movwf	?___fttol+3
   963  04F9  3000               	movlw	0
   964  04FA  00F2               	movwf	?___fttol+2
   965  04FB  3000               	movlw	0
   966  04FC  00F1               	movwf	?___fttol+1
   967  04FD  3000               	movlw	0
   968  04FE  00F0               	movwf	?___fttol
   969  04FF  0008               	return
   970  0500                     l1070:	
   971  0500  3001               	movlw	1
   972  0501  00F4               	movwf	??___fttol
   973  0502                     u1305:	
   974  0502  1003               	clrc
   975  0503  0DF9               	rlf	___fttol@lval,f
   976  0504  0DFA               	rlf	___fttol@lval+1,f
   977  0505  0DFB               	rlf	___fttol@lval+2,f
   978  0506  0DFC               	rlf	___fttol@lval+3,f
   979  0507  0BF4               	decfsz	??___fttol,f
   980  0508  2D02               	goto	u1305
   981  0509  3001               	movlw	1
   982  050A  02FD               	subwf	___fttol@exp1,f
   983  050B                     l384:	
   984  050B  087D               	movf	___fttol@exp1,w
   985  050C  1D03               	btfss	3,2
   986  050D  2D00               	goto	l1070
   987  050E                     l1072:	
   988  050E  0878               	movf	___fttol@sign1,w
   989  050F  1903               	btfsc	3,2
   990  0510  2D1C               	goto	l1076
   991  0511  09F9               	comf	___fttol@lval,f
   992  0512  09FA               	comf	___fttol@lval+1,f
   993  0513  09FB               	comf	___fttol@lval+2,f
   994  0514  09FC               	comf	___fttol@lval+3,f
   995  0515  0AF9               	incf	___fttol@lval,f
   996  0516  1903               	skipnz
   997  0517  0AFA               	incf	___fttol@lval+1,f
   998  0518  1903               	skipnz
   999  0519  0AFB               	incf	___fttol@lval+2,f
  1000  051A  1903               	skipnz
  1001  051B  0AFC               	incf	___fttol@lval+3,f
  1002  051C                     l1076:	
  1003  051C  087C               	movf	___fttol@lval+3,w
  1004  051D  00F3               	movwf	?___fttol+3
  1005  051E  087B               	movf	___fttol@lval+2,w
  1006  051F  00F2               	movwf	?___fttol+2
  1007  0520  087A               	movf	___fttol@lval+1,w
  1008  0521  00F1               	movwf	?___fttol+1
  1009  0522  0879               	movf	___fttol@lval,w
  1010  0523  00F0               	movwf	?___fttol
  1011  0524  0008               	return
  1012  0525                     __end_of___fttol:	
  1013                           
  1014                           	psect	text2
  1015  05DD                     __ptext2:	
  1016 ;; *************** function ___ftmul *****************
  1017 ;; Defined at:
  1018 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  f1              3    8[COMMON] float 
  1021 ;;  f2              3   11[COMMON] float 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  1024 ;;  sign            1    9[BANK0 ] unsigned char 
  1025 ;;  cntr            1    8[BANK0 ] unsigned char 
  1026 ;;  exp             1    4[BANK0 ] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  3    8[COMMON] float 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, pclath, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         6       0       0       0       0
  1037 ;;      Locals:         0       6       0       0       0
  1038 ;;      Temps:          0       4       0       0       0
  1039 ;;      Totals:         6      10       0       0       0
  1040 ;;Total ram usage:       16 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    1
  1043 ;; This function calls:
  1044 ;;		___ftpack
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function ___ftmul
  1052  05DD                     ___ftmul:	
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1056  05DD  0878               	movf	___ftmul@f1,w
  1057  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1058  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1059  05E0  00A0               	movwf	??___ftmul
  1060  05E1  0879               	movf	___ftmul@f1+1,w
  1061  05E2  00A1               	movwf	??___ftmul+1
  1062  05E3  087A               	movf	___ftmul@f1+2,w
  1063  05E4  00A2               	movwf	??___ftmul+2
  1064  05E5  1003               	clrc
  1065  05E6  0D21               	rlf	??___ftmul+1,w
  1066  05E7  0D22               	rlf	??___ftmul+2,w
  1067  05E8  00A3               	movwf	??___ftmul+3
  1068  05E9  0823               	movf	??___ftmul+3,w
  1069  05EA  00A4               	movwf	___ftmul@exp
  1070  05EB  0824               	movf	___ftmul@exp,w
  1071  05EC  1D03               	btfss	3,2
  1072  05ED  2DF5               	goto	l994
  1073  05EE  3000               	movlw	0
  1074  05EF  00F8               	movwf	?___ftmul
  1075  05F0  3000               	movlw	0
  1076  05F1  00F9               	movwf	?___ftmul+1
  1077  05F2  3000               	movlw	0
  1078  05F3  00FA               	movwf	?___ftmul+2
  1079  05F4  0008               	return
  1080  05F5                     l994:	
  1081  05F5  087B               	movf	___ftmul@f2,w
  1082  05F6  00A0               	movwf	??___ftmul
  1083  05F7  087C               	movf	___ftmul@f2+1,w
  1084  05F8  00A1               	movwf	??___ftmul+1
  1085  05F9  087D               	movf	___ftmul@f2+2,w
  1086  05FA  00A2               	movwf	??___ftmul+2
  1087  05FB  1003               	clrc
  1088  05FC  0D21               	rlf	??___ftmul+1,w
  1089  05FD  0D22               	rlf	??___ftmul+2,w
  1090  05FE  00A3               	movwf	??___ftmul+3
  1091  05FF  0823               	movf	??___ftmul+3,w
  1092  0600  00A9               	movwf	___ftmul@sign
  1093  0601  0829               	movf	___ftmul@sign,w
  1094  0602  1D03               	btfss	3,2
  1095  0603  2E0B               	goto	l1000
  1096  0604  3000               	movlw	0
  1097  0605  00F8               	movwf	?___ftmul
  1098  0606  3000               	movlw	0
  1099  0607  00F9               	movwf	?___ftmul+1
  1100  0608  3000               	movlw	0
  1101  0609  00FA               	movwf	?___ftmul+2
  1102  060A  0008               	return
  1103  060B                     l1000:	
  1104  060B  0829               	movf	___ftmul@sign,w
  1105  060C  3E7B               	addlw	123
  1106  060D  00A0               	movwf	??___ftmul
  1107  060E  0820               	movf	??___ftmul,w
  1108  060F  07A4               	addwf	___ftmul@exp,f
  1109  0610  0878               	movf	___ftmul@f1,w
  1110  0611  00A0               	movwf	??___ftmul
  1111  0612  0879               	movf	___ftmul@f1+1,w
  1112  0613  00A1               	movwf	??___ftmul+1
  1113  0614  087A               	movf	___ftmul@f1+2,w
  1114  0615  00A2               	movwf	??___ftmul+2
  1115  0616  3010               	movlw	16
  1116  0617                     u1115:	
  1117  0617  1003               	clrc
  1118  0618  0CA2               	rrf	??___ftmul+2,f
  1119  0619  0CA1               	rrf	??___ftmul+1,f
  1120  061A  0CA0               	rrf	??___ftmul,f
  1121  061B  3EFF               	addlw	-1
  1122  061C  1D03               	skipz
  1123  061D  2E17               	goto	u1115
  1124  061E  0820               	movf	??___ftmul,w
  1125  061F  00A3               	movwf	??___ftmul+3
  1126  0620  0823               	movf	??___ftmul+3,w
  1127  0621  00A9               	movwf	___ftmul@sign
  1128  0622  087B               	movf	___ftmul@f2,w
  1129  0623  00A0               	movwf	??___ftmul
  1130  0624  087C               	movf	___ftmul@f2+1,w
  1131  0625  00A1               	movwf	??___ftmul+1
  1132  0626  087D               	movf	___ftmul@f2+2,w
  1133  0627  00A2               	movwf	??___ftmul+2
  1134  0628  3010               	movlw	16
  1135  0629                     u1125:	
  1136  0629  1003               	clrc
  1137  062A  0CA2               	rrf	??___ftmul+2,f
  1138  062B  0CA1               	rrf	??___ftmul+1,f
  1139  062C  0CA0               	rrf	??___ftmul,f
  1140  062D  3EFF               	addlw	-1
  1141  062E  1D03               	skipz
  1142  062F  2E29               	goto	u1125
  1143  0630  0820               	movf	??___ftmul,w
  1144  0631  00A3               	movwf	??___ftmul+3
  1145  0632  0823               	movf	??___ftmul+3,w
  1146  0633  06A9               	xorwf	___ftmul@sign,f
  1147  0634  3080               	movlw	128
  1148  0635  00A0               	movwf	??___ftmul
  1149  0636  0820               	movf	??___ftmul,w
  1150  0637  05A9               	andwf	___ftmul@sign,f
  1151  0638  17F9               	bsf	___ftmul@f1+1,7
  1152  0639  17FC               	bsf	___ftmul@f2+1,7
  1153  063A  30FF               	movlw	255
  1154  063B  05FB               	andwf	___ftmul@f2,f
  1155  063C  30FF               	movlw	255
  1156  063D  05FC               	andwf	___ftmul@f2+1,f
  1157  063E  3000               	movlw	0
  1158  063F  05FD               	andwf	___ftmul@f2+2,f
  1159  0640  3000               	movlw	0
  1160  0641  00A5               	movwf	___ftmul@f3_as_product
  1161  0642  3000               	movlw	0
  1162  0643  00A6               	movwf	___ftmul@f3_as_product+1
  1163  0644  3000               	movlw	0
  1164  0645  00A7               	movwf	___ftmul@f3_as_product+2
  1165  0646  3007               	movlw	7
  1166  0647  00A0               	movwf	??___ftmul
  1167  0648  0820               	movf	??___ftmul,w
  1168  0649  00A8               	movwf	___ftmul@cntr
  1169  064A                     l1012:	
  1170  064A  1C78               	btfss	___ftmul@f1,0
  1171  064B  2E5A               	goto	l1016
  1172  064C  087B               	movf	___ftmul@f2,w
  1173  064D  07A5               	addwf	___ftmul@f3_as_product,f
  1174  064E  087C               	movf	___ftmul@f2+1,w
  1175  064F  1103               	clrz
  1176  0650  1803               	skipnc
  1177  0651  0A7C               	incf	___ftmul@f2+1,w
  1178  0652  1D03               	btfss	3,2
  1179  0653  07A6               	addwf	___ftmul@f3_as_product+1,f
  1180  0654  087D               	movf	___ftmul@f2+2,w
  1181  0655  1103               	clrz
  1182  0656  1803               	skipnc
  1183  0657  0A7D               	incf	___ftmul@f2+2,w
  1184  0658  1D03               	btfss	3,2
  1185  0659  07A7               	addwf	___ftmul@f3_as_product+2,f
  1186  065A                     l1016:	
  1187  065A  3001               	movlw	1
  1188  065B                     u1155:	
  1189  065B  1003               	clrc
  1190  065C  0CFA               	rrf	___ftmul@f1+2,f
  1191  065D  0CF9               	rrf	___ftmul@f1+1,f
  1192  065E  0CF8               	rrf	___ftmul@f1,f
  1193  065F  3EFF               	addlw	-1
  1194  0660  1D03               	skipz
  1195  0661  2E5B               	goto	u1155
  1196  0662  3001               	movlw	1
  1197  0663                     u1165:	
  1198  0663  1003               	clrc
  1199  0664  0DFB               	rlf	___ftmul@f2,f
  1200  0665  0DFC               	rlf	___ftmul@f2+1,f
  1201  0666  0DFD               	rlf	___ftmul@f2+2,f
  1202  0667  3EFF               	addlw	-1
  1203  0668  1D03               	skipz
  1204  0669  2E63               	goto	u1165
  1205  066A  3001               	movlw	1
  1206  066B  02A8               	subwf	___ftmul@cntr,f
  1207  066C  1D03               	btfss	3,2
  1208  066D  2E4A               	goto	l1012
  1209  066E  3009               	movlw	9
  1210  066F  00A0               	movwf	??___ftmul
  1211  0670  0820               	movf	??___ftmul,w
  1212  0671  00A8               	movwf	___ftmul@cntr
  1213  0672                     l1024:	
  1214  0672  1C78               	btfss	___ftmul@f1,0
  1215  0673  2E82               	goto	l1028
  1216  0674  087B               	movf	___ftmul@f2,w
  1217  0675  07A5               	addwf	___ftmul@f3_as_product,f
  1218  0676  087C               	movf	___ftmul@f2+1,w
  1219  0677  1103               	clrz
  1220  0678  1803               	skipnc
  1221  0679  0A7C               	incf	___ftmul@f2+1,w
  1222  067A  1D03               	btfss	3,2
  1223  067B  07A6               	addwf	___ftmul@f3_as_product+1,f
  1224  067C  087D               	movf	___ftmul@f2+2,w
  1225  067D  1103               	clrz
  1226  067E  1803               	skipnc
  1227  067F  0A7D               	incf	___ftmul@f2+2,w
  1228  0680  1D03               	btfss	3,2
  1229  0681  07A7               	addwf	___ftmul@f3_as_product+2,f
  1230  0682                     l1028:	
  1231  0682  3001               	movlw	1
  1232  0683                     u1205:	
  1233  0683  1003               	clrc
  1234  0684  0CFA               	rrf	___ftmul@f1+2,f
  1235  0685  0CF9               	rrf	___ftmul@f1+1,f
  1236  0686  0CF8               	rrf	___ftmul@f1,f
  1237  0687  3EFF               	addlw	-1
  1238  0688  1D03               	skipz
  1239  0689  2E83               	goto	u1205
  1240  068A  3001               	movlw	1
  1241  068B                     u1215:	
  1242  068B  1003               	clrc
  1243  068C  0CA7               	rrf	___ftmul@f3_as_product+2,f
  1244  068D  0CA6               	rrf	___ftmul@f3_as_product+1,f
  1245  068E  0CA5               	rrf	___ftmul@f3_as_product,f
  1246  068F  3EFF               	addlw	-1
  1247  0690  1D03               	skipz
  1248  0691  2E8B               	goto	u1215
  1249  0692  3001               	movlw	1
  1250  0693  02A8               	subwf	___ftmul@cntr,f
  1251  0694  1D03               	btfss	3,2
  1252  0695  2E72               	goto	l1024
  1253  0696  0825               	movf	___ftmul@f3_as_product,w
  1254  0697  00F0               	movwf	___ftpack@arg
  1255  0698  0826               	movf	___ftmul@f3_as_product+1,w
  1256  0699  00F1               	movwf	___ftpack@arg+1
  1257  069A  0827               	movf	___ftmul@f3_as_product+2,w
  1258  069B  00F2               	movwf	___ftpack@arg+2
  1259  069C  0824               	movf	___ftmul@exp,w
  1260  069D  00A0               	movwf	??___ftmul
  1261  069E  0820               	movf	??___ftmul,w
  1262  069F  00F3               	movwf	___ftpack@exp
  1263  06A0  0829               	movf	___ftmul@sign,w
  1264  06A1  00A1               	movwf	??___ftmul+1
  1265  06A2  0821               	movf	??___ftmul+1,w
  1266  06A3  00F4               	movwf	___ftpack@sign
  1267  06A4  120A  118A  242D   	fcall	___ftpack
  1268  06A7  0870               	movf	?___ftpack,w
  1269  06A8  00F8               	movwf	?___ftmul
  1270  06A9  0871               	movf	?___ftpack+1,w
  1271  06AA  00F9               	movwf	?___ftmul+1
  1272  06AB  0872               	movf	?___ftpack+2,w
  1273  06AC  00FA               	movwf	?___ftmul+2
  1274  06AD  0008               	return
  1275  06AE                     __end_of___ftmul:	
  1276                           
  1277                           	psect	text3
  1278  0525                     __ptext3:	
  1279 ;; *************** function ___ftdiv *****************
  1280 ;; Defined at:
  1281 ;;		line 56 in file "D:\mplab\sources\common\ftdiv.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  f2              3   10[BANK0 ] float 
  1284 ;;  f1              3   13[BANK0 ] float 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  f3              3   21[BANK0 ] float 
  1287 ;;  sign            1   25[BANK0 ] unsigned char 
  1288 ;;  exp             1   24[BANK0 ] unsigned char 
  1289 ;;  cntr            1   20[BANK0 ] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  3   10[BANK0 ] float 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       6       0       0       0
  1300 ;;      Locals:         0       6       0       0       0
  1301 ;;      Temps:          0       4       0       0       0
  1302 ;;      Totals:         0      16       0       0       0
  1303 ;;Total ram usage:       16 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		___ftpack
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function ___ftdiv
  1315  0525                     ___ftdiv:	
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1319  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0527  082D               	movf	___ftdiv@f1,w
  1322  0528  00B0               	movwf	??___ftdiv
  1323  0529  082E               	movf	___ftdiv@f1+1,w
  1324  052A  00B1               	movwf	??___ftdiv+1
  1325  052B  082F               	movf	___ftdiv@f1+2,w
  1326  052C  00B2               	movwf	??___ftdiv+2
  1327  052D  1003               	clrc
  1328  052E  0D31               	rlf	??___ftdiv+1,w
  1329  052F  0D32               	rlf	??___ftdiv+2,w
  1330  0530  00B3               	movwf	??___ftdiv+3
  1331  0531  0833               	movf	??___ftdiv+3,w
  1332  0532  00B8               	movwf	___ftdiv@exp
  1333  0533  0838               	movf	___ftdiv@exp,w
  1334  0534  1D03               	btfss	3,2
  1335  0535  2D3D               	goto	l952
  1336  0536  3000               	movlw	0
  1337  0537  00AA               	movwf	?___ftdiv
  1338  0538  3000               	movlw	0
  1339  0539  00AB               	movwf	?___ftdiv+1
  1340  053A  3000               	movlw	0
  1341  053B  00AC               	movwf	?___ftdiv+2
  1342  053C  0008               	return
  1343  053D                     l952:	
  1344  053D  082A               	movf	___ftdiv@f2,w
  1345  053E  00B0               	movwf	??___ftdiv
  1346  053F  082B               	movf	___ftdiv@f2+1,w
  1347  0540  00B1               	movwf	??___ftdiv+1
  1348  0541  082C               	movf	___ftdiv@f2+2,w
  1349  0542  00B2               	movwf	??___ftdiv+2
  1350  0543  1003               	clrc
  1351  0544  0D31               	rlf	??___ftdiv+1,w
  1352  0545  0D32               	rlf	??___ftdiv+2,w
  1353  0546  00B3               	movwf	??___ftdiv+3
  1354  0547  0833               	movf	??___ftdiv+3,w
  1355  0548  00B9               	movwf	___ftdiv@sign
  1356  0549  0839               	movf	___ftdiv@sign,w
  1357  054A  1D03               	btfss	3,2
  1358  054B  2D53               	goto	l958
  1359  054C  3000               	movlw	0
  1360  054D  00AA               	movwf	?___ftdiv
  1361  054E  3000               	movlw	0
  1362  054F  00AB               	movwf	?___ftdiv+1
  1363  0550  3000               	movlw	0
  1364  0551  00AC               	movwf	?___ftdiv+2
  1365  0552  0008               	return
  1366  0553                     l958:	
  1367  0553  3000               	movlw	0
  1368  0554  00B5               	movwf	___ftdiv@f3
  1369  0555  3000               	movlw	0
  1370  0556  00B6               	movwf	___ftdiv@f3+1
  1371  0557  3000               	movlw	0
  1372  0558  00B7               	movwf	___ftdiv@f3+2
  1373  0559  3089               	movlw	137
  1374  055A  0739               	addwf	___ftdiv@sign,w
  1375  055B  00B0               	movwf	??___ftdiv
  1376  055C  0830               	movf	??___ftdiv,w
  1377  055D  02B8               	subwf	___ftdiv@exp,f
  1378  055E  082D               	movf	___ftdiv@f1,w
  1379  055F  00B0               	movwf	??___ftdiv
  1380  0560  082E               	movf	___ftdiv@f1+1,w
  1381  0561  00B1               	movwf	??___ftdiv+1
  1382  0562  082F               	movf	___ftdiv@f1+2,w
  1383  0563  00B2               	movwf	??___ftdiv+2
  1384  0564  3010               	movlw	16
  1385  0565                     u1035:	
  1386  0565  1003               	clrc
  1387  0566  0CB2               	rrf	??___ftdiv+2,f
  1388  0567  0CB1               	rrf	??___ftdiv+1,f
  1389  0568  0CB0               	rrf	??___ftdiv,f
  1390  0569  3EFF               	addlw	-1
  1391  056A  1D03               	skipz
  1392  056B  2D65               	goto	u1035
  1393  056C  0830               	movf	??___ftdiv,w
  1394  056D  00B3               	movwf	??___ftdiv+3
  1395  056E  0833               	movf	??___ftdiv+3,w
  1396  056F  00B9               	movwf	___ftdiv@sign
  1397  0570  082A               	movf	___ftdiv@f2,w
  1398  0571  00B0               	movwf	??___ftdiv
  1399  0572  082B               	movf	___ftdiv@f2+1,w
  1400  0573  00B1               	movwf	??___ftdiv+1
  1401  0574  082C               	movf	___ftdiv@f2+2,w
  1402  0575  00B2               	movwf	??___ftdiv+2
  1403  0576  3010               	movlw	16
  1404  0577                     u1045:	
  1405  0577  1003               	clrc
  1406  0578  0CB2               	rrf	??___ftdiv+2,f
  1407  0579  0CB1               	rrf	??___ftdiv+1,f
  1408  057A  0CB0               	rrf	??___ftdiv,f
  1409  057B  3EFF               	addlw	-1
  1410  057C  1D03               	skipz
  1411  057D  2D77               	goto	u1045
  1412  057E  0830               	movf	??___ftdiv,w
  1413  057F  00B3               	movwf	??___ftdiv+3
  1414  0580  0833               	movf	??___ftdiv+3,w
  1415  0581  06B9               	xorwf	___ftdiv@sign,f
  1416  0582  3080               	movlw	128
  1417  0583  00B0               	movwf	??___ftdiv
  1418  0584  0830               	movf	??___ftdiv,w
  1419  0585  05B9               	andwf	___ftdiv@sign,f
  1420  0586  17AE               	bsf	___ftdiv@f1+1,7
  1421  0587  30FF               	movlw	255
  1422  0588  05AD               	andwf	___ftdiv@f1,f
  1423  0589  30FF               	movlw	255
  1424  058A  05AE               	andwf	___ftdiv@f1+1,f
  1425  058B  3000               	movlw	0
  1426  058C  05AF               	andwf	___ftdiv@f1+2,f
  1427  058D  17AB               	bsf	___ftdiv@f2+1,7
  1428  058E  30FF               	movlw	255
  1429  058F  05AA               	andwf	___ftdiv@f2,f
  1430  0590  30FF               	movlw	255
  1431  0591  05AB               	andwf	___ftdiv@f2+1,f
  1432  0592  3000               	movlw	0
  1433  0593  05AC               	andwf	___ftdiv@f2+2,f
  1434  0594  3018               	movlw	24
  1435  0595  00B0               	movwf	??___ftdiv
  1436  0596  0830               	movf	??___ftdiv,w
  1437  0597  00B4               	movwf	___ftdiv@cntr
  1438  0598                     l972:	
  1439  0598  3001               	movlw	1
  1440  0599                     u1055:	
  1441  0599  1003               	clrc
  1442  059A  0DB5               	rlf	___ftdiv@f3,f
  1443  059B  0DB6               	rlf	___ftdiv@f3+1,f
  1444  059C  0DB7               	rlf	___ftdiv@f3+2,f
  1445  059D  3EFF               	addlw	-1
  1446  059E  1D03               	skipz
  1447  059F  2D99               	goto	u1055
  1448  05A0  082C               	movf	___ftdiv@f2+2,w
  1449  05A1  022F               	subwf	___ftdiv@f1+2,w
  1450  05A2  1D03               	skipz
  1451  05A3  2DAA               	goto	u1065
  1452  05A4  082B               	movf	___ftdiv@f2+1,w
  1453  05A5  022E               	subwf	___ftdiv@f1+1,w
  1454  05A6  1D03               	skipz
  1455  05A7  2DAA               	goto	u1065
  1456  05A8  082A               	movf	___ftdiv@f2,w
  1457  05A9  022D               	subwf	___ftdiv@f1,w
  1458  05AA                     u1065:	
  1459  05AA  1C03               	skipc
  1460  05AB  2DB7               	goto	l980
  1461  05AC  082A               	movf	___ftdiv@f2,w
  1462  05AD  02AD               	subwf	___ftdiv@f1,f
  1463  05AE  082B               	movf	___ftdiv@f2+1,w
  1464  05AF  1C03               	skipc
  1465  05B0  0F2B               	incfsz	___ftdiv@f2+1,w
  1466  05B1  02AE               	subwf	___ftdiv@f1+1,f
  1467  05B2  082C               	movf	___ftdiv@f2+2,w
  1468  05B3  1C03               	skipc
  1469  05B4  0A2C               	incf	___ftdiv@f2+2,w
  1470  05B5  02AF               	subwf	___ftdiv@f1+2,f
  1471  05B6  1435               	bsf	___ftdiv@f3,0
  1472  05B7                     l980:	
  1473  05B7  3001               	movlw	1
  1474  05B8                     u1075:	
  1475  05B8  1003               	clrc
  1476  05B9  0DAD               	rlf	___ftdiv@f1,f
  1477  05BA  0DAE               	rlf	___ftdiv@f1+1,f
  1478  05BB  0DAF               	rlf	___ftdiv@f1+2,f
  1479  05BC  3EFF               	addlw	-1
  1480  05BD  1D03               	skipz
  1481  05BE  2DB8               	goto	u1075
  1482  05BF  3001               	movlw	1
  1483  05C0  02B4               	subwf	___ftdiv@cntr,f
  1484  05C1  1D03               	btfss	3,2
  1485  05C2  2D98               	goto	l972
  1486  05C3  0835               	movf	___ftdiv@f3,w
  1487  05C4  00F0               	movwf	___ftpack@arg
  1488  05C5  0836               	movf	___ftdiv@f3+1,w
  1489  05C6  00F1               	movwf	___ftpack@arg+1
  1490  05C7  0837               	movf	___ftdiv@f3+2,w
  1491  05C8  00F2               	movwf	___ftpack@arg+2
  1492  05C9  0838               	movf	___ftdiv@exp,w
  1493  05CA  00B0               	movwf	??___ftdiv
  1494  05CB  0830               	movf	??___ftdiv,w
  1495  05CC  00F3               	movwf	___ftpack@exp
  1496  05CD  0839               	movf	___ftdiv@sign,w
  1497  05CE  00B1               	movwf	??___ftdiv+1
  1498  05CF  0831               	movf	??___ftdiv+1,w
  1499  05D0  00F4               	movwf	___ftpack@sign
  1500  05D1  120A  118A  242D   	fcall	___ftpack
  1501  05D4  0870               	movf	?___ftpack,w
  1502  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1503  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1504  05D7  00AA               	movwf	?___ftdiv
  1505  05D8  0871               	movf	?___ftpack+1,w
  1506  05D9  00AB               	movwf	?___ftdiv+1
  1507  05DA  0872               	movf	?___ftpack+2,w
  1508  05DB  00AC               	movwf	?___ftdiv+2
  1509  05DC  0008               	return
  1510  05DD                     __end_of___ftdiv:	
  1511                           
  1512                           	psect	text4
  1513  0366                     __ptext4:	
  1514 ;; *************** function ___awtoft *****************
  1515 ;; Defined at:
  1516 ;;		line 32 in file "D:\mplab\sources\common\awtoft.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  c               2    8[COMMON] int 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  sign            1   13[COMMON] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  3    8[COMMON] float 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, pclath, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         3       0       0       0       0
  1531 ;;      Locals:         1       0       0       0       0
  1532 ;;      Temps:          2       0       0       0       0
  1533 ;;      Totals:         6       0       0       0       0
  1534 ;;Total ram usage:        6 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    1
  1537 ;; This function calls:
  1538 ;;		___ftpack
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function ___awtoft
  1546  0366                     ___awtoft:	
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1550  0366  01FD               	clrf	___awtoft@sign
  1551  0367  1FF9               	btfss	___awtoft@c+1,7
  1552  0368  2B70               	goto	l942
  1553  0369  09F8               	comf	___awtoft@c,f
  1554  036A  09F9               	comf	___awtoft@c+1,f
  1555  036B  0AF8               	incf	___awtoft@c,f
  1556  036C  1903               	skipnz
  1557  036D  0AF9               	incf	___awtoft@c+1,f
  1558  036E  01FD               	clrf	___awtoft@sign
  1559  036F  0AFD               	incf	___awtoft@sign,f
  1560  0370                     l942:	
  1561  0370  0878               	movf	___awtoft@c,w
  1562  0371  00F0               	movwf	___ftpack@arg
  1563  0372  0879               	movf	___awtoft@c+1,w
  1564  0373  00F1               	movwf	___ftpack@arg+1
  1565  0374  01F2               	clrf	___ftpack@arg+2
  1566  0375  308E               	movlw	142
  1567  0376  00FB               	movwf	??___awtoft
  1568  0377  087B               	movf	??___awtoft,w
  1569  0378  00F3               	movwf	___ftpack@exp
  1570  0379  087D               	movf	___awtoft@sign,w
  1571  037A  00FC               	movwf	??___awtoft+1
  1572  037B  087C               	movf	??___awtoft+1,w
  1573  037C  00F4               	movwf	___ftpack@sign
  1574  037D  120A  118A  242D   	fcall	___ftpack
  1575  0380  0870               	movf	?___ftpack,w
  1576  0381  00F8               	movwf	?___awtoft
  1577  0382  0871               	movf	?___ftpack+1,w
  1578  0383  00F9               	movwf	?___awtoft+1
  1579  0384  0872               	movf	?___ftpack+2,w
  1580  0385  00FA               	movwf	?___awtoft+2
  1581  0386  0008               	return
  1582  0387                     __end_of___awtoft:	
  1583                           
  1584                           	psect	text5
  1585  042D                     __ptext5:	
  1586 ;; *************** function ___ftpack *****************
  1587 ;; Defined at:
  1588 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  arg             3    0[COMMON] unsigned um
  1591 ;;  exp             1    3[COMMON] unsigned char 
  1592 ;;  sign            1    4[COMMON] unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  3    0[COMMON] float 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         5       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0
  1606 ;;      Temps:          3       0       0       0       0
  1607 ;;      Totals:         8       0       0       0       0
  1608 ;;Total ram usage:        8 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		___awtoft
  1614 ;;		___ftdiv
  1615 ;;		___ftmul
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function ___ftpack
  1621  042D                     ___ftpack:	
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1625  042D  0873               	movf	___ftpack@exp,w
  1626  042E  1903               	btfsc	3,2
  1627  042F  2C35               	goto	l824
  1628  0430  0872               	movf	___ftpack@arg+2,w
  1629  0431  0471               	iorwf	___ftpack@arg+1,w
  1630  0432  0470               	iorwf	___ftpack@arg,w
  1631  0433  1D03               	skipz
  1632  0434  2C48               	goto	l830
  1633  0435                     l824:	
  1634  0435  3000               	movlw	0
  1635  0436  00F0               	movwf	?___ftpack
  1636  0437  3000               	movlw	0
  1637  0438  00F1               	movwf	?___ftpack+1
  1638  0439  3000               	movlw	0
  1639  043A  00F2               	movwf	?___ftpack+2
  1640  043B  0008               	return
  1641  043C                     l828:	
  1642  043C  3001               	movlw	1
  1643  043D  00F5               	movwf	??___ftpack
  1644  043E  0875               	movf	??___ftpack,w
  1645  043F  07F3               	addwf	___ftpack@exp,f
  1646  0440  3001               	movlw	1
  1647  0441                     u715:	
  1648  0441  1003               	clrc
  1649  0442  0CF2               	rrf	___ftpack@arg+2,f
  1650  0443  0CF1               	rrf	___ftpack@arg+1,f
  1651  0444  0CF0               	rrf	___ftpack@arg,f
  1652  0445  3EFF               	addlw	-1
  1653  0446  1D03               	skipz
  1654  0447  2C41               	goto	u715
  1655  0448                     l830:	
  1656  0448  30FE               	movlw	254
  1657  0449  0572               	andwf	___ftpack@arg+2,w
  1658  044A  1903               	btfsc	3,2
  1659  044B  2C63               	goto	l293
  1660  044C  2C3C               	goto	l828
  1661  044D                     l832:	
  1662  044D  3001               	movlw	1
  1663  044E  00F5               	movwf	??___ftpack
  1664  044F  0875               	movf	??___ftpack,w
  1665  0450  07F3               	addwf	___ftpack@exp,f
  1666  0451  3001               	movlw	1
  1667  0452  07F0               	addwf	___ftpack@arg,f
  1668  0453  3000               	movlw	0
  1669  0454  1803               	skipnc
  1670  0455  3001               	movlw	1
  1671  0456  07F1               	addwf	___ftpack@arg+1,f
  1672  0457  3000               	movlw	0
  1673  0458  1803               	skipnc
  1674  0459  3001               	movlw	1
  1675  045A  07F2               	addwf	___ftpack@arg+2,f
  1676  045B  3001               	movlw	1
  1677  045C                     u735:	
  1678  045C  1003               	clrc
  1679  045D  0CF2               	rrf	___ftpack@arg+2,f
  1680  045E  0CF1               	rrf	___ftpack@arg+1,f
  1681  045F  0CF0               	rrf	___ftpack@arg,f
  1682  0460  3EFF               	addlw	-1
  1683  0461  1D03               	skipz
  1684  0462  2C5C               	goto	u735
  1685  0463                     l293:	
  1686  0463  30FF               	movlw	255
  1687  0464  0572               	andwf	___ftpack@arg+2,w
  1688  0465  1903               	btfsc	3,2
  1689  0466  2C72               	goto	l840
  1690  0467  2C4D               	goto	l832
  1691  0468                     l838:	
  1692  0468  3001               	movlw	1
  1693  0469  02F3               	subwf	___ftpack@exp,f
  1694  046A  3001               	movlw	1
  1695  046B                     u755:	
  1696  046B  1003               	clrc
  1697  046C  0DF0               	rlf	___ftpack@arg,f
  1698  046D  0DF1               	rlf	___ftpack@arg+1,f
  1699  046E  0DF2               	rlf	___ftpack@arg+2,f
  1700  046F  3EFF               	addlw	-1
  1701  0470  1D03               	skipz
  1702  0471  2C6B               	goto	u755
  1703  0472                     l840:	
  1704  0472  1BF1               	btfsc	___ftpack@arg+1,7
  1705  0473  2C78               	goto	l300
  1706  0474  3002               	movlw	2
  1707  0475  0273               	subwf	___ftpack@exp,w
  1708  0476  1803               	skipnc
  1709  0477  2C68               	goto	l838
  1710  0478                     l300:	
  1711  0478  1873               	btfsc	___ftpack@exp,0
  1712  0479  2C80               	goto	l301
  1713  047A  30FF               	movlw	255
  1714  047B  05F0               	andwf	___ftpack@arg,f
  1715  047C  307F               	movlw	127
  1716  047D  05F1               	andwf	___ftpack@arg+1,f
  1717  047E  30FF               	movlw	255
  1718  047F  05F2               	andwf	___ftpack@arg+2,f
  1719  0480                     l301:	
  1720  0480  1003               	clrc
  1721  0481  0CF3               	rrf	___ftpack@exp,f
  1722  0482  0873               	movf	___ftpack@exp,w
  1723  0483  00F5               	movwf	??___ftpack
  1724  0484  01F6               	clrf	??___ftpack+1
  1725  0485  01F7               	clrf	??___ftpack+2
  1726  0486  3010               	movlw	16
  1727  0487                     u795:	
  1728  0487  1003               	clrc
  1729  0488  0DF5               	rlf	??___ftpack,f
  1730  0489  0DF6               	rlf	??___ftpack+1,f
  1731  048A  0DF7               	rlf	??___ftpack+2,f
  1732  048B  3EFF               	addlw	-1
  1733  048C  1D03               	skipz
  1734  048D  2C87               	goto	u795
  1735  048E  0875               	movf	??___ftpack,w
  1736  048F  04F0               	iorwf	___ftpack@arg,f
  1737  0490  0876               	movf	??___ftpack+1,w
  1738  0491  04F1               	iorwf	___ftpack@arg+1,f
  1739  0492  0877               	movf	??___ftpack+2,w
  1740  0493  04F2               	iorwf	___ftpack@arg+2,f
  1741  0494  0874               	movf	___ftpack@sign,w
  1742  0495  1903               	btfsc	3,2
  1743  0496  0008               	return
  1744  0497  17F2               	bsf	___ftpack@arg+2,7
  1745  0498  0008               	return
  1746  0499                     __end_of___ftpack:	
  1747                           
  1748                           	psect	text6
  1749  0387                     __ptext6:	
  1750 ;; *************** function ___awmod *****************
  1751 ;; Defined at:
  1752 ;;		line 6 in file "D:\mplab\sources\common\awmod.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  divisor         2    0[COMMON] int 
  1755 ;;  dividend        2    2[COMMON] int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  sign            1    6[COMMON] unsigned char 
  1758 ;;  counter         1    5[COMMON] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2    0[COMMON] int 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         4       0       0       0       0
  1769 ;;      Locals:         2       0       0       0       0
  1770 ;;      Temps:          1       0       0       0       0
  1771 ;;      Totals:         7       0       0       0       0
  1772 ;;Total ram usage:        7 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function ___awmod
  1783  0387                     ___awmod:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1787  0387  01F6               	clrf	___awmod@sign
  1788  0388  1FF3               	btfss	___awmod@dividend+1,7
  1789  0389  2B91               	goto	l904
  1790  038A  09F2               	comf	___awmod@dividend,f
  1791  038B  09F3               	comf	___awmod@dividend+1,f
  1792  038C  0AF2               	incf	___awmod@dividend,f
  1793  038D  1903               	skipnz
  1794  038E  0AF3               	incf	___awmod@dividend+1,f
  1795  038F  01F6               	clrf	___awmod@sign
  1796  0390  0AF6               	incf	___awmod@sign,f
  1797  0391                     l904:	
  1798  0391  1FF1               	btfss	___awmod@divisor+1,7
  1799  0392  2B98               	goto	l908
  1800  0393  09F0               	comf	___awmod@divisor,f
  1801  0394  09F1               	comf	___awmod@divisor+1,f
  1802  0395  0AF0               	incf	___awmod@divisor,f
  1803  0396  1903               	skipnz
  1804  0397  0AF1               	incf	___awmod@divisor+1,f
  1805  0398                     l908:	
  1806  0398  0870               	movf	___awmod@divisor,w
  1807  0399  0471               	iorwf	___awmod@divisor+1,w
  1808  039A  1903               	btfsc	3,2
  1809  039B  2BC5               	goto	l926
  1810  039C  01F5               	clrf	___awmod@counter
  1811  039D  0AF5               	incf	___awmod@counter,f
  1812  039E                     l916:	
  1813  039E  1BF1               	btfsc	___awmod@divisor+1,7
  1814  039F  2BAC               	goto	l918
  1815  03A0  3001               	movlw	1
  1816  03A1                     u945:	
  1817  03A1  1003               	clrc
  1818  03A2  0DF0               	rlf	___awmod@divisor,f
  1819  03A3  0DF1               	rlf	___awmod@divisor+1,f
  1820  03A4  3EFF               	addlw	-1
  1821  03A5  1D03               	skipz
  1822  03A6  2BA1               	goto	u945
  1823  03A7  3001               	movlw	1
  1824  03A8  00F4               	movwf	??___awmod
  1825  03A9  0874               	movf	??___awmod,w
  1826  03AA  07F5               	addwf	___awmod@counter,f
  1827  03AB  2B9E               	goto	l916
  1828  03AC                     l918:	
  1829  03AC  0871               	movf	___awmod@divisor+1,w
  1830  03AD  0273               	subwf	___awmod@dividend+1,w
  1831  03AE  1D03               	skipz
  1832  03AF  2BB2               	goto	u965
  1833  03B0  0870               	movf	___awmod@divisor,w
  1834  03B1  0272               	subwf	___awmod@dividend,w
  1835  03B2                     u965:	
  1836  03B2  1C03               	skipc
  1837  03B3  2BBA               	goto	l922
  1838  03B4  0870               	movf	___awmod@divisor,w
  1839  03B5  02F2               	subwf	___awmod@dividend,f
  1840  03B6  0871               	movf	___awmod@divisor+1,w
  1841  03B7  1C03               	skipc
  1842  03B8  03F3               	decf	___awmod@dividend+1,f
  1843  03B9  02F3               	subwf	___awmod@dividend+1,f
  1844  03BA                     l922:	
  1845  03BA  3001               	movlw	1
  1846  03BB                     u975:	
  1847  03BB  1003               	clrc
  1848  03BC  0CF1               	rrf	___awmod@divisor+1,f
  1849  03BD  0CF0               	rrf	___awmod@divisor,f
  1850  03BE  3EFF               	addlw	-1
  1851  03BF  1D03               	skipz
  1852  03C0  2BBB               	goto	u975
  1853  03C1  3001               	movlw	1
  1854  03C2  02F5               	subwf	___awmod@counter,f
  1855  03C3  1D03               	btfss	3,2
  1856  03C4  2BAC               	goto	l918
  1857  03C5                     l926:	
  1858  03C5  0876               	movf	___awmod@sign,w
  1859  03C6  1903               	btfsc	3,2
  1860  03C7  2BCD               	goto	l930
  1861  03C8  09F2               	comf	___awmod@dividend,f
  1862  03C9  09F3               	comf	___awmod@dividend+1,f
  1863  03CA  0AF2               	incf	___awmod@dividend,f
  1864  03CB  1903               	skipnz
  1865  03CC  0AF3               	incf	___awmod@dividend+1,f
  1866  03CD                     l930:	
  1867  03CD  0873               	movf	___awmod@dividend+1,w
  1868  03CE  00F1               	movwf	?___awmod+1
  1869  03CF  0872               	movf	___awmod@dividend,w
  1870  03D0  00F0               	movwf	?___awmod
  1871  03D1  0008               	return
  1872  03D2                     __end_of___awmod:	
  1873                           
  1874                           	psect	text7
  1875  03D2                     __ptext7:	
  1876 ;; *************** function ___awdiv *****************
  1877 ;; Defined at:
  1878 ;;		line 6 in file "D:\mplab\sources\common\awdiv.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  divisor         2    7[COMMON] int 
  1881 ;;  dividend        2    9[COMMON] int 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  quotient        2    2[BANK0 ] int 
  1884 ;;  sign            1    1[BANK0 ] unsigned char 
  1885 ;;  counter         1    0[BANK0 ] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2    7[COMMON] int 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         4       0       0       0       0
  1896 ;;      Locals:         0       4       0       0       0
  1897 ;;      Temps:          1       0       0       0       0
  1898 ;;      Totals:         5       4       0       0       0
  1899 ;;Total ram usage:        9 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function ___awdiv
  1910  03D2                     ___awdiv:	
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1914  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1915  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1916  03D4  01A1               	clrf	___awdiv@sign
  1917  03D5  1FF8               	btfss	___awdiv@divisor+1,7
  1918  03D6  2BDE               	goto	l860
  1919  03D7  09F7               	comf	___awdiv@divisor,f
  1920  03D8  09F8               	comf	___awdiv@divisor+1,f
  1921  03D9  0AF7               	incf	___awdiv@divisor,f
  1922  03DA  1903               	skipnz
  1923  03DB  0AF8               	incf	___awdiv@divisor+1,f
  1924  03DC  01A1               	clrf	___awdiv@sign
  1925  03DD  0AA1               	incf	___awdiv@sign,f
  1926  03DE                     l860:	
  1927  03DE  1FFA               	btfss	___awdiv@dividend+1,7
  1928  03DF  2BE9               	goto	l866
  1929  03E0  09F9               	comf	___awdiv@dividend,f
  1930  03E1  09FA               	comf	___awdiv@dividend+1,f
  1931  03E2  0AF9               	incf	___awdiv@dividend,f
  1932  03E3  1903               	skipnz
  1933  03E4  0AFA               	incf	___awdiv@dividend+1,f
  1934  03E5  3001               	movlw	1
  1935  03E6  00FB               	movwf	??___awdiv
  1936  03E7  087B               	movf	??___awdiv,w
  1937  03E8  06A1               	xorwf	___awdiv@sign,f
  1938  03E9                     l866:	
  1939  03E9  01A2               	clrf	___awdiv@quotient
  1940  03EA  01A3               	clrf	___awdiv@quotient+1
  1941  03EB  0877               	movf	___awdiv@divisor,w
  1942  03EC  0478               	iorwf	___awdiv@divisor+1,w
  1943  03ED  1903               	btfsc	3,2
  1944  03EE  2C20               	goto	l888
  1945  03EF  01A0               	clrf	___awdiv@counter
  1946  03F0  0AA0               	incf	___awdiv@counter,f
  1947  03F1                     l876:	
  1948  03F1  1BF8               	btfsc	___awdiv@divisor+1,7
  1949  03F2  2BFF               	goto	l878
  1950  03F3  3001               	movlw	1
  1951  03F4                     u845:	
  1952  03F4  1003               	clrc
  1953  03F5  0DF7               	rlf	___awdiv@divisor,f
  1954  03F6  0DF8               	rlf	___awdiv@divisor+1,f
  1955  03F7  3EFF               	addlw	-1
  1956  03F8  1D03               	skipz
  1957  03F9  2BF4               	goto	u845
  1958  03FA  3001               	movlw	1
  1959  03FB  00FB               	movwf	??___awdiv
  1960  03FC  087B               	movf	??___awdiv,w
  1961  03FD  07A0               	addwf	___awdiv@counter,f
  1962  03FE  2BF1               	goto	l876
  1963  03FF                     l878:	
  1964  03FF  3001               	movlw	1
  1965  0400                     u865:	
  1966  0400  1003               	clrc
  1967  0401  0DA2               	rlf	___awdiv@quotient,f
  1968  0402  0DA3               	rlf	___awdiv@quotient+1,f
  1969  0403  3EFF               	addlw	-1
  1970  0404  1D03               	skipz
  1971  0405  2C00               	goto	u865
  1972  0406  0878               	movf	___awdiv@divisor+1,w
  1973  0407  027A               	subwf	___awdiv@dividend+1,w
  1974  0408  1D03               	skipz
  1975  0409  2C0C               	goto	u875
  1976  040A  0877               	movf	___awdiv@divisor,w
  1977  040B  0279               	subwf	___awdiv@dividend,w
  1978  040C                     u875:	
  1979  040C  1C03               	skipc
  1980  040D  2C15               	goto	l884
  1981  040E  0877               	movf	___awdiv@divisor,w
  1982  040F  02F9               	subwf	___awdiv@dividend,f
  1983  0410  0878               	movf	___awdiv@divisor+1,w
  1984  0411  1C03               	skipc
  1985  0412  03FA               	decf	___awdiv@dividend+1,f
  1986  0413  02FA               	subwf	___awdiv@dividend+1,f
  1987  0414  1422               	bsf	___awdiv@quotient,0
  1988  0415                     l884:	
  1989  0415  3001               	movlw	1
  1990  0416                     u885:	
  1991  0416  1003               	clrc
  1992  0417  0CF8               	rrf	___awdiv@divisor+1,f
  1993  0418  0CF7               	rrf	___awdiv@divisor,f
  1994  0419  3EFF               	addlw	-1
  1995  041A  1D03               	skipz
  1996  041B  2C16               	goto	u885
  1997  041C  3001               	movlw	1
  1998  041D  02A0               	subwf	___awdiv@counter,f
  1999  041E  1D03               	btfss	3,2
  2000  041F  2BFF               	goto	l878
  2001  0420                     l888:	
  2002  0420  0821               	movf	___awdiv@sign,w
  2003  0421  1903               	btfsc	3,2
  2004  0422  2C28               	goto	l892
  2005  0423  09A2               	comf	___awdiv@quotient,f
  2006  0424  09A3               	comf	___awdiv@quotient+1,f
  2007  0425  0AA2               	incf	___awdiv@quotient,f
  2008  0426  1903               	skipnz
  2009  0427  0AA3               	incf	___awdiv@quotient+1,f
  2010  0428                     l892:	
  2011  0428  0823               	movf	___awdiv@quotient+1,w
  2012  0429  00F8               	movwf	?___awdiv+1
  2013  042A  0822               	movf	___awdiv@quotient,w
  2014  042B  00F7               	movwf	?___awdiv
  2015  042C  0008               	return
  2016  042D                     __end_of___awdiv:	
  2017  007E                     btemp	set	126	;btemp
  2018  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _main->___ftmul
    _main->___fttol
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7488
                                             26 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             10 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     614
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      48      12        0.0%
ABS                  0      0      48       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Sep 27 08:39:43 2021

                      pc 0002              __CFG_CP$OFF 0000                       l43 07BD  
                     l38 06DD             ___awdiv@sign 0021                       fsr 0004  
            __CFG_LVP$ON 0000                      l300 0478                      l301 0480  
                    l293 0463                      l384 050B                      l830 0448  
                    l904 0391                      l840 0472                      l832 044D  
                    l824 0435                      l930 03CD                      l922 03BA  
                    l860 03DE                      l916 039E                      l908 0398  
                    l828 043C                      l918 03AC                      l926 03C5  
                    l838 0468                      l942 0370                      l952 053D  
                    l866 03E9                      l892 0428                      l884 0415  
                    l876 03F1                      l980 05B7                      l972 0598  
                    l878 03FF                      l958 0553                      l888 0420  
                    l994 05F5                      _RC6 003E             __CFG_CPD$OFF 0000  
                    u715 0441                      u735 045C                      u755 046B  
                    u845 03F4                      u865 0400                      u945 03A1  
                    u875 040C                      u795 0487                      u885 0416  
                    u965 03B2                      u975 03BB                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             __CFG_IESO$ON 0000  
           __CFG_FOSC$XT 0000             ___ftdiv@cntr 0034             ___ftdiv@sign 0039  
                   l1000 060B                     l1012 064A                     l1024 0672  
                   l1016 065A                     l1130 07DA                     l1028 0682  
                   l1044 04B1                     l1070 0500                     l1062 04E3  
                   l1072 050E                     l1064 04F3                     l1076 051C  
                   l1098 06DA                     u1035 0565                     u1115 0617  
                   u1045 0577                     u1205 0683                     u1125 0629  
                   u1055 0599                     u1215 068B                     u1065 05AA  
                   u1305 0502                     u1075 05B8                     u1155 065B  
                   u1165 0663                     u1245 04B8                     u1345 07BB  
                   u1275 04E4                     u1365 07D8                     u1377 06D8  
                   u1387 07E2             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _lm35 0059                     _main 06AE             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     _temp 0054                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0028             ___ftmul@sign 0029             ___fttol@exp1 007D  
           ___fttol@lval 0079                    ?_main 0070          __end_of___awdiv 042D  
          __CFG_WDTE$OFF 0000          __end_of___awmod 03D2          __end_of___ftdiv 05DD  
                  _ANSEL 0188          __end_of___ftmul 06AE          ___awdiv@divisor 0077  
        __end_of___fttol 0525          ___awdiv@counter 0020                    _SPBRG 0099  
                  _TXREG 0019            ___awtoft@sign 007D            ___ftpack@sign 0074  
                  main@i 0040                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EA             __end_of_main 07EA  
                 ??_main 003A            ___fttol@sign1 0078                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079         __end_of___awtoft 0387  
       __end_of___ftpack 0499                   _TRISA0 0428           __CFG_PWRTE$OFF 0000  
              ??___awdiv 007B                ??___awmod 0074                ??___ftdiv 0030  
              ??___ftmul 0020                ??___fttol 0074         ___awdiv@quotient 0022  
        ___awmod@divisor 0070          ___awmod@counter 0075    ___ftmul@f3_as_product 0025  
__end_of__initialization 07FC               ___ftdiv@f1 002D               ___ftdiv@f2 002A  
             ___ftdiv@f3 0035               ___awtoft@c 0078               ___ftmul@f1 0078  
             ___ftmul@f2 007B               ___fttol@f1 0070           __pcstackCOMMON 0070  
           __pidataBANK0 0354               __pbssBANK0 0054               __pmaintext 06AE  
              ?___awtoft 0078                ?___ftpack 0070                  ___awdiv 03D2  
                ___awmod 0387                  ___ftdiv 0525                  ___ftmul 05DD  
                ___fttol 0499               ??___awtoft 007B               ??___ftpack 0075  
                __ptext1 0499                  __ptext2 05DD                  __ptext3 0525  
                __ptext4 0366                  __ptext5 042D                  __ptext6 0387  
                __ptext7 03D2         ___awmod@dividend 0072     end_of_initialization 07FC  
              _RCSTAbits 0018              ___ftdiv@exp 0038                _TXSTAbits 0098  
            ___ftmul@exp 0024              _BAUDCTLbits 0187      start_initialization 07EA  
             init_fetch0 0343              __pdataBANK0 0042        __size_of___awtoft 0021  
      __size_of___ftpack 006C                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0077                 ?___awmod 0070                 ?___ftdiv 002A  
               ?___ftmul 0078                 ?___fttol 0070                _buffer_TX 0042  
              _value_adc 0057               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 005B         __size_of___awmod 004B         __size_of___ftdiv 00B8  
       __size_of___ftmul 00D1         __size_of___fttol 008C                 ___awtoft 0366  
               ___ftpack 042D                 _main$616 003E        __CFG_BOR4V$BOR40V 0000  
          __size_of_main 013C                 init_ram0 0347  
