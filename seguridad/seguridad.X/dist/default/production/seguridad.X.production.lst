

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 28 21:12:55 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372                           
   373                           	psect	idataBANK0
   374  04FF                     __pidataBANK0:
   375                           
   376                           ;initializer for keypad_getkey@F1296
   377  04FF  3431               	retlw	49
   378  0500  3432               	retlw	50
   379  0501  3433               	retlw	51
   380  0502  3441               	retlw	65
   381  0503  3434               	retlw	52
   382  0504  3435               	retlw	53
   383  0505  3436               	retlw	54
   384  0506  3442               	retlw	66
   385  0507  3437               	retlw	55
   386  0508  3438               	retlw	56
   387  0509  3439               	retlw	57
   388  050A  3443               	retlw	67
   389  050B  342A               	retlw	42
   390  050C  3430               	retlw	48
   391  050D  3423               	retlw	35
   392  050E  3444               	retlw	68
   393                           
   394                           	psect	strings
   395  0003                     __pstrings:
   396  0003                     stringtab:
   397  0003                     __stringtab:
   398  0003                     stringcode:	
   399                           ;	String table - string pointers are 1 byte each
   400                           
   401  0003                     stringdir:
   402  0003  3000               	movlw	high stringdir
   403  0004  008A               	movwf	10
   404  0005  0804               	movf	4,w
   405  0006  0A84               	incf	4,f
   406  0007  0782               	addwf	2,f
   407  0008                     __stringbase:
   408  0008  3400               	retlw	0
   409  0009                     __end_of__stringtab:
   410  0009                     _password:
   411  0009  3432               	retlw	50
   412  000A  3430               	retlw	48
   413  000B  3432               	retlw	50
   414  000C  3431               	retlw	49
   415  000D  3400               	retlw	0
   416  000E                     __end_of_password:
   417  0006                     _PORTB	set	6
   418  0008                     _PORTDbits	set	8
   419  0008                     _PORTD	set	8
   420  0081                     _OPTION_REGbits	set	129
   421  0086                     _TRISB	set	134
   422  0088                     _TRISD	set	136
   423  008F                     _OSCCON	set	143
   424  000E                     STR_3:
   425  000E  3443               	retlw	67	;'C'
   426  000F  346C               	retlw	108	;'l'
   427  0010  3461               	retlw	97	;'a'
   428  0011  3476               	retlw	118	;'v'
   429  0012  3465               	retlw	101	;'e'
   430  0013  3420               	retlw	32	;' '
   431  0014  3449               	retlw	73	;'I'
   432  0015  346E               	retlw	110	;'n'
   433  0016  3463               	retlw	99	;'c'
   434  0017  346F               	retlw	111	;'o'
   435  0018  3472               	retlw	114	;'r'
   436  0019  3472               	retlw	114	;'r'
   437  001A  3465               	retlw	101	;'e'
   438  001B  3463               	retlw	99	;'c'
   439  001C  3474               	retlw	116	;'t'
   440  001D  3461               	retlw	97	;'a'
   441  001E  3400               	retlw	0
   442  001F                     STR_2:
   443  001F  3443               	retlw	67	;'C'
   444  0020  346C               	retlw	108	;'l'
   445  0021  3461               	retlw	97	;'a'
   446  0022  3476               	retlw	118	;'v'
   447  0023  3465               	retlw	101	;'e'
   448  0024  3420               	retlw	32	;' '
   449  0025  3443               	retlw	67	;'C'
   450  0026  346F               	retlw	111	;'o'
   451  0027  3472               	retlw	114	;'r'
   452  0028  3472               	retlw	114	;'r'
   453  0029  3465               	retlw	101	;'e'
   454  002A  3463               	retlw	99	;'c'
   455  002B  3474               	retlw	116	;'t'
   456  002C  3461               	retlw	97	;'a'
   457  002D  3400               	retlw	0
   458  002E                     STR_1:
   459  002E  3450               	retlw	80	;'P'
   460  002F  3472               	retlw	114	;'r'
   461  0030  3465               	retlw	101	;'e'
   462  0031  3473               	retlw	115	;'s'
   463  0032  3473               	retlw	115	;'s'
   464  0033  3420               	retlw	32	;' '
   465  0034  3461               	retlw	97	;'a'
   466  0035  3420               	retlw	32	;' '
   467  0036  344B               	retlw	75	;'K'
   468  0037  3465               	retlw	101	;'e'
   469  0038  3479               	retlw	121	;'y'
   470  0039  3400               	retlw	0
   471                           
   472                           	psect	cinit
   473  07E8                     start_initialization:	
   474                           ; #config settings
   475                           
   476  07E8                     __initialization:
   477                           
   478                           ; Initialize objects allocated to BANK0
   479  07E8  1383               	bcf	3,7	;select IRP bank0
   480  07E9  3043               	movlw	low (__pdataBANK0+16)
   481  07EA  00FD               	movwf	btemp+-1
   482  07EB  3004               	movlw	high __pidataBANK0
   483  07EC  00FE               	movwf	btemp
   484  07ED  30FF               	movlw	low __pidataBANK0
   485  07EE  00FF               	movwf	btemp+1
   486  07EF  3033               	movlw	low __pdataBANK0
   487  07F0  0084               	movwf	4
   488  07F1  120A  118A  2513  120A  118A  	fcall	init_ram0
   489                           
   490                           ; Clear objects allocated to BANK0
   491  07F6  01C3               	clrf	__pbssBANK0& (0+127)
   492  07F7  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   493  07F8  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   494  07F9  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   495  07FA  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   496  07FB  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   497  07FC                     end_of_initialization:	
   498                           ;End of C runtime variable initialization code
   499                           
   500  07FC                     __end_of__initialization:
   501  07FC  0183               	clrf	3
   502  07FD  120A  118A  2E44   	ljmp	_main	;jump to C main() function
   503                           
   504                           	psect	bssBANK0
   505  0043                     __pbssBANK0:
   506  0043                     _idx:
   507  0043                     	ds	1
   508  0044                     _pass_user:
   509  0044                     	ds	5
   510                           
   511                           	psect	dataBANK0
   512  0033                     __pdataBANK0:
   513  0033                     keypad_getkey@F1296:
   514  0033                     	ds	16
   515                           
   516                           	psect	inittext
   517  050F                     init_fetch0:	
   518                           ;	Called with low address in FSR and high address in W
   519                           
   520  050F  087E               	movf	btemp,w
   521  0510  008A               	movwf	10
   522  0511  087F               	movf	btemp+1,w
   523  0512  0082               	movwf	2
   524  0513                     init_ram0:	
   525                           ;Called with:
   526                           ;	high address of idata address in btemp 
   527                           ;	low address of idata address in btemp+1 
   528                           ;	low address of data in FSR
   529                           ;	high address + 1 of data in btemp-1
   530                           
   531  0513  120A  118A  250F  120A  118A  	fcall	init_fetch0
   532  0518  0080               	movwf	0
   533  0519  0A84               	incf	4,f
   534  051A  0804               	movf	4,w
   535  051B  067D               	xorwf	btemp+-1,w
   536  051C  1903               	btfsc	3,2
   537  051D  3400               	retlw	0
   538  051E  0AFF               	incf	btemp+1,f
   539  051F  1903               	btfsc	3,2
   540  0520  0AFE               	incf	btemp,f
   541  0521  2D13               	goto	init_ram0
   542                           
   543                           	psect	cstackCOMMON
   544  0070                     __pcstackCOMMON:
   545  0070                     ?_LCD_Init:
   546  0070                     ?_keypad_init:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_keypad_init:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_LCD_Command:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ??_LCD_Command:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_keypad_getkey:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ??_keypad_getkey:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_LCD_Char:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ??_LCD_Char:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_LCD_Clear:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_LCD_String:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_strncmp:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     strncmp@s2:	
   583                           ; 2 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587  0070                     	ds	1
   588  0071                     strncmp@len:
   589                           
   590                           ; 2 bytes @ 0x1
   591  0071                     	ds	1
   592  0072                     LCD_Command@cmd:
   593  0072                     LCD_Char@dat:	
   594                           ; 1 bytes @ 0x2
   595                           
   596                           
   597                           ; 1 bytes @ 0x2
   598  0072                     	ds	1
   599  0073                     ??_LCD_Init:
   600  0073                     ??_strncmp:	
   601                           ; 1 bytes @ 0x3
   602                           
   603  0073                     ??_LCD_Clear:	
   604                           ; 1 bytes @ 0x3
   605                           
   606  0073                     ??_LCD_String:	
   607                           ; 1 bytes @ 0x3
   608                           
   609                           
   610                           ; 1 bytes @ 0x3
   611  0073                     	ds	1
   612  0074                     LCD_String@msg:
   613                           
   614                           ; 1 bytes @ 0x4
   615  0074                     	ds	1
   616  0075                     ?_LCD_String_xy:
   617  0075                     LCD_String_xy@pos:	
   618                           ; 1 bytes @ 0x5
   619                           
   620  0075                     strncmp@s1:	
   621                           ; 1 bytes @ 0x5
   622                           
   623                           
   624                           ; 1 bytes @ 0x5
   625  0075                     	ds	1
   626  0076                     LCD_String_xy@msg:
   627                           
   628                           ; 1 bytes @ 0x6
   629  0076                     	ds	1
   630  0077                     ??_LCD_String_xy:
   631                           
   632                           ; 1 bytes @ 0x7
   633  0077                     	ds	1
   634  0078                     LCD_String_xy@row:
   635                           
   636                           ; 1 bytes @ 0x8
   637  0078                     	ds	1
   638  0079                     LCD_String_xy@location:
   639                           
   640                           ; 1 bytes @ 0x9
   641  0079                     	ds	1
   642  007A                     ??_main:
   643                           
   644                           ; 1 bytes @ 0xA
   645  007A                     	ds	3
   646  007D                     main@key:
   647                           
   648                           ; 1 bytes @ 0xD
   649  007D                     	ds	1
   650                           
   651                           	psect	cstackBANK0
   652  0020                     __pcstackBANK0:
   653  0020                     keypad_getkey@letras:
   654                           
   655                           ; 16 bytes @ 0x0
   656  0020                     	ds	16
   657  0030                     keypad_getkey@valor:
   658                           
   659                           ; 1 bytes @ 0x10
   660  0030                     	ds	1
   661  0031                     keypad_getkey@i:
   662                           
   663                           ; 2 bytes @ 0x11
   664  0031                     	ds	2
   665                           
   666                           	psect	maintext
   667  0644                     __pmaintext:	
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 32 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  key             1   13[COMMON] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : B00/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          3       0       0       0       0
   690 ;;      Totals:         4       0       0       0       0
   691 ;;Total ram usage:        4 bytes
   692 ;; Hardware stack levels required when called: 3
   693 ;; This function calls:
   694 ;;		_LCD_Char
   695 ;;		_LCD_Clear
   696 ;;		_LCD_Command
   697 ;;		_LCD_Init
   698 ;;		_LCD_String_xy
   699 ;;		_keypad_getkey
   700 ;;		_keypad_init
   701 ;;		_strncmp
   702 ;; This function is called by:
   703 ;;		Startup code after reset
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707  0644                     _main:	
   708                           ;psect for function _main
   709                           
   710  0644                     l1185:	
   711                           ;incstack = 0
   712                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   713                           
   714                           
   715                           ;main.c: 36:     OSCCON = 0x71;
   716  0644  3071               	movlw	113
   717  0645  1683               	bsf	3,5	;RP0=1, select bank1
   718  0646  1303               	bcf	3,6	;RP1=0, select bank1
   719  0647  008F               	movwf	15	;volatile
   720  0648                     l1187:
   721                           
   722                           ;main.c: 38:     LCD_Init();
   723  0648  120A  118A  2568  120A  118A  	fcall	_LCD_Init
   724  064D                     l1189:
   725                           
   726                           ;main.c: 40:     keypad_init();
   727  064D  120A  118A  24E3  120A  118A  	fcall	_keypad_init
   728  0652                     l1191:
   729                           
   730                           ;main.c: 43:         LCD_String_xy(0,0,"Press a Key");
   731  0652  01F5               	clrf	LCD_String_xy@pos
   732  0653  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   733  0654  00FA               	movwf	??_main
   734  0655  087A               	movf	??_main,w
   735  0656  00F6               	movwf	LCD_String_xy@msg
   736  0657  3000               	movlw	0
   737  0658  120A  118A  2541  120A  118A  	fcall	_LCD_String_xy
   738  065D                     l1193:
   739                           
   740                           ;main.c: 44:         LCD_Command(0xC0);
   741  065D  30C0               	movlw	192
   742  065E  120A  118A  2592  120A  118A  	fcall	_LCD_Command
   743  0663                     l1195:
   744                           
   745                           ;main.c: 46:             key = keypad_getkey();
   746  0663  120A  118A  26E7  120A  118A  	fcall	_keypad_getkey
   747  0668  00FA               	movwf	??_main
   748  0669  087A               	movf	??_main,w
   749  066A  00FD               	movwf	main@key
   750  066B                     l1197:
   751                           
   752                           ;main.c: 47:             if(key != 0){
   753  066B  087D               	movf	main@key,w
   754  066C  1903               	btfsc	3,2
   755  066D  2E6F               	goto	u621
   756  066E  2E70               	goto	u620
   757  066F                     u621:
   758  066F  2E84               	goto	l1205
   759  0670                     u620:
   760  0670                     l1199:
   761                           
   762                           ;main.c: 49:                 LCD_Char(key);
   763  0670  087D               	movf	main@key,w
   764  0671  120A  118A  25C8  120A  118A  	fcall	_LCD_Char
   765  0676                     l1201:
   766                           
   767                           ;main.c: 50:                 pass_user[idx++] = key;
   768  0676  087D               	movf	main@key,w
   769  0677  00FA               	movwf	??_main
   770  0678  1283               	bcf	3,5	;RP0=0, select bank0
   771  0679  1303               	bcf	3,6	;RP1=0, select bank0
   772  067A  0843               	movf	_idx,w
   773  067B  3E44               	addlw	(low (_pass_user| 0))& (0+255)
   774  067C  0084               	movwf	4
   775  067D  087A               	movf	??_main,w
   776  067E  1383               	bcf	3,7	;select IRP bank0
   777  067F  0080               	movwf	0
   778  0680                     l1203:
   779  0680  3001               	movlw	1
   780  0681  00FA               	movwf	??_main
   781  0682  087A               	movf	??_main,w
   782  0683  07C3               	addwf	_idx,f
   783  0684                     l1205:
   784                           
   785                           ;main.c: 52:             _delay((unsigned long)((100)*(8000000/4000.0)));
   786  0684  3002               	movlw	2
   787  0685  00FC               	movwf	??_main+2
   788  0686  3004               	movlw	4
   789  0687  00FB               	movwf	??_main+1
   790  0688  30BA               	movlw	186
   791  0689  00FA               	movwf	??_main
   792  068A                     u657:
   793  068A  0BFA               	decfsz	??_main,f
   794  068B  2E8A               	goto	u657
   795  068C  0BFB               	decfsz	??_main+1,f
   796  068D  2E8A               	goto	u657
   797  068E  0BFC               	decfsz	??_main+2,f
   798  068F  2E8A               	goto	u657
   799  0690  0000               	nop
   800  0691                     l1207:
   801                           
   802                           ;main.c: 53:         }while(idx < 5);
   803  0691  3005               	movlw	5
   804  0692  1283               	bcf	3,5	;RP0=0, select bank0
   805  0693  1303               	bcf	3,6	;RP1=0, select bank0
   806  0694  0243               	subwf	_idx,w
   807  0695  1C03               	skipc
   808  0696  2E98               	goto	u631
   809  0697  2E99               	goto	u630
   810  0698                     u631:
   811  0698  2E63               	goto	l1195
   812  0699                     u630:
   813  0699                     l1209:
   814                           
   815                           ;main.c: 55:         if(strncmp(pass_user,password,4)==0){
   816  0699  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
   817  069A  00FA               	movwf	??_main
   818  069B  087A               	movf	??_main,w
   819  069C  00F0               	movwf	strncmp@s2
   820  069D  3004               	movlw	4
   821  069E  00F1               	movwf	strncmp@len
   822  069F  3000               	movlw	0
   823  06A0  00F2               	movwf	strncmp@len+1
   824  06A1  3044               	movlw	(low (_pass_user| 0))& (0+255)
   825  06A2  120A  118A  25FE  120A  118A  	fcall	_strncmp
   826  06A7  0870               	movf	?_strncmp,w
   827  06A8  0471               	iorwf	?_strncmp+1,w
   828  06A9  1D03               	btfss	3,2
   829  06AA  2EAC               	goto	u641
   830  06AB  2EAD               	goto	u640
   831  06AC                     u641:
   832  06AC  2EBE               	goto	l1215
   833  06AD                     u640:
   834  06AD                     l1211:
   835                           
   836                           ;main.c: 56:             LCD_Clear();
   837  06AD  120A  118A  24EF  120A  118A  	fcall	_LCD_Clear
   838  06B2                     l1213:
   839                           
   840                           ;main.c: 57:             LCD_String_xy(0,0,"Clave Correcta");
   841  06B2  01F5               	clrf	LCD_String_xy@pos
   842  06B3  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   843  06B4  00FA               	movwf	??_main
   844  06B5  087A               	movf	??_main,w
   845  06B6  00F6               	movwf	LCD_String_xy@msg
   846  06B7  3000               	movlw	0
   847  06B8  120A  118A  2541  120A  118A  	fcall	_LCD_String_xy
   848                           
   849                           ;main.c: 58:         }
   850  06BD  2ECE               	goto	l1219
   851  06BE                     l1215:
   852                           
   853                           ;main.c: 60:             LCD_Clear();
   854  06BE  120A  118A  24EF  120A  118A  	fcall	_LCD_Clear
   855  06C3                     l1217:
   856                           
   857                           ;main.c: 61:             LCD_String_xy(0,0,"Clave Incorrecta");
   858  06C3  01F5               	clrf	LCD_String_xy@pos
   859  06C4  3006               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   860  06C5  00FA               	movwf	??_main
   861  06C6  087A               	movf	??_main,w
   862  06C7  00F6               	movwf	LCD_String_xy@msg
   863  06C8  3000               	movlw	0
   864  06C9  120A  118A  2541  120A  118A  	fcall	_LCD_String_xy
   865  06CE                     l1219:
   866                           
   867                           ;main.c: 63:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   868  06CE  3015               	movlw	21
   869  06CF  00FC               	movwf	??_main+2
   870  06D0  304B               	movlw	75
   871  06D1  00FB               	movwf	??_main+1
   872  06D2  30BE               	movlw	190
   873  06D3  00FA               	movwf	??_main
   874  06D4                     u667:
   875  06D4  0BFA               	decfsz	??_main,f
   876  06D5  2ED4               	goto	u667
   877  06D6  0BFB               	decfsz	??_main+1,f
   878  06D7  2ED4               	goto	u667
   879  06D8  0BFC               	decfsz	??_main+2,f
   880  06D9  2ED4               	goto	u667
   881  06DA  0000               	nop
   882  06DB                     l1221:
   883                           
   884                           ;main.c: 64:         LCD_Clear();
   885  06DB  120A  118A  24EF  120A  118A  	fcall	_LCD_Clear
   886  06E0                     l1223:
   887                           
   888                           ;main.c: 65:         idx = 0;
   889  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   890  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   891  06E2  01C3               	clrf	_idx
   892  06E3  2E52               	goto	l1191
   893  06E4  120A  118A  2800   	ljmp	start
   894  06E7                     __end_of_main:
   895                           
   896                           	psect	text1
   897  05FE                     __ptext1:	
   898 ;; *************** function _strncmp *****************
   899 ;; Defined at:
   900 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strncmp.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  s1              1    wreg     PTR const unsigned char 
   903 ;;		 -> pass_user(5), 
   904 ;;  s2              1    0[COMMON] PTR const unsigned char 
   905 ;;		 -> password(5), 
   906 ;;  len             2    1[COMMON] unsigned int 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  s1              1    5[COMMON] PTR const unsigned char 
   909 ;;		 -> pass_user(5), 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2    0[COMMON] int 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         3       0       0       0       0
   920 ;;      Locals:         1       0       0       0       0
   921 ;;      Temps:          2       0       0       0       0
   922 ;;      Totals:         6       0       0       0       0
   923 ;;Total ram usage:        6 bytes
   924 ;; Hardware stack levels used: 2
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932  05FE                     _strncmp:	
   933                           ;psect for function _strncmp
   934                           
   935                           
   936                           ;incstack = 0
   937                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
   938                           ;strncmp@s1 stored from wreg
   939  05FE  00F5               	movwf	strncmp@s1
   940  05FF                     l1165:
   941  05FF  2E33               	goto	l681
   942  0600                     l1167:
   943  0600  0875               	movf	strncmp@s1,w
   944  0601  0084               	movwf	4
   945  0602  1383               	bcf	3,7	;select IRP bank0
   946  0603  0800               	movf	0,w
   947  0604  1903               	btfsc	3,2
   948  0605  2E07               	goto	u591
   949  0606  2E08               	goto	u590
   950  0607                     u591:
   951  0607  2E18               	goto	l1171
   952  0608                     u590:
   953  0608                     l1169:
   954  0608  0870               	movf	strncmp@s2,w
   955  0609  0084               	movwf	4
   956  060A  120A  118A  2003  120A  118A  	fcall	stringdir
   957  060F  00F3               	movwf	??_strncmp
   958  0610  0875               	movf	strncmp@s1,w
   959  0611  0084               	movwf	4
   960  0612  0800               	movf	0,w
   961  0613  0673               	xorwf	??_strncmp,w
   962  0614  1903               	skipnz
   963  0615  2E17               	goto	u601
   964  0616  2E18               	goto	u600
   965  0617                     u601:
   966  0617  2E2B               	goto	l1175
   967  0618                     u600:
   968  0618                     l1171:
   969  0618  0870               	movf	strncmp@s2,w
   970  0619  0084               	movwf	4
   971  061A  120A  118A  2003  120A  118A  	fcall	stringdir
   972  061F  00F3               	movwf	??_strncmp
   973  0620  0875               	movf	strncmp@s1,w
   974  0621  0084               	movwf	4
   975  0622  0800               	movf	0,w
   976  0623  00F4               	movwf	??_strncmp+1
   977  0624  0873               	movf	??_strncmp,w
   978  0625  0274               	subwf	??_strncmp+1,w
   979  0626  00F0               	movwf	?_strncmp
   980  0627  01F1               	clrf	?_strncmp+1
   981  0628  1C03               	skipc
   982  0629  03F1               	decf	?_strncmp+1,f
   983  062A  2E43               	goto	l686
   984  062B                     l1175:
   985  062B  3001               	movlw	1
   986  062C  00F3               	movwf	??_strncmp
   987  062D  0873               	movf	??_strncmp,w
   988  062E  07F5               	addwf	strncmp@s1,f
   989  062F  3001               	movlw	1
   990  0630  00F3               	movwf	??_strncmp
   991  0631  0873               	movf	??_strncmp,w
   992  0632  07F0               	addwf	strncmp@s2,f
   993  0633                     l681:
   994  0633  3001               	movlw	1
   995  0634  02F1               	subwf	strncmp@len,f
   996  0635  3000               	movlw	0
   997  0636  1C03               	skipc
   998  0637  03F2               	decf	strncmp@len+1,f
   999  0638  02F2               	subwf	strncmp@len+1,f
  1000  0639  0A71               	incf	strncmp@len,w
  1001  063A  1D03               	skipz
  1002  063B  2E40               	goto	u611
  1003  063C  0A72               	incf	strncmp@len+1,w
  1004  063D  1D03               	btfss	3,2
  1005  063E  2E40               	goto	u611
  1006  063F  2E41               	goto	u610
  1007  0640                     u611:
  1008  0640  2E00               	goto	l1167
  1009  0641                     u610:
  1010  0641                     l1177:
  1011  0641  01F0               	clrf	?_strncmp
  1012  0642  01F1               	clrf	?_strncmp+1
  1013  0643                     l686:
  1014  0643  0008               	return
  1015  0644                     __end_of_strncmp:
  1016                           
  1017                           	psect	text2
  1018  04E3                     __ptext2:	
  1019 ;; *************** function _keypad_init *****************
  1020 ;; Defined at:
  1021 ;;		line 38 in file "KEYPAD.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          1       0       0       0       0
  1038 ;;      Totals:         1       0       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048  04E3                     _keypad_init:	
  1049                           ;psect for function _keypad_init
  1050                           
  1051  04E3                     l1047:	
  1052                           ;incstack = 0
  1053                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  1054                           
  1055                           
  1056                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1057  04E3  30F0               	movlw	240
  1058  04E4  00F0               	movwf	??_keypad_init
  1059  04E5  0870               	movf	??_keypad_init,w
  1060  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  1061  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  1062  04E8  0586               	andwf	6,f	;volatile
  1063                           
  1064                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1065  04E9  30F0               	movlw	240
  1066  04EA  00F0               	movwf	??_keypad_init
  1067  04EB  0870               	movf	??_keypad_init,w
  1068  04EC  0486               	iorwf	6,f	;volatile
  1069  04ED                     l1049:
  1070                           
  1071                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  1072  04ED  1381               	bcf	1,7	;volatile
  1073  04EE                     l85:
  1074  04EE  0008               	return
  1075  04EF                     __end_of_keypad_init:
  1076                           
  1077                           	psect	text3
  1078  06E7                     __ptext3:	
  1079 ;; *************** function _keypad_getkey *****************
  1080 ;; Defined at:
  1081 ;;		line 57 in file "KEYPAD.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1086 ;;  i               2   17[BANK0 ] int 
  1087 ;;  valor           1   16[BANK0 ] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      unsigned char 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0      19       0       0       0
  1099 ;;      Temps:          4       0       0       0       0
  1100 ;;      Totals:         4      19       0       0       0
  1101 ;;Total ram usage:       23 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110  06E7                     _keypad_getkey:	
  1111                           ;psect for function _keypad_getkey
  1112                           
  1113  06E7                     l1065:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1116                           
  1117                           
  1118                           ;KEYPAD.c: 59: char letras[4][4]={ {'1','2','3','A'},
  1119  06E7  3020               	movlw	keypad_getkey@letras& (0+255)
  1120  06E8  0084               	movwf	4
  1121  06E9  3033               	movlw	low keypad_getkey@F1296
  1122  06EA  00F0               	movwf	??_keypad_getkey
  1123  06EB  0804               	movf	4,w
  1124  06EC  00F1               	movwf	??_keypad_getkey+1
  1125  06ED  3010               	movlw	16
  1126  06EE  00F2               	movwf	??_keypad_getkey+2
  1127  06EF                     u370:
  1128  06EF  0870               	movf	??_keypad_getkey,w
  1129  06F0  0084               	movwf	4
  1130  06F1  1383               	bcf	3,7	;select IRP bank0
  1131  06F2  0800               	movf	0,w
  1132  06F3  00F3               	movwf	??_keypad_getkey+3
  1133  06F4  0AF0               	incf	??_keypad_getkey,f
  1134  06F5  0871               	movf	??_keypad_getkey+1,w
  1135  06F6  0084               	movwf	4
  1136  06F7  0873               	movf	??_keypad_getkey+3,w
  1137  06F8  0080               	movwf	0
  1138  06F9  0AF1               	incf	??_keypad_getkey+1,f
  1139  06FA  0BF2               	decfsz	??_keypad_getkey+2,f
  1140  06FB  2EEF               	goto	u370
  1141  06FC                     l1067:
  1142  06FC                     l1069:
  1143                           
  1144                           ;KEYPAD.c: 64: char valor=0;
  1145  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1146  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1147  06FE  01B0               	clrf	keypad_getkey@valor
  1148  06FF                     l1071:
  1149                           
  1150                           ;KEYPAD.c: 66: for(i=0;i<4;i++){
  1151  06FF  01B1               	clrf	keypad_getkey@i
  1152  0700  01B2               	clrf	keypad_getkey@i+1
  1153  0701                     l1077:
  1154                           
  1155                           ;KEYPAD.c: 68:    if(i==0){
  1156  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0703  0831               	movf	keypad_getkey@i,w
  1159  0704  0432               	iorwf	keypad_getkey@i+1,w
  1160  0705  1D03               	btfss	3,2
  1161  0706  2F08               	goto	u381
  1162  0707  2F09               	goto	u380
  1163  0708                     u381:
  1164  0708  2F36               	goto	l1097
  1165  0709                     u380:
  1166  0709                     l1079:
  1167                           
  1168                           ;KEYPAD.c: 70:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1169  0709  30FE               	movlw	254
  1170  070A  0086               	movwf	6	;volatile
  1171                           
  1172                           ;KEYPAD.c: 71:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1173  070B  3042               	movlw	66
  1174  070C  00F0               	movwf	??_keypad_getkey
  1175  070D                     u677:
  1176  070D  0BF0               	decfsz	??_keypad_getkey,f
  1177  070E  2F0D               	goto	u677
  1178  070F  0000               	nop
  1179                           
  1180                           ;KEYPAD.c: 72:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1181  0710  2F15               	goto	l1083
  1182  0711                     l1081:
  1183  0711  0820               	movf	keypad_getkey@letras,w
  1184  0712  00F0               	movwf	??_keypad_getkey
  1185  0713  0870               	movf	??_keypad_getkey,w
  1186  0714  00B0               	movwf	keypad_getkey@valor
  1187  0715                     l1083:
  1188  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0717  1E06               	btfss	6,4	;volatile
  1191  0718  2F1A               	goto	u391
  1192  0719  2F1B               	goto	u390
  1193  071A                     u391:
  1194  071A  2F11               	goto	l1081
  1195  071B                     u390:
  1196  071B  2F20               	goto	l1087
  1197  071C                     l1085:
  1198  071C  0821               	movf	keypad_getkey@letras+1,w
  1199  071D  00F0               	movwf	??_keypad_getkey
  1200  071E  0870               	movf	??_keypad_getkey,w
  1201  071F  00B0               	movwf	keypad_getkey@valor
  1202  0720                     l1087:
  1203  0720  1E86               	btfss	6,5	;volatile
  1204  0721  2F23               	goto	u401
  1205  0722  2F24               	goto	u400
  1206  0723                     u401:
  1207  0723  2F1C               	goto	l1085
  1208  0724                     u400:
  1209  0724  2F29               	goto	l1091
  1210  0725                     l1089:
  1211  0725  0822               	movf	keypad_getkey@letras+2,w
  1212  0726  00F0               	movwf	??_keypad_getkey
  1213  0727  0870               	movf	??_keypad_getkey,w
  1214  0728  00B0               	movwf	keypad_getkey@valor
  1215  0729                     l1091:
  1216  0729  1F06               	btfss	6,6	;volatile
  1217  072A  2F2C               	goto	u411
  1218  072B  2F2D               	goto	u410
  1219  072C                     u411:
  1220  072C  2F25               	goto	l1089
  1221  072D                     u410:
  1222  072D  2F32               	goto	l1095
  1223  072E                     l1093:
  1224  072E  0823               	movf	keypad_getkey@letras+3,w
  1225  072F  00F0               	movwf	??_keypad_getkey
  1226  0730  0870               	movf	??_keypad_getkey,w
  1227  0731  00B0               	movwf	keypad_getkey@valor
  1228  0732                     l1095:
  1229  0732  1F86               	btfss	6,7	;volatile
  1230  0733  2F35               	goto	u421
  1231  0734  2F36               	goto	u420
  1232  0735                     u421:
  1233  0735  2F2E               	goto	l1093
  1234  0736                     u420:
  1235  0736                     l1097:
  1236                           
  1237                           ;KEYPAD.c: 78:    if(i==1){
  1238  0736  0331               	decf	keypad_getkey@i,w
  1239  0737  0432               	iorwf	keypad_getkey@i+1,w
  1240  0738  1D03               	btfss	3,2
  1241  0739  2F3B               	goto	u431
  1242  073A  2F3C               	goto	u430
  1243  073B                     u431:
  1244  073B  2F69               	goto	l1117
  1245  073C                     u430:
  1246  073C                     l1099:
  1247                           
  1248                           ;KEYPAD.c: 79:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1249  073C  30FD               	movlw	253
  1250  073D  0086               	movwf	6	;volatile
  1251                           
  1252                           ;KEYPAD.c: 80:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1253  073E  3042               	movlw	66
  1254  073F  00F0               	movwf	??_keypad_getkey
  1255  0740                     u687:
  1256  0740  0BF0               	decfsz	??_keypad_getkey,f
  1257  0741  2F40               	goto	u687
  1258  0742  0000               	nop
  1259                           
  1260                           ;KEYPAD.c: 81:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1261  0743  2F48               	goto	l1103
  1262  0744                     l1101:
  1263  0744  0824               	movf	keypad_getkey@letras+4,w
  1264  0745  00F0               	movwf	??_keypad_getkey
  1265  0746  0870               	movf	??_keypad_getkey,w
  1266  0747  00B0               	movwf	keypad_getkey@valor
  1267  0748                     l1103:
  1268  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1270  074A  1E06               	btfss	6,4	;volatile
  1271  074B  2F4D               	goto	u441
  1272  074C  2F4E               	goto	u440
  1273  074D                     u441:
  1274  074D  2F44               	goto	l1101
  1275  074E                     u440:
  1276  074E  2F53               	goto	l1107
  1277  074F                     l1105:
  1278  074F  0825               	movf	keypad_getkey@letras+5,w
  1279  0750  00F0               	movwf	??_keypad_getkey
  1280  0751  0870               	movf	??_keypad_getkey,w
  1281  0752  00B0               	movwf	keypad_getkey@valor
  1282  0753                     l1107:
  1283  0753  1E86               	btfss	6,5	;volatile
  1284  0754  2F56               	goto	u451
  1285  0755  2F57               	goto	u450
  1286  0756                     u451:
  1287  0756  2F4F               	goto	l1105
  1288  0757                     u450:
  1289  0757  2F5C               	goto	l1111
  1290  0758                     l1109:
  1291  0758  0826               	movf	keypad_getkey@letras+6,w
  1292  0759  00F0               	movwf	??_keypad_getkey
  1293  075A  0870               	movf	??_keypad_getkey,w
  1294  075B  00B0               	movwf	keypad_getkey@valor
  1295  075C                     l1111:
  1296  075C  1F06               	btfss	6,6	;volatile
  1297  075D  2F5F               	goto	u461
  1298  075E  2F60               	goto	u460
  1299  075F                     u461:
  1300  075F  2F58               	goto	l1109
  1301  0760                     u460:
  1302  0760  2F65               	goto	l1115
  1303  0761                     l1113:
  1304  0761  0827               	movf	keypad_getkey@letras+7,w
  1305  0762  00F0               	movwf	??_keypad_getkey
  1306  0763  0870               	movf	??_keypad_getkey,w
  1307  0764  00B0               	movwf	keypad_getkey@valor
  1308  0765                     l1115:
  1309  0765  1F86               	btfss	6,7	;volatile
  1310  0766  2F68               	goto	u471
  1311  0767  2F69               	goto	u470
  1312  0768                     u471:
  1313  0768  2F61               	goto	l1113
  1314  0769                     u470:
  1315  0769                     l1117:
  1316                           
  1317                           ;KEYPAD.c: 87:    if(i==2){
  1318  0769  3002               	movlw	2
  1319  076A  0631               	xorwf	keypad_getkey@i,w
  1320  076B  0432               	iorwf	keypad_getkey@i+1,w
  1321  076C  1D03               	btfss	3,2
  1322  076D  2F6F               	goto	u481
  1323  076E  2F70               	goto	u480
  1324  076F                     u481:
  1325  076F  2F9D               	goto	l1137
  1326  0770                     u480:
  1327  0770                     l1119:
  1328                           
  1329                           ;KEYPAD.c: 88:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1330  0770  30FB               	movlw	251
  1331  0771  0086               	movwf	6	;volatile
  1332                           
  1333                           ;KEYPAD.c: 89:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1334  0772  3042               	movlw	66
  1335  0773  00F0               	movwf	??_keypad_getkey
  1336  0774                     u697:
  1337  0774  0BF0               	decfsz	??_keypad_getkey,f
  1338  0775  2F74               	goto	u697
  1339  0776  0000               	nop
  1340                           
  1341                           ;KEYPAD.c: 90:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1342  0777  2F7C               	goto	l1123
  1343  0778                     l1121:
  1344  0778  0828               	movf	keypad_getkey@letras+8,w
  1345  0779  00F0               	movwf	??_keypad_getkey
  1346  077A  0870               	movf	??_keypad_getkey,w
  1347  077B  00B0               	movwf	keypad_getkey@valor
  1348  077C                     l1123:
  1349  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1350  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1351  077E  1E06               	btfss	6,4	;volatile
  1352  077F  2F81               	goto	u491
  1353  0780  2F82               	goto	u490
  1354  0781                     u491:
  1355  0781  2F78               	goto	l1121
  1356  0782                     u490:
  1357  0782  2F87               	goto	l1127
  1358  0783                     l1125:
  1359  0783  0829               	movf	keypad_getkey@letras+9,w
  1360  0784  00F0               	movwf	??_keypad_getkey
  1361  0785  0870               	movf	??_keypad_getkey,w
  1362  0786  00B0               	movwf	keypad_getkey@valor
  1363  0787                     l1127:
  1364  0787  1E86               	btfss	6,5	;volatile
  1365  0788  2F8A               	goto	u501
  1366  0789  2F8B               	goto	u500
  1367  078A                     u501:
  1368  078A  2F83               	goto	l1125
  1369  078B                     u500:
  1370  078B  2F90               	goto	l1131
  1371  078C                     l1129:
  1372  078C  082A               	movf	keypad_getkey@letras+10,w
  1373  078D  00F0               	movwf	??_keypad_getkey
  1374  078E  0870               	movf	??_keypad_getkey,w
  1375  078F  00B0               	movwf	keypad_getkey@valor
  1376  0790                     l1131:
  1377  0790  1F06               	btfss	6,6	;volatile
  1378  0791  2F93               	goto	u511
  1379  0792  2F94               	goto	u510
  1380  0793                     u511:
  1381  0793  2F8C               	goto	l1129
  1382  0794                     u510:
  1383  0794  2F99               	goto	l1135
  1384  0795                     l1133:
  1385  0795  082B               	movf	keypad_getkey@letras+11,w
  1386  0796  00F0               	movwf	??_keypad_getkey
  1387  0797  0870               	movf	??_keypad_getkey,w
  1388  0798  00B0               	movwf	keypad_getkey@valor
  1389  0799                     l1135:
  1390  0799  1F86               	btfss	6,7	;volatile
  1391  079A  2F9C               	goto	u521
  1392  079B  2F9D               	goto	u520
  1393  079C                     u521:
  1394  079C  2F95               	goto	l1133
  1395  079D                     u520:
  1396  079D                     l1137:
  1397                           
  1398                           ;KEYPAD.c: 96:    if(i==3){
  1399  079D  3003               	movlw	3
  1400  079E  0631               	xorwf	keypad_getkey@i,w
  1401  079F  0432               	iorwf	keypad_getkey@i+1,w
  1402  07A0  1D03               	btfss	3,2
  1403  07A1  2FA3               	goto	u531
  1404  07A2  2FA4               	goto	u530
  1405  07A3                     u531:
  1406  07A3  2FD1               	goto	l1157
  1407  07A4                     u530:
  1408  07A4                     l1139:
  1409                           
  1410                           ;KEYPAD.c: 97:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1411  07A4  30F7               	movlw	247
  1412  07A5  0086               	movwf	6	;volatile
  1413                           
  1414                           ;KEYPAD.c: 98:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1415  07A6  3042               	movlw	66
  1416  07A7  00F0               	movwf	??_keypad_getkey
  1417  07A8                     u707:
  1418  07A8  0BF0               	decfsz	??_keypad_getkey,f
  1419  07A9  2FA8               	goto	u707
  1420  07AA  0000               	nop
  1421                           
  1422                           ;KEYPAD.c: 99:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1423  07AB  2FB0               	goto	l1143
  1424  07AC                     l1141:
  1425  07AC  082C               	movf	keypad_getkey@letras+12,w
  1426  07AD  00F0               	movwf	??_keypad_getkey
  1427  07AE  0870               	movf	??_keypad_getkey,w
  1428  07AF  00B0               	movwf	keypad_getkey@valor
  1429  07B0                     l1143:
  1430  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1431  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1432  07B2  1E06               	btfss	6,4	;volatile
  1433  07B3  2FB5               	goto	u541
  1434  07B4  2FB6               	goto	u540
  1435  07B5                     u541:
  1436  07B5  2FAC               	goto	l1141
  1437  07B6                     u540:
  1438  07B6  2FBB               	goto	l1147
  1439  07B7                     l1145:
  1440  07B7  082D               	movf	keypad_getkey@letras+13,w
  1441  07B8  00F0               	movwf	??_keypad_getkey
  1442  07B9  0870               	movf	??_keypad_getkey,w
  1443  07BA  00B0               	movwf	keypad_getkey@valor
  1444  07BB                     l1147:
  1445  07BB  1E86               	btfss	6,5	;volatile
  1446  07BC  2FBE               	goto	u551
  1447  07BD  2FBF               	goto	u550
  1448  07BE                     u551:
  1449  07BE  2FB7               	goto	l1145
  1450  07BF                     u550:
  1451  07BF  2FC4               	goto	l1151
  1452  07C0                     l1149:
  1453  07C0  082E               	movf	keypad_getkey@letras+14,w
  1454  07C1  00F0               	movwf	??_keypad_getkey
  1455  07C2  0870               	movf	??_keypad_getkey,w
  1456  07C3  00B0               	movwf	keypad_getkey@valor
  1457  07C4                     l1151:
  1458  07C4  1F06               	btfss	6,6	;volatile
  1459  07C5  2FC7               	goto	u561
  1460  07C6  2FC8               	goto	u560
  1461  07C7                     u561:
  1462  07C7  2FC0               	goto	l1149
  1463  07C8                     u560:
  1464  07C8  2FCD               	goto	l1155
  1465  07C9                     l1153:
  1466  07C9  082F               	movf	keypad_getkey@letras+15,w
  1467  07CA  00F0               	movwf	??_keypad_getkey
  1468  07CB  0870               	movf	??_keypad_getkey,w
  1469  07CC  00B0               	movwf	keypad_getkey@valor
  1470  07CD                     l1155:
  1471  07CD  1F86               	btfss	6,7	;volatile
  1472  07CE  2FD0               	goto	u571
  1473  07CF  2FD1               	goto	u570
  1474  07D0                     u571:
  1475  07D0  2FC9               	goto	l1153
  1476  07D1                     u570:
  1477  07D1                     l1157:
  1478                           
  1479                           ;KEYPAD.c: 104:    }
  1480  07D1  3001               	movlw	1
  1481  07D2  07B1               	addwf	keypad_getkey@i,f
  1482  07D3  1803               	skipnc
  1483  07D4  0AB2               	incf	keypad_getkey@i+1,f
  1484  07D5  3000               	movlw	0
  1485  07D6  07B2               	addwf	keypad_getkey@i+1,f
  1486  07D7                     l1159:
  1487  07D7  0832               	movf	keypad_getkey@i+1,w
  1488  07D8  3A80               	xorlw	128
  1489  07D9  00FF               	movwf	btemp+1
  1490  07DA  3080               	movlw	128
  1491  07DB  027F               	subwf	btemp+1,w
  1492  07DC  1D03               	skipz
  1493  07DD  2FE0               	goto	u585
  1494  07DE  3004               	movlw	4
  1495  07DF  0231               	subwf	keypad_getkey@i,w
  1496  07E0                     u585:
  1497  07E0  1C03               	skipc
  1498  07E1  2FE3               	goto	u581
  1499  07E2  2FE4               	goto	u580
  1500  07E3                     u581:
  1501  07E3  2F01               	goto	l1077
  1502  07E4                     u580:
  1503  07E4                     l1161:
  1504                           
  1505                           ;KEYPAD.c: 106:    return valor;
  1506  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1507  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1508  07E6  0830               	movf	keypad_getkey@valor,w
  1509  07E7                     l144:
  1510  07E7  0008               	return
  1511  07E8                     __end_of_keypad_getkey:
  1512                           
  1513                           	psect	text4
  1514  0541                     __ptext4:	
  1515 ;; *************** function _LCD_String_xy *****************
  1516 ;; Defined at:
  1517 ;;		line 116 in file "LCD.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  row             1    wreg     unsigned char 
  1520 ;;  pos             1    5[COMMON] unsigned char 
  1521 ;;  msg             1    6[COMMON] PTR const unsigned char 
  1522 ;;		 -> STR_3(17), STR_2(15), STR_1(12), 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  row             1    8[COMMON] unsigned char 
  1525 ;;  location        1    9[COMMON] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         2       0       0       0       0
  1536 ;;      Locals:         2       0       0       0       0
  1537 ;;      Temps:          1       0       0       0       0
  1538 ;;      Totals:         5       0       0       0       0
  1539 ;;Total ram usage:        5 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 2
  1542 ;; This function calls:
  1543 ;;		_LCD_Command
  1544 ;;		_LCD_String
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550  0541                     _LCD_String_xy:	
  1551                           ;psect for function _LCD_String_xy
  1552                           
  1553                           
  1554                           ;incstack = 0
  1555                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1556                           ;LCD_String_xy@row stored from wreg
  1557  0541  00F8               	movwf	LCD_String_xy@row
  1558  0542                     l1051:
  1559  0542                     l1053:
  1560                           
  1561                           ;LCD.c: 119:     if(row<=1)
  1562  0542  3002               	movlw	2
  1563  0543  0278               	subwf	LCD_String_xy@row,w
  1564  0544  1803               	skipnc
  1565  0545  2D47               	goto	u361
  1566  0546  2D48               	goto	u360
  1567  0547                     u361:
  1568  0547  2D55               	goto	l1059
  1569  0548                     u360:
  1570  0548                     l1055:
  1571                           
  1572                           ;LCD.c: 120:     {;LCD.c: 121:         location=(0x80) | ((pos) & 0x0f);
  1573  0548  0875               	movf	LCD_String_xy@pos,w
  1574  0549  390F               	andlw	15
  1575  054A  3880               	iorlw	128
  1576  054B  00F7               	movwf	??_LCD_String_xy
  1577  054C  0877               	movf	??_LCD_String_xy,w
  1578  054D  00F9               	movwf	LCD_String_xy@location
  1579  054E                     l1057:
  1580                           
  1581                           ;LCD.c: 122:         LCD_Command(location);
  1582  054E  0879               	movf	LCD_String_xy@location,w
  1583  054F  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1584                           
  1585                           ;LCD.c: 123:     }
  1586  0554  2D61               	goto	l1063
  1587  0555                     l1059:
  1588                           
  1589                           ;LCD.c: 125:     {;LCD.c: 126:         location=(0xC0) | ((pos) & 0x0f);
  1590  0555  0875               	movf	LCD_String_xy@pos,w
  1591  0556  390F               	andlw	15
  1592  0557  38C0               	iorlw	192
  1593  0558  00F7               	movwf	??_LCD_String_xy
  1594  0559  0877               	movf	??_LCD_String_xy,w
  1595  055A  00F9               	movwf	LCD_String_xy@location
  1596  055B                     l1061:
  1597                           
  1598                           ;LCD.c: 127:         LCD_Command(location);
  1599  055B  0879               	movf	LCD_String_xy@location,w
  1600  055C  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1601  0561                     l1063:
  1602                           
  1603                           ;LCD.c: 131:     LCD_String(msg);
  1604  0561  0876               	movf	LCD_String_xy@msg,w
  1605  0562  120A  118A  2522  120A  118A  	fcall	_LCD_String
  1606  0567                     l71:
  1607  0567  0008               	return
  1608  0568                     __end_of_LCD_String_xy:
  1609                           
  1610                           	psect	text5
  1611  0522                     __ptext5:	
  1612 ;; *************** function _LCD_String *****************
  1613 ;; Defined at:
  1614 ;;		line 106 in file "LCD.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  msg             1    wreg     PTR const unsigned char 
  1617 ;;		 -> STR_3(17), STR_2(15), STR_1(12), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  msg             1    4[COMMON] PTR const unsigned char 
  1620 ;;		 -> STR_3(17), STR_2(15), STR_1(12), 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0
  1632 ;;      Temps:          1       0       0       0       0
  1633 ;;      Totals:         2       0       0       0       0
  1634 ;;Total ram usage:        2 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 1
  1637 ;; This function calls:
  1638 ;;		_LCD_Char
  1639 ;; This function is called by:
  1640 ;;		_LCD_String_xy
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644  0522                     _LCD_String:	
  1645                           ;psect for function _LCD_String
  1646                           
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1650                           ;LCD_String@msg stored from wreg
  1651  0522  00F4               	movwf	LCD_String@msg
  1652  0523                     l1025:
  1653                           
  1654                           ;LCD.c: 106: void LCD_String(const char *msg);LCD.c: 107: {;LCD.c: 108:  while((*msg)!=0
      +                          )
  1655  0523  2D34               	goto	l1031
  1656  0524                     l1027:
  1657                           
  1658                           ;LCD.c: 109:  {;LCD.c: 110:    LCD_Char(*msg);
  1659  0524  0874               	movf	LCD_String@msg,w
  1660  0525  0084               	movwf	4
  1661  0526  120A  118A  2003  120A  118A  	fcall	stringdir
  1662  052B  120A  118A  25C8  120A  118A  	fcall	_LCD_Char
  1663  0530                     l1029:
  1664                           
  1665                           ;LCD.c: 111:    msg++;
  1666  0530  3001               	movlw	1
  1667  0531  00F3               	movwf	??_LCD_String
  1668  0532  0873               	movf	??_LCD_String,w
  1669  0533  07F4               	addwf	LCD_String@msg,f
  1670  0534                     l1031:
  1671                           
  1672                           ;LCD.c: 108:  while((*msg)!=0)
  1673  0534  0874               	movf	LCD_String@msg,w
  1674  0535  0084               	movwf	4
  1675  0536  120A  118A  2003  120A  118A  	fcall	stringdir
  1676  053B  3A00               	xorlw	0
  1677  053C  1D03               	skipz
  1678  053D  2D3F               	goto	u351
  1679  053E  2D40               	goto	u350
  1680  053F                     u351:
  1681  053F  2D24               	goto	l1027
  1682  0540                     u350:
  1683  0540                     l66:
  1684  0540  0008               	return
  1685  0541                     __end_of_LCD_String:
  1686                           
  1687                           	psect	text6
  1688  05C8                     __ptext6:	
  1689 ;; *************** function _LCD_Char *****************
  1690 ;; Defined at:
  1691 ;;		line 91 in file "LCD.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  dat             1    wreg     unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  dat             1    2[COMMON] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0
  1707 ;;      Temps:          2       0       0       0       0
  1708 ;;      Totals:         3       0       0       0       0
  1709 ;;Total ram usage:        3 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;;		_LCD_String
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719  05C8                     _LCD_Char:	
  1720                           ;psect for function _LCD_Char
  1721                           
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1725                           ;LCD_Char@dat stored from wreg
  1726  05C8  00F2               	movwf	LCD_Char@dat
  1727  05C9                     l985:
  1728                           
  1729                           ;LCD.c: 91: void LCD_Char(unsigned char dat);LCD.c: 92: {;LCD.c: 93:  PORTD = (PORTD & 0
      +                          x0f) | (0xF0 & dat);
  1730  05C9  30F0               	movlw	240
  1731  05CA  0572               	andwf	LCD_Char@dat,w
  1732  05CB  00F0               	movwf	??_LCD_Char
  1733  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1734  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1735  05CE  0808               	movf	8,w	;volatile
  1736  05CF  390F               	andlw	15
  1737  05D0  0470               	iorwf	??_LCD_Char,w
  1738  05D1  0088               	movwf	8	;volatile
  1739  05D2                     l987:
  1740                           
  1741                           ;LCD.c: 94:  PORTDbits.RD0 = 1;
  1742  05D2  1408               	bsf	8,0	;volatile
  1743  05D3                     l989:
  1744                           
  1745                           ;LCD.c: 95:  PORTDbits.RD1 = 1;
  1746  05D3  1488               	bsf	8,1	;volatile
  1747  05D4                     l991:
  1748                           
  1749                           ;LCD.c: 96:  __nop();
  1750  05D4  0000               	nop
  1751  05D5                     l993:
  1752                           
  1753                           ;LCD.c: 97:  PORTDbits.RD1 = 0;
  1754  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1755  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1756  05D7  1088               	bcf	8,1	;volatile
  1757  05D8                     l995:
  1758                           
  1759                           ;LCD.c: 98:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1760  05D8  3003               	movlw	3
  1761  05D9  00F1               	movwf	??_LCD_Char+1
  1762  05DA  3097               	movlw	151
  1763  05DB  00F0               	movwf	??_LCD_Char
  1764  05DC                     u717:
  1765  05DC  0BF0               	decfsz	??_LCD_Char,f
  1766  05DD  2DDC               	goto	u717
  1767  05DE  0BF1               	decfsz	??_LCD_Char+1,f
  1768  05DF  2DDC               	goto	u717
  1769  05E0  2DE1               	nop2
  1770  05E1                     l997:
  1771                           
  1772                           ;LCD.c: 99:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  1773  05E1  0872               	movf	LCD_Char@dat,w
  1774  05E2  00F0               	movwf	??_LCD_Char
  1775  05E3  3004               	movlw	4
  1776  05E4                     u335:
  1777  05E4  1003               	clrc
  1778  05E5  0DF0               	rlf	??_LCD_Char,f
  1779  05E6  3EFF               	addlw	-1
  1780  05E7  1D03               	skipz
  1781  05E8  2DE4               	goto	u335
  1782  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1783  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1784  05EB  0808               	movf	8,w	;volatile
  1785  05EC  390F               	andlw	15
  1786  05ED  0470               	iorwf	??_LCD_Char,w
  1787  05EE  0088               	movwf	8	;volatile
  1788  05EF                     l999:
  1789                           
  1790                           ;LCD.c: 100:  PORTDbits.RD1 = 1;
  1791  05EF  1488               	bsf	8,1	;volatile
  1792  05F0                     l1001:
  1793                           
  1794                           ;LCD.c: 101:  __nop();
  1795  05F0  0000               	nop
  1796  05F1                     l1003:
  1797                           
  1798                           ;LCD.c: 102:  PORTDbits.RD1 = 0;
  1799  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1800  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1801  05F3  1088               	bcf	8,1	;volatile
  1802                           
  1803                           ;LCD.c: 103:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1804  05F4  3008               	movlw	8
  1805  05F5  00F1               	movwf	??_LCD_Char+1
  1806  05F6  30C9               	movlw	201
  1807  05F7  00F0               	movwf	??_LCD_Char
  1808  05F8                     u727:
  1809  05F8  0BF0               	decfsz	??_LCD_Char,f
  1810  05F9  2DF8               	goto	u727
  1811  05FA  0BF1               	decfsz	??_LCD_Char+1,f
  1812  05FB  2DF8               	goto	u727
  1813  05FC  2DFD               	nop2
  1814  05FD                     l60:
  1815  05FD  0008               	return
  1816  05FE                     __end_of_LCD_Char:
  1817                           
  1818                           	psect	text7
  1819  0568                     __ptext7:	
  1820 ;; *************** function _LCD_Init *****************
  1821 ;; Defined at:
  1822 ;;		line 38 in file "LCD.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0, pclath, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          2       0       0       0       0
  1839 ;;      Totals:         2       0       0       0       0
  1840 ;;Total ram usage:        2 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 1
  1843 ;; This function calls:
  1844 ;;		_LCD_Command
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850  0568                     _LCD_Init:	
  1851                           ;psect for function _LCD_Init
  1852                           
  1853  0568                     l1033:	
  1854                           ;incstack = 0
  1855                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1856                           
  1857                           
  1858                           ;LCD.c: 40:     TRISD = 0;
  1859  0568  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0569  1303               	bcf	3,6	;RP1=0, select bank1
  1861  056A  0188               	clrf	8	;volatile
  1862  056B                     l1035:
  1863                           
  1864                           ;LCD.c: 41:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1865  056B  3027               	movlw	39
  1866  056C  00F4               	movwf	??_LCD_Init+1
  1867  056D  30F5               	movlw	245
  1868  056E  00F3               	movwf	??_LCD_Init
  1869  056F                     u737:
  1870  056F  0BF3               	decfsz	??_LCD_Init,f
  1871  0570  2D6F               	goto	u737
  1872  0571  0BF4               	decfsz	??_LCD_Init+1,f
  1873  0572  2D6F               	goto	u737
  1874  0573                     l1037:
  1875                           
  1876                           ;LCD.c: 42:     LCD_Command(0x02);
  1877  0573  3002               	movlw	2
  1878  0574  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1879  0579                     l1039:
  1880                           
  1881                           ;LCD.c: 43:     LCD_Command(0x28);
  1882  0579  3028               	movlw	40
  1883  057A  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1884  057F                     l1041:
  1885                           
  1886                           ;LCD.c: 44:     LCD_Command(0x01);
  1887  057F  3001               	movlw	1
  1888  0580  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1889  0585                     l1043:
  1890                           
  1891                           ;LCD.c: 45:     LCD_Command(0x0c);
  1892  0585  300C               	movlw	12
  1893  0586  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1894  058B                     l1045:
  1895                           
  1896                           ;LCD.c: 46:     LCD_Command(0x06);
  1897  058B  3006               	movlw	6
  1898  058C  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1899  0591                     l54:
  1900  0591  0008               	return
  1901  0592                     __end_of_LCD_Init:
  1902                           
  1903                           	psect	text8
  1904  04EF                     __ptext8:	
  1905 ;; *************** function _LCD_Clear *****************
  1906 ;; Defined at:
  1907 ;;		line 147 in file "LCD.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          2       0       0       0       0
  1924 ;;      Totals:         2       0       0       0       0
  1925 ;;Total ram usage:        2 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 1
  1928 ;; This function calls:
  1929 ;;		_LCD_Command
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935  04EF                     _LCD_Clear:	
  1936                           ;psect for function _LCD_Clear
  1937                           
  1938  04EF                     l1181:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1941                           
  1942                           
  1943                           ;LCD.c: 149:     LCD_Command(0x01);
  1944  04EF  3001               	movlw	1
  1945  04F0  120A  118A  2592  120A  118A  	fcall	_LCD_Command
  1946  04F5                     l1183:
  1947                           
  1948                           ;LCD.c: 150:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1949  04F5  3008               	movlw	8
  1950  04F6  00F4               	movwf	??_LCD_Clear+1
  1951  04F7  30C9               	movlw	201
  1952  04F8  00F3               	movwf	??_LCD_Clear
  1953  04F9                     u747:
  1954  04F9  0BF3               	decfsz	??_LCD_Clear,f
  1955  04FA  2CF9               	goto	u747
  1956  04FB  0BF4               	decfsz	??_LCD_Clear+1,f
  1957  04FC  2CF9               	goto	u747
  1958  04FD  2CFE               	nop2
  1959  04FE                     l74:
  1960  04FE  0008               	return
  1961  04FF                     __end_of_LCD_Clear:
  1962                           
  1963                           	psect	text9
  1964  0592                     __ptext9:	
  1965 ;; *************** function _LCD_Command *****************
  1966 ;; Defined at:
  1967 ;;		line 62 in file "LCD.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  cmd             1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  cmd             1    2[COMMON] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         0       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0
  1983 ;;      Temps:          2       0       0       0       0
  1984 ;;      Totals:         3       0       0       0       0
  1985 ;;Total ram usage:        3 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;;		_LCD_Init
  1992 ;;		_LCD_String_xy
  1993 ;;		_LCD_Clear
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997  0592                     _LCD_Command:	
  1998                           ;psect for function _LCD_Command
  1999                           
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2003                           ;LCD_Command@cmd stored from wreg
  2004  0592  00F2               	movwf	LCD_Command@cmd
  2005  0593                     l1005:
  2006                           
  2007                           ;LCD.c: 62: void LCD_Command(unsigned char cmd );LCD.c: 63: {;LCD.c: 64:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
  2008  0593  30F0               	movlw	240
  2009  0594  0572               	andwf	LCD_Command@cmd,w
  2010  0595  00F0               	movwf	??_LCD_Command
  2011  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0598  0808               	movf	8,w	;volatile
  2014  0599  390F               	andlw	15
  2015  059A  0470               	iorwf	??_LCD_Command,w
  2016  059B  0088               	movwf	8	;volatile
  2017  059C                     l1007:
  2018                           
  2019                           ;LCD.c: 65:  PORTDbits.RD0 = 0;
  2020  059C  1008               	bcf	8,0	;volatile
  2021  059D                     l1009:
  2022                           
  2023                           ;LCD.c: 66:  PORTDbits.RD1 = 1;
  2024  059D  1488               	bsf	8,1	;volatile
  2025  059E                     l1011:
  2026                           
  2027                           ;LCD.c: 67:  __nop();
  2028  059E  0000               	nop
  2029  059F                     l1013:
  2030                           
  2031                           ;LCD.c: 68:  PORTDbits.RD1 = 0;
  2032  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2033  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2034  05A1  1088               	bcf	8,1	;volatile
  2035  05A2                     l1015:
  2036                           
  2037                           ;LCD.c: 69:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2038  05A2  3003               	movlw	3
  2039  05A3  00F1               	movwf	??_LCD_Command+1
  2040  05A4  3097               	movlw	151
  2041  05A5  00F0               	movwf	??_LCD_Command
  2042  05A6                     u757:
  2043  05A6  0BF0               	decfsz	??_LCD_Command,f
  2044  05A7  2DA6               	goto	u757
  2045  05A8  0BF1               	decfsz	??_LCD_Command+1,f
  2046  05A9  2DA6               	goto	u757
  2047  05AA  2DAB               	nop2
  2048  05AB                     l1017:
  2049                           
  2050                           ;LCD.c: 70:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  2051  05AB  0872               	movf	LCD_Command@cmd,w
  2052  05AC  00F0               	movwf	??_LCD_Command
  2053  05AD  3004               	movlw	4
  2054  05AE                     u345:
  2055  05AE  1003               	clrc
  2056  05AF  0DF0               	rlf	??_LCD_Command,f
  2057  05B0  3EFF               	addlw	-1
  2058  05B1  1D03               	skipz
  2059  05B2  2DAE               	goto	u345
  2060  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2061  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2062  05B5  0808               	movf	8,w	;volatile
  2063  05B6  390F               	andlw	15
  2064  05B7  0470               	iorwf	??_LCD_Command,w
  2065  05B8  0088               	movwf	8	;volatile
  2066  05B9                     l1019:
  2067                           
  2068                           ;LCD.c: 71:  PORTDbits.RD1 = 1;
  2069  05B9  1488               	bsf	8,1	;volatile
  2070  05BA                     l1021:
  2071                           
  2072                           ;LCD.c: 72:  __nop();
  2073  05BA  0000               	nop
  2074  05BB                     l1023:
  2075                           
  2076                           ;LCD.c: 73:  PORTDbits.RD1 = 0;
  2077  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2078  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2079  05BD  1088               	bcf	8,1	;volatile
  2080                           
  2081                           ;LCD.c: 74:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2082  05BE  3008               	movlw	8
  2083  05BF  00F1               	movwf	??_LCD_Command+1
  2084  05C0  30C9               	movlw	201
  2085  05C1  00F0               	movwf	??_LCD_Command
  2086  05C2                     u767:
  2087  05C2  0BF0               	decfsz	??_LCD_Command,f
  2088  05C3  2DC2               	goto	u767
  2089  05C4  0BF1               	decfsz	??_LCD_Command+1,f
  2090  05C5  2DC2               	goto	u767
  2091  05C6  2DC7               	nop2
  2092  05C7                     l57:
  2093  05C7  0008               	return
  2094  05C8                     __end_of_LCD_Command:
  2095  007E                     btemp	set	126	;btemp
  2096  007E                     wtemp0	set	126
  2097                           
  2098                           	psect	config
  2099                           
  2100                           ;Config register CONFIG1 @ 0x2007
  2101                           ;	Oscillator Selection bits
  2102                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2103                           ;	Watchdog Timer Enable bit
  2104                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2105                           ;	Power-up Timer Enable bit
  2106                           ;	PWRTE = OFF, PWRT disabled
  2107                           ;	RE3/MCLR pin function select bit
  2108                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2109                           ;	Code Protection bit
  2110                           ;	CP = OFF, Program memory code protection is disabled
  2111                           ;	Data Code Protection bit
  2112                           ;	CPD = OFF, Data memory code protection is disabled
  2113                           ;	Brown Out Reset Selection bits
  2114                           ;	BOREN = OFF, BOR disabled
  2115                           ;	Internal External Switchover bit
  2116                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2117                           ;	Fail-Safe Clock Monitor Enabled bit
  2118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2119                           ;	Low Voltage Programming Enable bit
  2120                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2121                           ;	In-Circuit Debugger Mode bit
  2122                           ;	DEBUG = 0x1, unprogrammed default
  2123  2007                     	org	8199
  2124  2007  20D5               	dw	8405
  2125                           
  2126                           ;Config register CONFIG2 @ 0x2008
  2127                           ;	Brown-out Reset Selection bit
  2128                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2129                           ;	Flash Program Memory Self Write Enable bits
  2130                           ;	WRT = OFF, Write protection off
  2131  2008                     	org	8200
  2132  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    5
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1862
                                             10 COMMON     4     4      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                      _keypad_getkey
                        _keypad_init
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     3      3     319
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     3      2     757
                                              5 COMMON     5     3      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _keypad_getkey
   _keypad_init
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 28 21:12:55 2022

                      pc 0002             ?_LCD_Command 0070                       l60 05FD  
                     l54 0591                       l71 0567                       l57 05C7  
                     l74 04FE                       l66 0540                       l85 04EE  
                     fsr 0004              ?_LCD_String 0070                      l144 07E7  
                    l681 0633                      l686 0643                      l991 05D4  
                    l993 05D5                      l985 05C9                      l995 05D8  
                    l987 05D2                      l997 05E1                      l989 05D3  
                    l999 05EF                      u400 0724                      u401 0723  
                    u410 072D                      u411 072C                      u500 078B  
                    u420 0736                      u501 078A                      u421 0735  
                    u350 0540                      u510 0794                      u430 073C  
                    u335 05E4                      u351 053F                      u511 0793  
                    u431 073B                      u360 0548                      u520 079D  
                    u440 074E                      u600 0618                      u345 05AE  
                    u361 0547                      u521 079C                      u441 074D  
                    u601 0617                      u530 07A4                      u450 0757  
                    u370 06EF                      u610 0641                      u531 07A3  
                    u451 0756                      u611 0640                      u540 07B6  
                    u460 0760                      u380 0709                      u620 0670  
                    u541 07B5                      u461 075F                      u381 0708  
                    u621 066F                      u550 07BF                      u470 0769  
                    u390 071B                      u630 0699                      u551 07BE  
                    u471 0768                      u391 071A                      u631 0698  
                    u560 07C8                      u480 0770                      u640 06AD  
                    u561 07C7                      u481 076F                      u641 06AC  
                    u570 07D1                      u490 0782                      u571 07D0  
                    u707 07A8                      u491 0781                      u580 07E4  
                    u717 05DC                      u581 07E3                      u590 0608  
                    u727 05F8                      u591 0607                      u737 056F  
                    u585 07E0                      u657 068A                      u747 04F9  
                    u667 06D4                      u757 05A6                      u677 070D  
                    u767 05C2                      u687 0740                      u697 0774  
                    _idx 0043                      fsr0 0004                      indf 0000  
            LCD_Char@dat 0072                     l1001 05F0                     l1011 059E  
                   l1003 05F1                     l1021 05BA                     l1013 059F  
                   l1005 0593                     l1101 0744                     l1023 05BB  
                   l1015 05A2                     l1007 059C                     l1031 0534  
                   l1111 075C                     l1103 0748                     l1017 05AB  
                   l1009 059D                     l1041 057F                     l1033 0568  
                   l1025 0523                     l1121 0778                     l1113 0761  
                   l1105 074F                     l1201 0676                     l1019 05B9  
                   l1043 0585                     l1035 056B                     l1027 0524  
                   l1051 0542                     l1131 0790                     l1123 077C  
                   l1115 0765                     l1107 0753                     l1211 06AD  
                   l1203 0680                     l1045 058B                     l1037 0573  
                   l1029 0530                     l1061 055B                     l1053 0542  
                   l1141 07AC                     l1133 0795                     l1125 0783  
                   l1109 0758                     l1117 0769                     l1221 06DB  
                   l1213 06B2                     l1205 0684                     l1039 0579  
                   l1063 0561                     l1055 0548                     l1151 07C4  
                   l1143 07B0                     l1135 0799                     l1127 0787  
                   l1119 0770                     l1071 06FF                     l1047 04E3  
                   l1223 06E0                     l1215 06BE                     l1207 0691  
                   l1057 054E                     l1161 07E4                     l1153 07C9  
                   l1145 07B7                     l1129 078C                     l1137 079D  
                   l1081 0711                     l1065 06E7                     l1049 04ED  
                   l1217 06C3                     l1209 0699                     l1059 0555  
                   l1155 07CD                     l1147 07BB                     l1139 07A4  
                   l1091 0729                     l1083 0715                     l1067 06FC  
                   l1171 0618                     l1219 06CE                     l1181 04EF  
                   l1149 07C0                     l1157 07D1                     l1093 072E  
                   l1085 071C                     l1077 0701                     l1069 06FC  
                   l1165 05FF                     l1183 04F5                     l1159 07D7  
                   l1095 0732                     l1087 0720                     l1079 0709  
                   l1175 062B                     l1167 0600                     l1191 0652  
                   l1089 0725                     l1097 0736                     l1177 0641  
                   l1169 0608                     l1193 065D                     l1185 0644  
                   l1099 073C                     l1195 0663                     l1187 0648  
                   l1197 066B                     l1189 064D                     l1199 0670  
                   STR_1 002E                     STR_2 001F                     STR_3 000E  
                   _main 0644                     btemp 007E                     start 0000  
          _LCD_String_xy 0541         __end_of_LCD_Char 05FE         __end_of_LCD_Init 0592  
                  ?_main 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088             ?_keypad_init 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_strncmp 0644           ?_LCD_String_xy 0075          __initialization 07E8  
           __end_of_main 06E7                   ??_main 007A        __end_of_LCD_Clear 04FF  
    keypad_getkey@letras 0020         LCD_String_xy@msg 0076         LCD_String_xy@pos 0075  
       LCD_String_xy@row 0078                   _OSCCON 008F         __end_of_password 000E  
              ??_strncmp 0073                ?_LCD_Char 0070  __end_of__initialization 07FC  
              ?_LCD_Init 0070          ??_LCD_String_xy 0077           __pcstackCOMMON 0070  
           __pidataBANK0 04FF             ??_LCD_String 0073           _OPTION_REGbits 0081  
             __pbssBANK0 0043               ??_LCD_Char 0070               ??_LCD_Init 0073  
     __end_of_LCD_String 0541               __pmaintext 0644            _keypad_getkey 06E7  
             __stringtab 0003            LCD_String@msg 0074                  __ptext1 05FE  
                __ptext2 04E3                  __ptext3 06E7                  __ptext4 0541  
                __ptext5 0522                  __ptext6 05C8                  __ptext7 0568  
                __ptext8 04EF                  __ptext9 0592           ?_keypad_getkey 0070  
              _LCD_Clear 04EF                  main@key 007D                  _strncmp 05FE  
   end_of_initialization 07FC           LCD_Command@cmd 0072                _PORTDbits 0008  
             ?_LCD_Clear 0070            ??_LCD_Command 0070          ??_keypad_getkey 0070  
     keypad_getkey@F1296 0033      start_initialization 07E8       keypad_getkey@valor 0030  
  __end_of_LCD_String_xy 0568               init_fetch0 050F              __pdataBANK0 0033  
    __end_of_LCD_Command 05C8                ___latbits 0002            __pcstackBANK0 0020  
            ??_LCD_Clear 0073            ??_keypad_init 0070                __pstrings 0003  
  LCD_String_xy@location 0079                 ?_strncmp 0070                 _LCD_Char 05C8  
               _LCD_Init 0568                _pass_user 0044      __end_of_keypad_init 04EF  
            _LCD_Command 0592              __stringbase 0008       __end_of__stringtab 0009  
            _keypad_init 04E3               strncmp@len 0071                 _password 0009  
             _LCD_String 0522    __end_of_keypad_getkey 07E8                 init_ram0 0513  
              strncmp@s1 0075                strncmp@s2 0070                stringcode 0003  
               stringdir 0003                 stringtab 0003           keypad_getkey@i 0031  
