

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Feb 21 15:17:34 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0008                     _PORTD	set	8
   131  001E                     _ADRESH	set	30
   132  001F                     _ADCON0bits	set	31
   133  009E                     _ADRESL	set	158
   134  009F                     _ADCON1bits	set	159
   135  0088                     _TRISD	set	136
   136  0428                     _TRISA0	set	1064
   137  0188                     _ANSEL	set	392
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  07F3                     start_initialization:	
   143  07F3                     __initialization:	
   144                           
   145                           ; Clear objects allocated to BANK0
   146  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   147  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   148  07F5  01BE               	clrf	__pbssBANK0& (0+127)
   149  07F6  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   150  07F7  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   151  07F8  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   152  07F9  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   153  07FA  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   154  07FB  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   155  07FC                     end_of_initialization:	
   156                           ;End of C runtime variable initialization code
   157                           
   158  07FC                     __end_of__initialization:	
   159  07FC  0183               	clrf	3
   160  07FD  120A  118A  2E56   	ljmp	_main	;jump to C main() function
   161                           
   162                           	psect	bssBANK0
   163  003E                     __pbssBANK0:	
   164  003E                     _temp:	
   165  003E                     	ds	3
   166  0041                     _value_adc:	
   167  0041                     	ds	2
   168  0043                     _lm35:	
   169  0043                     	ds	1
   170  0044                     _counter_digito:	
   171  0044                     	ds	1
   172                           
   173                           	psect	cstackCOMMON
   174  0070                     __pcstackCOMMON:	
   175  0070                     ?_main:	
   176  0070                     ?___awdiv:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  0070                     ?___awmod:	
   180                           ; 2 bytes @ 0x0
   181                           
   182  0070                     ?___ftpack:	
   183                           ; 2 bytes @ 0x0
   184                           
   185  0070                     ?___fttol:	
   186                           ; 3 bytes @ 0x0
   187                           
   188  0070                     ___awdiv@divisor:	
   189                           ; 4 bytes @ 0x0
   190                           
   191  0070                     ___awmod@divisor:	
   192                           ; 2 bytes @ 0x0
   193                           
   194  0070                     ___ftpack@arg:	
   195                           ; 2 bytes @ 0x0
   196                           
   197  0070                     ___fttol@f1:	
   198                           ; 3 bytes @ 0x0
   199                           
   200                           
   201                           ; 3 bytes @ 0x0
   202  0070                     	ds	2
   203  0072                     ___awdiv@dividend:	
   204  0072                     ___awmod@dividend:	
   205                           ; 2 bytes @ 0x2
   206                           
   207                           
   208                           ; 2 bytes @ 0x2
   209  0072                     	ds	1
   210  0073                     ___ftpack@exp:	
   211                           
   212                           ; 1 bytes @ 0x3
   213  0073                     	ds	1
   214  0074                     ??___awdiv:	
   215  0074                     ??___awmod:	
   216                           ; 1 bytes @ 0x4
   217                           
   218  0074                     ??___fttol:	
   219                           ; 1 bytes @ 0x4
   220                           
   221  0074                     ___ftpack@sign:	
   222                           ; 1 bytes @ 0x4
   223                           
   224                           
   225                           ; 1 bytes @ 0x4
   226  0074                     	ds	1
   227  0075                     ??___ftpack:	
   228  0075                     ___awdiv@counter:	
   229                           ; 1 bytes @ 0x5
   230                           
   231  0075                     ___awmod@counter:	
   232                           ; 1 bytes @ 0x5
   233                           
   234                           
   235                           ; 1 bytes @ 0x5
   236  0075                     	ds	1
   237  0076                     ___awdiv@sign:	
   238  0076                     ___awmod@sign:	
   239                           ; 1 bytes @ 0x6
   240                           
   241                           
   242                           ; 1 bytes @ 0x6
   243  0076                     	ds	1
   244  0077                     ___awdiv@quotient:	
   245                           
   246                           ; 2 bytes @ 0x7
   247  0077                     	ds	1
   248  0078                     ?___ftmul:	
   249  0078                     ?___lwtoft:	
   250                           ; 3 bytes @ 0x8
   251                           
   252  0078                     ___fttol@sign1:	
   253                           ; 3 bytes @ 0x8
   254                           
   255  0078                     ___lwtoft@c:	
   256                           ; 1 bytes @ 0x8
   257                           
   258  0078                     ___ftmul@f1:	
   259                           ; 2 bytes @ 0x8
   260                           
   261                           
   262                           ; 3 bytes @ 0x8
   263  0078                     	ds	1
   264  0079                     ___fttol@lval:	
   265                           
   266                           ; 4 bytes @ 0x9
   267  0079                     	ds	2
   268  007B                     ??___lwtoft:	
   269  007B                     ___ftmul@f2:	
   270                           ; 1 bytes @ 0xB
   271                           
   272                           
   273                           ; 3 bytes @ 0xB
   274  007B                     	ds	2
   275  007D                     ___fttol@exp1:	
   276                           
   277                           ; 1 bytes @ 0xD
   278  007D                     	ds	1
   279                           
   280                           	psect	cstackBANK0
   281  0020                     __pcstackBANK0:	
   282  0020                     ??___ftmul:	
   283                           
   284                           ; 1 bytes @ 0x0
   285  0020                     	ds	4
   286  0024                     ___ftmul@exp:	
   287                           
   288                           ; 1 bytes @ 0x4
   289  0024                     	ds	1
   290  0025                     ___ftmul@f3_as_product:	
   291                           
   292                           ; 3 bytes @ 0x5
   293  0025                     	ds	3
   294  0028                     ___ftmul@cntr:	
   295                           
   296                           ; 1 bytes @ 0x8
   297  0028                     	ds	1
   298  0029                     ___ftmul@sign:	
   299                           
   300                           ; 1 bytes @ 0x9
   301  0029                     	ds	1
   302  002A                     ?___ftdiv:	
   303  002A                     ___ftdiv@f2:	
   304                           ; 3 bytes @ 0xA
   305                           
   306                           
   307                           ; 3 bytes @ 0xA
   308  002A                     	ds	3
   309  002D                     ___ftdiv@f1:	
   310                           
   311                           ; 3 bytes @ 0xD
   312  002D                     	ds	3
   313  0030                     ??___ftdiv:	
   314                           
   315                           ; 1 bytes @ 0x10
   316  0030                     	ds	4
   317  0034                     ___ftdiv@cntr:	
   318                           
   319                           ; 1 bytes @ 0x14
   320  0034                     	ds	1
   321  0035                     ___ftdiv@f3:	
   322                           
   323                           ; 3 bytes @ 0x15
   324  0035                     	ds	3
   325  0038                     ___ftdiv@exp:	
   326                           
   327                           ; 1 bytes @ 0x18
   328  0038                     	ds	1
   329  0039                     ___ftdiv@sign:	
   330                           
   331                           ; 1 bytes @ 0x19
   332  0039                     	ds	1
   333  003A                     ??_main:	
   334                           
   335                           ; 1 bytes @ 0x1A
   336  003A                     	ds	4
   337                           
   338                           	psect	maintext
   339  0656                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 11 in file "adc_lm35.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       4       0       0       0
   362 ;;      Totals:         0       4       0       0       0
   363 ;;Total ram usage:        4 bytes
   364 ;; Hardware stack levels required when called:    2
   365 ;; This function calls:
   366 ;;		___awdiv
   367 ;;		___awmod
   368 ;;		___ftdiv
   369 ;;		___ftmul
   370 ;;		___fttol
   371 ;;		___lwtoft
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           
   378                           ;psect for function _main
   379  0656                     _main:	
   380                           
   381                           ;adc_lm35.c: 12: TRISD = 0x00;
   382                           
   383                           ;incstack = 0
   384                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   385  0656  1683               	bsf	3,5	;RP0=1, select bank1
   386  0657  1303               	bcf	3,6	;RP1=0, select bank1
   387  0658  0188               	clrf	8	;volatile
   388                           
   389                           ;adc_lm35.c: 13: TRISA0 = 1;
   390  0659  1405               	bsf	5,0	;volatile
   391                           
   392                           ;adc_lm35.c: 14: ANSEL = 0x01;
   393  065A  3001               	movlw	1
   394  065B  1683               	bsf	3,5	;RP0=1, select bank3
   395  065C  1703               	bsf	3,6	;RP1=1, select bank3
   396  065D  0088               	movwf	8	;volatile
   397                           
   398                           ;adc_lm35.c: 16: ADCON1bits.ADFM = 1;
   399  065E  1683               	bsf	3,5	;RP0=1, select bank1
   400  065F  1303               	bcf	3,6	;RP1=0, select bank1
   401  0660  179F               	bsf	31,7	;volatile
   402                           
   403                           ;adc_lm35.c: 17: ADCON1bits.VCFG0 = 0;
   404  0661  121F               	bcf	31,4	;volatile
   405                           
   406                           ;adc_lm35.c: 18: ADCON1bits.VCFG1 = 0;
   407  0662  129F               	bcf	31,5	;volatile
   408                           
   409                           ;adc_lm35.c: 20: ADCON0bits.CHS = 0b0000;
   410  0663  30C3               	movlw	-61
   411  0664  1283               	bcf	3,5	;RP0=0, select bank0
   412  0665  1303               	bcf	3,6	;RP1=0, select bank0
   413  0666  059F               	andwf	31,f	;volatile
   414                           
   415                           ;adc_lm35.c: 21: ADCON0bits.ADCS = 0b01;
   416  0667  081F               	movf	31,w	;volatile
   417  0668  393F               	andlw	-193
   418  0669  3840               	iorlw	64
   419  066A  009F               	movwf	31	;volatile
   420                           
   421                           ;adc_lm35.c: 23: ADCON0bits.ADON = 1;
   422  066B  141F               	bsf	31,0	;volatile
   423                           
   424                           ;adc_lm35.c: 24: _delay((unsigned long)((30)*(4000000/4000000.0)));
   425  066C  3009               	movlw	9
   426  066D  1283               	bcf	3,5	;RP0=0, select bank0
   427  066E  1303               	bcf	3,6	;RP1=0, select bank0
   428  066F  00BA               	movwf	??_main
   429  0670                     u1297:	
   430  0670  0BBA               	decfsz	??_main,f
   431  0671  2E70               	goto	u1297
   432  0672                     l1059:	
   433                           ;adc_lm35.c: 26: while (1) {
   434                           
   435                           
   436                           ;adc_lm35.c: 28: ADCON0bits.GO_DONE = 1;
   437  0672  1283               	bcf	3,5	;RP0=0, select bank0
   438  0673  1303               	bcf	3,6	;RP1=0, select bank0
   439  0674  149F               	bsf	31,1	;volatile
   440  0675                     l30:	
   441                           ;adc_lm35.c: 29: while (ADCON0bits.GO_DONE);
   442                           
   443  0675  189F               	btfsc	31,1	;volatile
   444  0676  2E75               	goto	l30
   445                           
   446                           ;adc_lm35.c: 30: value_adc = ADRESH;
   447  0677  081E               	movf	30,w	;volatile
   448  0678  00BA               	movwf	??_main
   449  0679  01BB               	clrf	??_main+1
   450  067A  083A               	movf	??_main,w
   451  067B  00C1               	movwf	_value_adc
   452  067C  083B               	movf	??_main+1,w
   453  067D  00C2               	movwf	_value_adc+1
   454                           
   455                           ;adc_lm35.c: 31: value_adc = (value_adc << 8) + ADRESL;
   456  067E  0841               	movf	_value_adc,w
   457  067F  00BB               	movwf	??_main+1
   458  0680  01BA               	clrf	??_main
   459  0681  1683               	bsf	3,5	;RP0=1, select bank1
   460  0682  1303               	bcf	3,6	;RP1=0, select bank1
   461  0683  081E               	movf	30,w	;volatile
   462  0684  1283               	bcf	3,5	;RP0=0, select bank0
   463  0685  1303               	bcf	3,6	;RP1=0, select bank0
   464  0686  073A               	addwf	??_main,w
   465  0687  00BC               	movwf	??_main+2
   466  0688  3000               	movlw	0
   467  0689  1803               	skipnc
   468  068A  3001               	movlw	1
   469  068B  073B               	addwf	??_main+1,w
   470  068C  00BD               	movwf	??_main+3
   471  068D  083C               	movf	??_main+2,w
   472  068E  00C1               	movwf	_value_adc
   473  068F  083D               	movf	??_main+3,w
   474  0690  00C2               	movwf	_value_adc+1
   475                           
   476                           ;adc_lm35.c: 32: temp = value_adc;
   477  0691  0842               	movf	_value_adc+1,w
   478  0692  00F9               	movwf	___lwtoft@c+1
   479  0693  0841               	movf	_value_adc,w
   480  0694  00F8               	movwf	___lwtoft@c
   481  0695  120A  118A  23EE  120A  118A  	fcall	___lwtoft
   482  069A  0878               	movf	?___lwtoft,w
   483  069B  1283               	bcf	3,5	;RP0=0, select bank0
   484  069C  1303               	bcf	3,6	;RP1=0, select bank0
   485  069D  00BE               	movwf	_temp
   486  069E  0879               	movf	?___lwtoft+1,w
   487  069F  00BF               	movwf	_temp+1
   488  06A0  087A               	movf	?___lwtoft+2,w
   489  06A1  00C0               	movwf	_temp+2
   490                           
   491                           ;adc_lm35.c: 33: temp = (temp * 500.0) / 1023.0;
   492  06A2  30C0               	movlw	192
   493  06A3  00AA               	movwf	___ftdiv@f2
   494  06A4  307F               	movlw	127
   495  06A5  00AB               	movwf	___ftdiv@f2+1
   496  06A6  3044               	movlw	68
   497  06A7  00AC               	movwf	___ftdiv@f2+2
   498  06A8  3000               	movlw	0
   499  06A9  00F8               	movwf	___ftmul@f1
   500  06AA  30FA               	movlw	250
   501  06AB  00F9               	movwf	___ftmul@f1+1
   502  06AC  3043               	movlw	67
   503  06AD  00FA               	movwf	___ftmul@f1+2
   504  06AE  083E               	movf	_temp,w
   505  06AF  00FB               	movwf	___ftmul@f2
   506  06B0  083F               	movf	_temp+1,w
   507  06B1  00FC               	movwf	___ftmul@f2+1
   508  06B2  0840               	movf	_temp+2,w
   509  06B3  00FD               	movwf	___ftmul@f2+2
   510  06B4  120A  118A  2722  120A  118A  	fcall	___ftmul
   511  06B9  0878               	movf	?___ftmul,w
   512  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   513  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   514  06BC  00AD               	movwf	___ftdiv@f1
   515  06BD  0879               	movf	?___ftmul+1,w
   516  06BE  00AE               	movwf	___ftdiv@f1+1
   517  06BF  087A               	movf	?___ftmul+2,w
   518  06C0  00AF               	movwf	___ftdiv@f1+2
   519  06C1  120A  118A  259E  120A  118A  	fcall	___ftdiv
   520  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   521  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   522  06C8  082A               	movf	?___ftdiv,w
   523  06C9  00BE               	movwf	_temp
   524  06CA  082B               	movf	?___ftdiv+1,w
   525  06CB  00BF               	movwf	_temp+1
   526  06CC  082C               	movf	?___ftdiv+2,w
   527  06CD  00C0               	movwf	_temp+2
   528                           
   529                           ;adc_lm35.c: 34: lm35 = (char) temp;
   530  06CE  083E               	movf	_temp,w
   531  06CF  00F0               	movwf	___fttol@f1
   532  06D0  083F               	movf	_temp+1,w
   533  06D1  00F1               	movwf	___fttol@f1+1
   534  06D2  0840               	movf	_temp+2,w
   535  06D3  00F2               	movwf	___fttol@f1+2
   536  06D4  120A  118A  2512  120A  118A  	fcall	___fttol
   537  06D9  0870               	movf	?___fttol,w
   538  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   539  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   540  06DC  00BA               	movwf	??_main
   541  06DD  083A               	movf	??_main,w
   542  06DE  00C3               	movwf	_lm35
   543                           
   544                           ;adc_lm35.c: 35: PORTD = (1 << 4) + (lm35 % 10);
   545  06DF  300A               	movlw	10
   546  06E0  00F0               	movwf	___awmod@divisor
   547  06E1  3000               	movlw	0
   548  06E2  00F1               	movwf	___awmod@divisor+1
   549  06E3  0843               	movf	_lm35,w
   550  06E4  00BA               	movwf	??_main
   551  06E5  01BB               	clrf	??_main+1
   552  06E6  083A               	movf	??_main,w
   553  06E7  00F2               	movwf	___awmod@dividend
   554  06E8  083B               	movf	??_main+1,w
   555  06E9  00F3               	movwf	___awmod@dividend+1
   556  06EA  120A  118A  2402  120A  118A  	fcall	___awmod
   557  06EF  0870               	movf	?___awmod,w
   558  06F0  3E10               	addlw	16
   559  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   560  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   561  06F3  0088               	movwf	8	;volatile
   562                           
   563                           ;adc_lm35.c: 36: _delay((unsigned long)((50)*(4000000/4000.0)));
   564  06F4  3041               	movlw	65
   565  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   566  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   567  06F7  00BB               	movwf	??_main+1
   568  06F8  30ED               	movlw	237
   569  06F9  00BA               	movwf	??_main
   570  06FA                     u1307:	
   571  06FA  0BBA               	decfsz	??_main,f
   572  06FB  2EFA               	goto	u1307
   573  06FC  0BBB               	decfsz	??_main+1,f
   574  06FD  2EFA               	goto	u1307
   575  06FE  2EFF               	nop2
   576                           
   577                           ;adc_lm35.c: 37: PORTD = (1 << 5) + (lm35 / 10);
   578  06FF  300A               	movlw	10
   579  0700  00F0               	movwf	___awdiv@divisor
   580  0701  3000               	movlw	0
   581  0702  00F1               	movwf	___awdiv@divisor+1
   582  0703  1283               	bcf	3,5	;RP0=0, select bank0
   583  0704  1303               	bcf	3,6	;RP1=0, select bank0
   584  0705  0843               	movf	_lm35,w
   585  0706  00BA               	movwf	??_main
   586  0707  01BB               	clrf	??_main+1
   587  0708  083A               	movf	??_main,w
   588  0709  00F2               	movwf	___awdiv@dividend
   589  070A  083B               	movf	??_main+1,w
   590  070B  00F3               	movwf	___awdiv@dividend+1
   591  070C  120A  118A  244D  120A  118A  	fcall	___awdiv
   592  0711  0870               	movf	?___awdiv,w
   593  0712  3E20               	addlw	32
   594  0713  1283               	bcf	3,5	;RP0=0, select bank0
   595  0714  1303               	bcf	3,6	;RP1=0, select bank0
   596  0715  0088               	movwf	8	;volatile
   597                           
   598                           ;adc_lm35.c: 38: _delay((unsigned long)((50)*(4000000/4000.0)));
   599  0716  3041               	movlw	65
   600  0717  1283               	bcf	3,5	;RP0=0, select bank0
   601  0718  1303               	bcf	3,6	;RP1=0, select bank0
   602  0719  00BB               	movwf	??_main+1
   603  071A  30ED               	movlw	237
   604  071B  00BA               	movwf	??_main
   605  071C                     u1317:	
   606  071C  0BBA               	decfsz	??_main,f
   607  071D  2F1C               	goto	u1317
   608  071E  0BBB               	decfsz	??_main+1,f
   609  071F  2F1C               	goto	u1317
   610  0720  2F21               	nop2
   611  0721  2E72               	goto	l1059
   612  0722                     __end_of_main:	
   613                           
   614                           	psect	text1
   615  03EE                     __ptext1:	
   616 ;; *************** function ___lwtoft *****************
   617 ;; Defined at:
   618 ;;		line 28 in file "D:\mplab\sources\common\lwtoft.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  c               2    8[COMMON] unsigned int 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  3    8[COMMON] float 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, pclath, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         3       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          1       0       0       0       0
   635 ;;      Totals:         4       0       0       0       0
   636 ;;Total ram usage:        4 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    1
   639 ;; This function calls:
   640 ;;		___ftpack
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function ___lwtoft
   648  03EE                     ___lwtoft:	
   649                           
   650                           ;incstack = 0
   651                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   652  03EE  0878               	movf	___lwtoft@c,w
   653  03EF  00F0               	movwf	___ftpack@arg
   654  03F0  0879               	movf	___lwtoft@c+1,w
   655  03F1  00F1               	movwf	___ftpack@arg+1
   656  03F2  01F2               	clrf	___ftpack@arg+2
   657  03F3  308E               	movlw	142
   658  03F4  00FB               	movwf	??___lwtoft
   659  03F5  087B               	movf	??___lwtoft,w
   660  03F6  00F3               	movwf	___ftpack@exp
   661  03F7  01F4               	clrf	___ftpack@sign
   662  03F8  120A  118A  24A6   	fcall	___ftpack
   663  03FB  0870               	movf	?___ftpack,w
   664  03FC  00F8               	movwf	?___lwtoft
   665  03FD  0871               	movf	?___ftpack+1,w
   666  03FE  00F9               	movwf	?___lwtoft+1
   667  03FF  0872               	movf	?___ftpack+2,w
   668  0400  00FA               	movwf	?___lwtoft+2
   669  0401  0008               	return
   670  0402                     __end_of___lwtoft:	
   671                           
   672                           	psect	text2
   673  0512                     __ptext2:	
   674 ;; *************** function ___fttol *****************
   675 ;; Defined at:
   676 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  f1              3    0[COMMON] float 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  lval            4    9[COMMON] unsigned long 
   681 ;;  exp1            1   13[COMMON] unsigned char 
   682 ;;  sign1           1    8[COMMON] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  4    0[COMMON] long 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         4       0       0       0       0
   693 ;;      Locals:         6       0       0       0       0
   694 ;;      Temps:          4       0       0       0       0
   695 ;;      Totals:        14       0       0       0       0
   696 ;;Total ram usage:       14 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function ___fttol
   707  0512                     ___fttol:	
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   711  0512  0870               	movf	___fttol@f1,w
   712  0513  00F4               	movwf	??___fttol
   713  0514  0871               	movf	___fttol@f1+1,w
   714  0515  00F5               	movwf	??___fttol+1
   715  0516  0872               	movf	___fttol@f1+2,w
   716  0517  00F6               	movwf	??___fttol+2
   717  0518  1003               	clrc
   718  0519  0D75               	rlf	??___fttol+1,w
   719  051A  0D76               	rlf	??___fttol+2,w
   720  051B  00F7               	movwf	??___fttol+3
   721  051C  0877               	movf	??___fttol+3,w
   722  051D  00FD               	movwf	___fttol@exp1
   723  051E  087D               	movf	___fttol@exp1,w
   724  051F  1D03               	btfss	3,2
   725  0520  2D2A               	goto	l999
   726  0521  3000               	movlw	0
   727  0522  00F3               	movwf	?___fttol+3
   728  0523  3000               	movlw	0
   729  0524  00F2               	movwf	?___fttol+2
   730  0525  3000               	movlw	0
   731  0526  00F1               	movwf	?___fttol+1
   732  0527  3000               	movlw	0
   733  0528  00F0               	movwf	?___fttol
   734  0529  0008               	return
   735  052A                     l999:	
   736  052A  0870               	movf	___fttol@f1,w
   737  052B  00F4               	movwf	??___fttol
   738  052C  0871               	movf	___fttol@f1+1,w
   739  052D  00F5               	movwf	??___fttol+1
   740  052E  0872               	movf	___fttol@f1+2,w
   741  052F  00F6               	movwf	??___fttol+2
   742  0530  3017               	movlw	23
   743  0531                     u1195:	
   744  0531  1003               	clrc
   745  0532  0CF6               	rrf	??___fttol+2,f
   746  0533  0CF5               	rrf	??___fttol+1,f
   747  0534  0CF4               	rrf	??___fttol,f
   748  0535  3EFF               	addlw	-1
   749  0536  1D03               	skipz
   750  0537  2D31               	goto	u1195
   751  0538  0874               	movf	??___fttol,w
   752  0539  00F7               	movwf	??___fttol+3
   753  053A  0877               	movf	??___fttol+3,w
   754  053B  00F8               	movwf	___fttol@sign1
   755  053C  17F1               	bsf	___fttol@f1+1,7
   756  053D  30FF               	movlw	255
   757  053E  05F0               	andwf	___fttol@f1,f
   758  053F  30FF               	movlw	255
   759  0540  05F1               	andwf	___fttol@f1+1,f
   760  0541  3000               	movlw	0
   761  0542  05F2               	andwf	___fttol@f1+2,f
   762  0543  0870               	movf	___fttol@f1,w
   763  0544  00F9               	movwf	___fttol@lval
   764  0545  0871               	movf	___fttol@f1+1,w
   765  0546  00FA               	movwf	___fttol@lval+1
   766  0547  0872               	movf	___fttol@f1+2,w
   767  0548  00FB               	movwf	___fttol@lval+2
   768  0549  01FC               	clrf	___fttol@lval+3
   769  054A  308E               	movlw	142
   770  054B  02FD               	subwf	___fttol@exp1,f
   771  054C  1FFD               	btfss	___fttol@exp1,7
   772  054D  2D6C               	goto	l1019
   773  054E  087D               	movf	___fttol@exp1,w
   774  054F  3A80               	xorlw	128
   775  0550  3E8F               	addlw	143
   776  0551  1803               	skipnc
   777  0552  2D5C               	goto	l1017
   778  0553  3000               	movlw	0
   779  0554  00F3               	movwf	?___fttol+3
   780  0555  3000               	movlw	0
   781  0556  00F2               	movwf	?___fttol+2
   782  0557  3000               	movlw	0
   783  0558  00F1               	movwf	?___fttol+1
   784  0559  3000               	movlw	0
   785  055A  00F0               	movwf	?___fttol
   786  055B  0008               	return
   787  055C                     l1017:	
   788  055C  3001               	movlw	1
   789  055D                     u1225:	
   790  055D  1003               	clrc
   791  055E  0CFC               	rrf	___fttol@lval+3,f
   792  055F  0CFB               	rrf	___fttol@lval+2,f
   793  0560  0CFA               	rrf	___fttol@lval+1,f
   794  0561  0CF9               	rrf	___fttol@lval,f
   795  0562  3EFF               	addlw	-1
   796  0563  1D03               	skipz
   797  0564  2D5D               	goto	u1225
   798  0565  3001               	movlw	1
   799  0566  00F4               	movwf	??___fttol
   800  0567  0874               	movf	??___fttol,w
   801  0568  07FD               	addwf	___fttol@exp1,f
   802  0569  1903               	btfsc	3,2
   803  056A  2D87               	goto	l1027
   804  056B  2D5C               	goto	l1017
   805  056C                     l1019:	
   806  056C  3018               	movlw	24
   807  056D  027D               	subwf	___fttol@exp1,w
   808  056E  1C03               	skipc
   809  056F  2D84               	goto	l371
   810  0570  3000               	movlw	0
   811  0571  00F3               	movwf	?___fttol+3
   812  0572  3000               	movlw	0
   813  0573  00F2               	movwf	?___fttol+2
   814  0574  3000               	movlw	0
   815  0575  00F1               	movwf	?___fttol+1
   816  0576  3000               	movlw	0
   817  0577  00F0               	movwf	?___fttol
   818  0578  0008               	return
   819  0579                     l1025:	
   820  0579  3001               	movlw	1
   821  057A  00F4               	movwf	??___fttol
   822  057B                     u1255:	
   823  057B  1003               	clrc
   824  057C  0DF9               	rlf	___fttol@lval,f
   825  057D  0DFA               	rlf	___fttol@lval+1,f
   826  057E  0DFB               	rlf	___fttol@lval+2,f
   827  057F  0DFC               	rlf	___fttol@lval+3,f
   828  0580  0BF4               	decfsz	??___fttol,f
   829  0581  2D7B               	goto	u1255
   830  0582  3001               	movlw	1
   831  0583  02FD               	subwf	___fttol@exp1,f
   832  0584                     l371:	
   833  0584  087D               	movf	___fttol@exp1,w
   834  0585  1D03               	btfss	3,2
   835  0586  2D79               	goto	l1025
   836  0587                     l1027:	
   837  0587  0878               	movf	___fttol@sign1,w
   838  0588  1903               	btfsc	3,2
   839  0589  2D95               	goto	l1031
   840  058A  09F9               	comf	___fttol@lval,f
   841  058B  09FA               	comf	___fttol@lval+1,f
   842  058C  09FB               	comf	___fttol@lval+2,f
   843  058D  09FC               	comf	___fttol@lval+3,f
   844  058E  0AF9               	incf	___fttol@lval,f
   845  058F  1903               	skipnz
   846  0590  0AFA               	incf	___fttol@lval+1,f
   847  0591  1903               	skipnz
   848  0592  0AFB               	incf	___fttol@lval+2,f
   849  0593  1903               	skipnz
   850  0594  0AFC               	incf	___fttol@lval+3,f
   851  0595                     l1031:	
   852  0595  087C               	movf	___fttol@lval+3,w
   853  0596  00F3               	movwf	?___fttol+3
   854  0597  087B               	movf	___fttol@lval+2,w
   855  0598  00F2               	movwf	?___fttol+2
   856  0599  087A               	movf	___fttol@lval+1,w
   857  059A  00F1               	movwf	?___fttol+1
   858  059B  0879               	movf	___fttol@lval,w
   859  059C  00F0               	movwf	?___fttol
   860  059D  0008               	return
   861  059E                     __end_of___fttol:	
   862                           
   863                           	psect	text3
   864  0722                     __ptext3:	
   865 ;; *************** function ___ftmul *****************
   866 ;; Defined at:
   867 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  f1              3    8[COMMON] float 
   870 ;;  f2              3   11[COMMON] float 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
   873 ;;  sign            1    9[BANK0 ] unsigned char 
   874 ;;  cntr            1    8[BANK0 ] unsigned char 
   875 ;;  exp             1    4[BANK0 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  3    8[COMMON] float 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, pclath, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         6       0       0       0       0
   886 ;;      Locals:         0       6       0       0       0
   887 ;;      Temps:          0       4       0       0       0
   888 ;;      Totals:         6      10       0       0       0
   889 ;;Total ram usage:       16 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    1
   892 ;; This function calls:
   893 ;;		___ftpack
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function ___ftmul
   901  0722                     ___ftmul:	
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   905  0722  0878               	movf	___ftmul@f1,w
   906  0723  1283               	bcf	3,5	;RP0=0, select bank0
   907  0724  1303               	bcf	3,6	;RP1=0, select bank0
   908  0725  00A0               	movwf	??___ftmul
   909  0726  0879               	movf	___ftmul@f1+1,w
   910  0727  00A1               	movwf	??___ftmul+1
   911  0728  087A               	movf	___ftmul@f1+2,w
   912  0729  00A2               	movwf	??___ftmul+2
   913  072A  1003               	clrc
   914  072B  0D21               	rlf	??___ftmul+1,w
   915  072C  0D22               	rlf	??___ftmul+2,w
   916  072D  00A3               	movwf	??___ftmul+3
   917  072E  0823               	movf	??___ftmul+3,w
   918  072F  00A4               	movwf	___ftmul@exp
   919  0730  0824               	movf	___ftmul@exp,w
   920  0731  1D03               	btfss	3,2
   921  0732  2F3A               	goto	l949
   922  0733  3000               	movlw	0
   923  0734  00F8               	movwf	?___ftmul
   924  0735  3000               	movlw	0
   925  0736  00F9               	movwf	?___ftmul+1
   926  0737  3000               	movlw	0
   927  0738  00FA               	movwf	?___ftmul+2
   928  0739  0008               	return
   929  073A                     l949:	
   930  073A  087B               	movf	___ftmul@f2,w
   931  073B  00A0               	movwf	??___ftmul
   932  073C  087C               	movf	___ftmul@f2+1,w
   933  073D  00A1               	movwf	??___ftmul+1
   934  073E  087D               	movf	___ftmul@f2+2,w
   935  073F  00A2               	movwf	??___ftmul+2
   936  0740  1003               	clrc
   937  0741  0D21               	rlf	??___ftmul+1,w
   938  0742  0D22               	rlf	??___ftmul+2,w
   939  0743  00A3               	movwf	??___ftmul+3
   940  0744  0823               	movf	??___ftmul+3,w
   941  0745  00A9               	movwf	___ftmul@sign
   942  0746  0829               	movf	___ftmul@sign,w
   943  0747  1D03               	btfss	3,2
   944  0748  2F50               	goto	l955
   945  0749  3000               	movlw	0
   946  074A  00F8               	movwf	?___ftmul
   947  074B  3000               	movlw	0
   948  074C  00F9               	movwf	?___ftmul+1
   949  074D  3000               	movlw	0
   950  074E  00FA               	movwf	?___ftmul+2
   951  074F  0008               	return
   952  0750                     l955:	
   953  0750  0829               	movf	___ftmul@sign,w
   954  0751  3E7B               	addlw	123
   955  0752  00A0               	movwf	??___ftmul
   956  0753  0820               	movf	??___ftmul,w
   957  0754  07A4               	addwf	___ftmul@exp,f
   958  0755  0878               	movf	___ftmul@f1,w
   959  0756  00A0               	movwf	??___ftmul
   960  0757  0879               	movf	___ftmul@f1+1,w
   961  0758  00A1               	movwf	??___ftmul+1
   962  0759  087A               	movf	___ftmul@f1+2,w
   963  075A  00A2               	movwf	??___ftmul+2
   964  075B  3010               	movlw	16
   965  075C                     u1065:	
   966  075C  1003               	clrc
   967  075D  0CA2               	rrf	??___ftmul+2,f
   968  075E  0CA1               	rrf	??___ftmul+1,f
   969  075F  0CA0               	rrf	??___ftmul,f
   970  0760  3EFF               	addlw	-1
   971  0761  1D03               	skipz
   972  0762  2F5C               	goto	u1065
   973  0763  0820               	movf	??___ftmul,w
   974  0764  00A3               	movwf	??___ftmul+3
   975  0765  0823               	movf	??___ftmul+3,w
   976  0766  00A9               	movwf	___ftmul@sign
   977  0767  087B               	movf	___ftmul@f2,w
   978  0768  00A0               	movwf	??___ftmul
   979  0769  087C               	movf	___ftmul@f2+1,w
   980  076A  00A1               	movwf	??___ftmul+1
   981  076B  087D               	movf	___ftmul@f2+2,w
   982  076C  00A2               	movwf	??___ftmul+2
   983  076D  3010               	movlw	16
   984  076E                     u1075:	
   985  076E  1003               	clrc
   986  076F  0CA2               	rrf	??___ftmul+2,f
   987  0770  0CA1               	rrf	??___ftmul+1,f
   988  0771  0CA0               	rrf	??___ftmul,f
   989  0772  3EFF               	addlw	-1
   990  0773  1D03               	skipz
   991  0774  2F6E               	goto	u1075
   992  0775  0820               	movf	??___ftmul,w
   993  0776  00A3               	movwf	??___ftmul+3
   994  0777  0823               	movf	??___ftmul+3,w
   995  0778  06A9               	xorwf	___ftmul@sign,f
   996  0779  3080               	movlw	128
   997  077A  00A0               	movwf	??___ftmul
   998  077B  0820               	movf	??___ftmul,w
   999  077C  05A9               	andwf	___ftmul@sign,f
  1000  077D  17F9               	bsf	___ftmul@f1+1,7
  1001  077E  17FC               	bsf	___ftmul@f2+1,7
  1002  077F  30FF               	movlw	255
  1003  0780  05FB               	andwf	___ftmul@f2,f
  1004  0781  30FF               	movlw	255
  1005  0782  05FC               	andwf	___ftmul@f2+1,f
  1006  0783  3000               	movlw	0
  1007  0784  05FD               	andwf	___ftmul@f2+2,f
  1008  0785  3000               	movlw	0
  1009  0786  00A5               	movwf	___ftmul@f3_as_product
  1010  0787  3000               	movlw	0
  1011  0788  00A6               	movwf	___ftmul@f3_as_product+1
  1012  0789  3000               	movlw	0
  1013  078A  00A7               	movwf	___ftmul@f3_as_product+2
  1014  078B  3007               	movlw	7
  1015  078C  00A0               	movwf	??___ftmul
  1016  078D  0820               	movf	??___ftmul,w
  1017  078E  00A8               	movwf	___ftmul@cntr
  1018  078F                     l967:	
  1019  078F  1C78               	btfss	___ftmul@f1,0
  1020  0790  2F9F               	goto	l971
  1021  0791  087B               	movf	___ftmul@f2,w
  1022  0792  07A5               	addwf	___ftmul@f3_as_product,f
  1023  0793  087C               	movf	___ftmul@f2+1,w
  1024  0794  1103               	clrz
  1025  0795  1803               	skipnc
  1026  0796  0A7C               	incf	___ftmul@f2+1,w
  1027  0797  1D03               	btfss	3,2
  1028  0798  07A6               	addwf	___ftmul@f3_as_product+1,f
  1029  0799  087D               	movf	___ftmul@f2+2,w
  1030  079A  1103               	clrz
  1031  079B  1803               	skipnc
  1032  079C  0A7D               	incf	___ftmul@f2+2,w
  1033  079D  1D03               	btfss	3,2
  1034  079E  07A7               	addwf	___ftmul@f3_as_product+2,f
  1035  079F                     l971:	
  1036  079F  3001               	movlw	1
  1037  07A0                     u1105:	
  1038  07A0  1003               	clrc
  1039  07A1  0CFA               	rrf	___ftmul@f1+2,f
  1040  07A2  0CF9               	rrf	___ftmul@f1+1,f
  1041  07A3  0CF8               	rrf	___ftmul@f1,f
  1042  07A4  3EFF               	addlw	-1
  1043  07A5  1D03               	skipz
  1044  07A6  2FA0               	goto	u1105
  1045  07A7  3001               	movlw	1
  1046  07A8                     u1115:	
  1047  07A8  1003               	clrc
  1048  07A9  0DFB               	rlf	___ftmul@f2,f
  1049  07AA  0DFC               	rlf	___ftmul@f2+1,f
  1050  07AB  0DFD               	rlf	___ftmul@f2+2,f
  1051  07AC  3EFF               	addlw	-1
  1052  07AD  1D03               	skipz
  1053  07AE  2FA8               	goto	u1115
  1054  07AF  3001               	movlw	1
  1055  07B0  02A8               	subwf	___ftmul@cntr,f
  1056  07B1  1D03               	btfss	3,2
  1057  07B2  2F8F               	goto	l967
  1058  07B3  3009               	movlw	9
  1059  07B4  00A0               	movwf	??___ftmul
  1060  07B5  0820               	movf	??___ftmul,w
  1061  07B6  00A8               	movwf	___ftmul@cntr
  1062  07B7                     l979:	
  1063  07B7  1C78               	btfss	___ftmul@f1,0
  1064  07B8  2FC7               	goto	l983
  1065  07B9  087B               	movf	___ftmul@f2,w
  1066  07BA  07A5               	addwf	___ftmul@f3_as_product,f
  1067  07BB  087C               	movf	___ftmul@f2+1,w
  1068  07BC  1103               	clrz
  1069  07BD  1803               	skipnc
  1070  07BE  0A7C               	incf	___ftmul@f2+1,w
  1071  07BF  1D03               	btfss	3,2
  1072  07C0  07A6               	addwf	___ftmul@f3_as_product+1,f
  1073  07C1  087D               	movf	___ftmul@f2+2,w
  1074  07C2  1103               	clrz
  1075  07C3  1803               	skipnc
  1076  07C4  0A7D               	incf	___ftmul@f2+2,w
  1077  07C5  1D03               	btfss	3,2
  1078  07C6  07A7               	addwf	___ftmul@f3_as_product+2,f
  1079  07C7                     l983:	
  1080  07C7  3001               	movlw	1
  1081  07C8                     u1155:	
  1082  07C8  1003               	clrc
  1083  07C9  0CFA               	rrf	___ftmul@f1+2,f
  1084  07CA  0CF9               	rrf	___ftmul@f1+1,f
  1085  07CB  0CF8               	rrf	___ftmul@f1,f
  1086  07CC  3EFF               	addlw	-1
  1087  07CD  1D03               	skipz
  1088  07CE  2FC8               	goto	u1155
  1089  07CF  3001               	movlw	1
  1090  07D0                     u1165:	
  1091  07D0  1003               	clrc
  1092  07D1  0CA7               	rrf	___ftmul@f3_as_product+2,f
  1093  07D2  0CA6               	rrf	___ftmul@f3_as_product+1,f
  1094  07D3  0CA5               	rrf	___ftmul@f3_as_product,f
  1095  07D4  3EFF               	addlw	-1
  1096  07D5  1D03               	skipz
  1097  07D6  2FD0               	goto	u1165
  1098  07D7  3001               	movlw	1
  1099  07D8  02A8               	subwf	___ftmul@cntr,f
  1100  07D9  1D03               	btfss	3,2
  1101  07DA  2FB7               	goto	l979
  1102  07DB  0825               	movf	___ftmul@f3_as_product,w
  1103  07DC  00F0               	movwf	___ftpack@arg
  1104  07DD  0826               	movf	___ftmul@f3_as_product+1,w
  1105  07DE  00F1               	movwf	___ftpack@arg+1
  1106  07DF  0827               	movf	___ftmul@f3_as_product+2,w
  1107  07E0  00F2               	movwf	___ftpack@arg+2
  1108  07E1  0824               	movf	___ftmul@exp,w
  1109  07E2  00A0               	movwf	??___ftmul
  1110  07E3  0820               	movf	??___ftmul,w
  1111  07E4  00F3               	movwf	___ftpack@exp
  1112  07E5  0829               	movf	___ftmul@sign,w
  1113  07E6  00A1               	movwf	??___ftmul+1
  1114  07E7  0821               	movf	??___ftmul+1,w
  1115  07E8  00F4               	movwf	___ftpack@sign
  1116  07E9  120A  118A  24A6   	fcall	___ftpack
  1117  07EC  0870               	movf	?___ftpack,w
  1118  07ED  00F8               	movwf	?___ftmul
  1119  07EE  0871               	movf	?___ftpack+1,w
  1120  07EF  00F9               	movwf	?___ftmul+1
  1121  07F0  0872               	movf	?___ftpack+2,w
  1122  07F1  00FA               	movwf	?___ftmul+2
  1123  07F2  0008               	return
  1124  07F3                     __end_of___ftmul:	
  1125                           
  1126                           	psect	text4
  1127  059E                     __ptext4:	
  1128 ;; *************** function ___ftdiv *****************
  1129 ;; Defined at:
  1130 ;;		line 56 in file "D:\mplab\sources\common\ftdiv.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  f2              3   10[BANK0 ] float 
  1133 ;;  f1              3   13[BANK0 ] float 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  f3              3   21[BANK0 ] float 
  1136 ;;  sign            1   25[BANK0 ] unsigned char 
  1137 ;;  exp             1   24[BANK0 ] unsigned char 
  1138 ;;  cntr            1   20[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  3   10[BANK0 ] float 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       6       0       0       0
  1149 ;;      Locals:         0       6       0       0       0
  1150 ;;      Temps:          0       4       0       0       0
  1151 ;;      Totals:         0      16       0       0       0
  1152 ;;Total ram usage:       16 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		___ftpack
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function ___ftdiv
  1164  059E                     ___ftdiv:	
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1168  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1169  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1170  05A0  082D               	movf	___ftdiv@f1,w
  1171  05A1  00B0               	movwf	??___ftdiv
  1172  05A2  082E               	movf	___ftdiv@f1+1,w
  1173  05A3  00B1               	movwf	??___ftdiv+1
  1174  05A4  082F               	movf	___ftdiv@f1+2,w
  1175  05A5  00B2               	movwf	??___ftdiv+2
  1176  05A6  1003               	clrc
  1177  05A7  0D31               	rlf	??___ftdiv+1,w
  1178  05A8  0D32               	rlf	??___ftdiv+2,w
  1179  05A9  00B3               	movwf	??___ftdiv+3
  1180  05AA  0833               	movf	??___ftdiv+3,w
  1181  05AB  00B8               	movwf	___ftdiv@exp
  1182  05AC  0838               	movf	___ftdiv@exp,w
  1183  05AD  1D03               	btfss	3,2
  1184  05AE  2DB6               	goto	l907
  1185  05AF  3000               	movlw	0
  1186  05B0  00AA               	movwf	?___ftdiv
  1187  05B1  3000               	movlw	0
  1188  05B2  00AB               	movwf	?___ftdiv+1
  1189  05B3  3000               	movlw	0
  1190  05B4  00AC               	movwf	?___ftdiv+2
  1191  05B5  0008               	return
  1192  05B6                     l907:	
  1193  05B6  082A               	movf	___ftdiv@f2,w
  1194  05B7  00B0               	movwf	??___ftdiv
  1195  05B8  082B               	movf	___ftdiv@f2+1,w
  1196  05B9  00B1               	movwf	??___ftdiv+1
  1197  05BA  082C               	movf	___ftdiv@f2+2,w
  1198  05BB  00B2               	movwf	??___ftdiv+2
  1199  05BC  1003               	clrc
  1200  05BD  0D31               	rlf	??___ftdiv+1,w
  1201  05BE  0D32               	rlf	??___ftdiv+2,w
  1202  05BF  00B3               	movwf	??___ftdiv+3
  1203  05C0  0833               	movf	??___ftdiv+3,w
  1204  05C1  00B9               	movwf	___ftdiv@sign
  1205  05C2  0839               	movf	___ftdiv@sign,w
  1206  05C3  1D03               	btfss	3,2
  1207  05C4  2DCC               	goto	l913
  1208  05C5  3000               	movlw	0
  1209  05C6  00AA               	movwf	?___ftdiv
  1210  05C7  3000               	movlw	0
  1211  05C8  00AB               	movwf	?___ftdiv+1
  1212  05C9  3000               	movlw	0
  1213  05CA  00AC               	movwf	?___ftdiv+2
  1214  05CB  0008               	return
  1215  05CC                     l913:	
  1216  05CC  3000               	movlw	0
  1217  05CD  00B5               	movwf	___ftdiv@f3
  1218  05CE  3000               	movlw	0
  1219  05CF  00B6               	movwf	___ftdiv@f3+1
  1220  05D0  3000               	movlw	0
  1221  05D1  00B7               	movwf	___ftdiv@f3+2
  1222  05D2  3089               	movlw	137
  1223  05D3  0739               	addwf	___ftdiv@sign,w
  1224  05D4  00B0               	movwf	??___ftdiv
  1225  05D5  0830               	movf	??___ftdiv,w
  1226  05D6  02B8               	subwf	___ftdiv@exp,f
  1227  05D7  082D               	movf	___ftdiv@f1,w
  1228  05D8  00B0               	movwf	??___ftdiv
  1229  05D9  082E               	movf	___ftdiv@f1+1,w
  1230  05DA  00B1               	movwf	??___ftdiv+1
  1231  05DB  082F               	movf	___ftdiv@f1+2,w
  1232  05DC  00B2               	movwf	??___ftdiv+2
  1233  05DD  3010               	movlw	16
  1234  05DE                     u985:	
  1235  05DE  1003               	clrc
  1236  05DF  0CB2               	rrf	??___ftdiv+2,f
  1237  05E0  0CB1               	rrf	??___ftdiv+1,f
  1238  05E1  0CB0               	rrf	??___ftdiv,f
  1239  05E2  3EFF               	addlw	-1
  1240  05E3  1D03               	skipz
  1241  05E4  2DDE               	goto	u985
  1242  05E5  0830               	movf	??___ftdiv,w
  1243  05E6  00B3               	movwf	??___ftdiv+3
  1244  05E7  0833               	movf	??___ftdiv+3,w
  1245  05E8  00B9               	movwf	___ftdiv@sign
  1246  05E9  082A               	movf	___ftdiv@f2,w
  1247  05EA  00B0               	movwf	??___ftdiv
  1248  05EB  082B               	movf	___ftdiv@f2+1,w
  1249  05EC  00B1               	movwf	??___ftdiv+1
  1250  05ED  082C               	movf	___ftdiv@f2+2,w
  1251  05EE  00B2               	movwf	??___ftdiv+2
  1252  05EF  3010               	movlw	16
  1253  05F0                     u995:	
  1254  05F0  1003               	clrc
  1255  05F1  0CB2               	rrf	??___ftdiv+2,f
  1256  05F2  0CB1               	rrf	??___ftdiv+1,f
  1257  05F3  0CB0               	rrf	??___ftdiv,f
  1258  05F4  3EFF               	addlw	-1
  1259  05F5  1D03               	skipz
  1260  05F6  2DF0               	goto	u995
  1261  05F7  0830               	movf	??___ftdiv,w
  1262  05F8  00B3               	movwf	??___ftdiv+3
  1263  05F9  0833               	movf	??___ftdiv+3,w
  1264  05FA  06B9               	xorwf	___ftdiv@sign,f
  1265  05FB  3080               	movlw	128
  1266  05FC  00B0               	movwf	??___ftdiv
  1267  05FD  0830               	movf	??___ftdiv,w
  1268  05FE  05B9               	andwf	___ftdiv@sign,f
  1269  05FF  17AE               	bsf	___ftdiv@f1+1,7
  1270  0600  30FF               	movlw	255
  1271  0601  05AD               	andwf	___ftdiv@f1,f
  1272  0602  30FF               	movlw	255
  1273  0603  05AE               	andwf	___ftdiv@f1+1,f
  1274  0604  3000               	movlw	0
  1275  0605  05AF               	andwf	___ftdiv@f1+2,f
  1276  0606  17AB               	bsf	___ftdiv@f2+1,7
  1277  0607  30FF               	movlw	255
  1278  0608  05AA               	andwf	___ftdiv@f2,f
  1279  0609  30FF               	movlw	255
  1280  060A  05AB               	andwf	___ftdiv@f2+1,f
  1281  060B  3000               	movlw	0
  1282  060C  05AC               	andwf	___ftdiv@f2+2,f
  1283  060D  3018               	movlw	24
  1284  060E  00B0               	movwf	??___ftdiv
  1285  060F  0830               	movf	??___ftdiv,w
  1286  0610  00B4               	movwf	___ftdiv@cntr
  1287  0611                     l927:	
  1288  0611  3001               	movlw	1
  1289  0612                     u1005:	
  1290  0612  1003               	clrc
  1291  0613  0DB5               	rlf	___ftdiv@f3,f
  1292  0614  0DB6               	rlf	___ftdiv@f3+1,f
  1293  0615  0DB7               	rlf	___ftdiv@f3+2,f
  1294  0616  3EFF               	addlw	-1
  1295  0617  1D03               	skipz
  1296  0618  2E12               	goto	u1005
  1297  0619  082C               	movf	___ftdiv@f2+2,w
  1298  061A  022F               	subwf	___ftdiv@f1+2,w
  1299  061B  1D03               	skipz
  1300  061C  2E23               	goto	u1015
  1301  061D  082B               	movf	___ftdiv@f2+1,w
  1302  061E  022E               	subwf	___ftdiv@f1+1,w
  1303  061F  1D03               	skipz
  1304  0620  2E23               	goto	u1015
  1305  0621  082A               	movf	___ftdiv@f2,w
  1306  0622  022D               	subwf	___ftdiv@f1,w
  1307  0623                     u1015:	
  1308  0623  1C03               	skipc
  1309  0624  2E30               	goto	l935
  1310  0625  082A               	movf	___ftdiv@f2,w
  1311  0626  02AD               	subwf	___ftdiv@f1,f
  1312  0627  082B               	movf	___ftdiv@f2+1,w
  1313  0628  1C03               	skipc
  1314  0629  0F2B               	incfsz	___ftdiv@f2+1,w
  1315  062A  02AE               	subwf	___ftdiv@f1+1,f
  1316  062B  082C               	movf	___ftdiv@f2+2,w
  1317  062C  1C03               	skipc
  1318  062D  0A2C               	incf	___ftdiv@f2+2,w
  1319  062E  02AF               	subwf	___ftdiv@f1+2,f
  1320  062F  1435               	bsf	___ftdiv@f3,0
  1321  0630                     l935:	
  1322  0630  3001               	movlw	1
  1323  0631                     u1025:	
  1324  0631  1003               	clrc
  1325  0632  0DAD               	rlf	___ftdiv@f1,f
  1326  0633  0DAE               	rlf	___ftdiv@f1+1,f
  1327  0634  0DAF               	rlf	___ftdiv@f1+2,f
  1328  0635  3EFF               	addlw	-1
  1329  0636  1D03               	skipz
  1330  0637  2E31               	goto	u1025
  1331  0638  3001               	movlw	1
  1332  0639  02B4               	subwf	___ftdiv@cntr,f
  1333  063A  1D03               	btfss	3,2
  1334  063B  2E11               	goto	l927
  1335  063C  0835               	movf	___ftdiv@f3,w
  1336  063D  00F0               	movwf	___ftpack@arg
  1337  063E  0836               	movf	___ftdiv@f3+1,w
  1338  063F  00F1               	movwf	___ftpack@arg+1
  1339  0640  0837               	movf	___ftdiv@f3+2,w
  1340  0641  00F2               	movwf	___ftpack@arg+2
  1341  0642  0838               	movf	___ftdiv@exp,w
  1342  0643  00B0               	movwf	??___ftdiv
  1343  0644  0830               	movf	??___ftdiv,w
  1344  0645  00F3               	movwf	___ftpack@exp
  1345  0646  0839               	movf	___ftdiv@sign,w
  1346  0647  00B1               	movwf	??___ftdiv+1
  1347  0648  0831               	movf	??___ftdiv+1,w
  1348  0649  00F4               	movwf	___ftpack@sign
  1349  064A  120A  118A  24A6   	fcall	___ftpack
  1350  064D  0870               	movf	?___ftpack,w
  1351  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1352  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0650  00AA               	movwf	?___ftdiv
  1354  0651  0871               	movf	?___ftpack+1,w
  1355  0652  00AB               	movwf	?___ftdiv+1
  1356  0653  0872               	movf	?___ftpack+2,w
  1357  0654  00AC               	movwf	?___ftdiv+2
  1358  0655  0008               	return
  1359  0656                     __end_of___ftdiv:	
  1360                           
  1361                           	psect	text5
  1362  04A6                     __ptext5:	
  1363 ;; *************** function ___ftpack *****************
  1364 ;; Defined at:
  1365 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  arg             3    0[COMMON] unsigned um
  1368 ;;  exp             1    3[COMMON] unsigned char 
  1369 ;;  sign            1    4[COMMON] unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  3    0[COMMON] float 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         5       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          3       0       0       0       0
  1384 ;;      Totals:         8       0       0       0       0
  1385 ;;Total ram usage:        8 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		___ftdiv
  1391 ;;		___ftmul
  1392 ;;		___lwtoft
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function ___ftpack
  1398  04A6                     ___ftpack:	
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1402  04A6  0873               	movf	___ftpack@exp,w
  1403  04A7  1903               	btfsc	3,2
  1404  04A8  2CAE               	goto	l791
  1405  04A9  0872               	movf	___ftpack@arg+2,w
  1406  04AA  0471               	iorwf	___ftpack@arg+1,w
  1407  04AB  0470               	iorwf	___ftpack@arg,w
  1408  04AC  1D03               	skipz
  1409  04AD  2CC1               	goto	l797
  1410  04AE                     l791:	
  1411  04AE  3000               	movlw	0
  1412  04AF  00F0               	movwf	?___ftpack
  1413  04B0  3000               	movlw	0
  1414  04B1  00F1               	movwf	?___ftpack+1
  1415  04B2  3000               	movlw	0
  1416  04B3  00F2               	movwf	?___ftpack+2
  1417  04B4  0008               	return
  1418  04B5                     l795:	
  1419  04B5  3001               	movlw	1
  1420  04B6  00F5               	movwf	??___ftpack
  1421  04B7  0875               	movf	??___ftpack,w
  1422  04B8  07F3               	addwf	___ftpack@exp,f
  1423  04B9  3001               	movlw	1
  1424  04BA                     u675:	
  1425  04BA  1003               	clrc
  1426  04BB  0CF2               	rrf	___ftpack@arg+2,f
  1427  04BC  0CF1               	rrf	___ftpack@arg+1,f
  1428  04BD  0CF0               	rrf	___ftpack@arg,f
  1429  04BE  3EFF               	addlw	-1
  1430  04BF  1D03               	skipz
  1431  04C0  2CBA               	goto	u675
  1432  04C1                     l797:	
  1433  04C1  30FE               	movlw	254
  1434  04C2  0572               	andwf	___ftpack@arg+2,w
  1435  04C3  1903               	btfsc	3,2
  1436  04C4  2CDC               	goto	l280
  1437  04C5  2CB5               	goto	l795
  1438  04C6                     l799:	
  1439  04C6  3001               	movlw	1
  1440  04C7  00F5               	movwf	??___ftpack
  1441  04C8  0875               	movf	??___ftpack,w
  1442  04C9  07F3               	addwf	___ftpack@exp,f
  1443  04CA  3001               	movlw	1
  1444  04CB  07F0               	addwf	___ftpack@arg,f
  1445  04CC  3000               	movlw	0
  1446  04CD  1803               	skipnc
  1447  04CE  3001               	movlw	1
  1448  04CF  07F1               	addwf	___ftpack@arg+1,f
  1449  04D0  3000               	movlw	0
  1450  04D1  1803               	skipnc
  1451  04D2  3001               	movlw	1
  1452  04D3  07F2               	addwf	___ftpack@arg+2,f
  1453  04D4  3001               	movlw	1
  1454  04D5                     u695:	
  1455  04D5  1003               	clrc
  1456  04D6  0CF2               	rrf	___ftpack@arg+2,f
  1457  04D7  0CF1               	rrf	___ftpack@arg+1,f
  1458  04D8  0CF0               	rrf	___ftpack@arg,f
  1459  04D9  3EFF               	addlw	-1
  1460  04DA  1D03               	skipz
  1461  04DB  2CD5               	goto	u695
  1462  04DC                     l280:	
  1463  04DC  30FF               	movlw	255
  1464  04DD  0572               	andwf	___ftpack@arg+2,w
  1465  04DE  1903               	btfsc	3,2
  1466  04DF  2CEB               	goto	l807
  1467  04E0  2CC6               	goto	l799
  1468  04E1                     l805:	
  1469  04E1  3001               	movlw	1
  1470  04E2  02F3               	subwf	___ftpack@exp,f
  1471  04E3  3001               	movlw	1
  1472  04E4                     u715:	
  1473  04E4  1003               	clrc
  1474  04E5  0DF0               	rlf	___ftpack@arg,f
  1475  04E6  0DF1               	rlf	___ftpack@arg+1,f
  1476  04E7  0DF2               	rlf	___ftpack@arg+2,f
  1477  04E8  3EFF               	addlw	-1
  1478  04E9  1D03               	skipz
  1479  04EA  2CE4               	goto	u715
  1480  04EB                     l807:	
  1481  04EB  1BF1               	btfsc	___ftpack@arg+1,7
  1482  04EC  2CF1               	goto	l287
  1483  04ED  3002               	movlw	2
  1484  04EE  0273               	subwf	___ftpack@exp,w
  1485  04EF  1803               	skipnc
  1486  04F0  2CE1               	goto	l805
  1487  04F1                     l287:	
  1488  04F1  1873               	btfsc	___ftpack@exp,0
  1489  04F2  2CF9               	goto	l288
  1490  04F3  30FF               	movlw	255
  1491  04F4  05F0               	andwf	___ftpack@arg,f
  1492  04F5  307F               	movlw	127
  1493  04F6  05F1               	andwf	___ftpack@arg+1,f
  1494  04F7  30FF               	movlw	255
  1495  04F8  05F2               	andwf	___ftpack@arg+2,f
  1496  04F9                     l288:	
  1497  04F9  1003               	clrc
  1498  04FA  0CF3               	rrf	___ftpack@exp,f
  1499  04FB  0873               	movf	___ftpack@exp,w
  1500  04FC  00F5               	movwf	??___ftpack
  1501  04FD  01F6               	clrf	??___ftpack+1
  1502  04FE  01F7               	clrf	??___ftpack+2
  1503  04FF  3010               	movlw	16
  1504  0500                     u755:	
  1505  0500  1003               	clrc
  1506  0501  0DF5               	rlf	??___ftpack,f
  1507  0502  0DF6               	rlf	??___ftpack+1,f
  1508  0503  0DF7               	rlf	??___ftpack+2,f
  1509  0504  3EFF               	addlw	-1
  1510  0505  1D03               	skipz
  1511  0506  2D00               	goto	u755
  1512  0507  0875               	movf	??___ftpack,w
  1513  0508  04F0               	iorwf	___ftpack@arg,f
  1514  0509  0876               	movf	??___ftpack+1,w
  1515  050A  04F1               	iorwf	___ftpack@arg+1,f
  1516  050B  0877               	movf	??___ftpack+2,w
  1517  050C  04F2               	iorwf	___ftpack@arg+2,f
  1518  050D  0874               	movf	___ftpack@sign,w
  1519  050E  1903               	btfsc	3,2
  1520  050F  0008               	return
  1521  0510  17F2               	bsf	___ftpack@arg+2,7
  1522  0511  0008               	return
  1523  0512                     __end_of___ftpack:	
  1524                           
  1525                           	psect	text6
  1526  0402                     __ptext6:	
  1527 ;; *************** function ___awmod *****************
  1528 ;; Defined at:
  1529 ;;		line 6 in file "D:\mplab\sources\common\awmod.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  divisor         2    0[COMMON] int 
  1532 ;;  dividend        2    2[COMMON] int 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  sign            1    6[COMMON] unsigned char 
  1535 ;;  counter         1    5[COMMON] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  2    0[COMMON] int 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         4       0       0       0       0
  1546 ;;      Locals:         2       0       0       0       0
  1547 ;;      Temps:          1       0       0       0       0
  1548 ;;      Totals:         7       0       0       0       0
  1549 ;;Total ram usage:        7 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function ___awmod
  1560  0402                     ___awmod:	
  1561                           
  1562                           ;incstack = 0
  1563                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1564  0402  01F6               	clrf	___awmod@sign
  1565  0403  1FF3               	btfss	___awmod@dividend+1,7
  1566  0404  2C0C               	goto	l871
  1567  0405  09F2               	comf	___awmod@dividend,f
  1568  0406  09F3               	comf	___awmod@dividend+1,f
  1569  0407  0AF2               	incf	___awmod@dividend,f
  1570  0408  1903               	skipnz
  1571  0409  0AF3               	incf	___awmod@dividend+1,f
  1572  040A  01F6               	clrf	___awmod@sign
  1573  040B  0AF6               	incf	___awmod@sign,f
  1574  040C                     l871:	
  1575  040C  1FF1               	btfss	___awmod@divisor+1,7
  1576  040D  2C13               	goto	l875
  1577  040E  09F0               	comf	___awmod@divisor,f
  1578  040F  09F1               	comf	___awmod@divisor+1,f
  1579  0410  0AF0               	incf	___awmod@divisor,f
  1580  0411  1903               	skipnz
  1581  0412  0AF1               	incf	___awmod@divisor+1,f
  1582  0413                     l875:	
  1583  0413  0870               	movf	___awmod@divisor,w
  1584  0414  0471               	iorwf	___awmod@divisor+1,w
  1585  0415  1903               	btfsc	3,2
  1586  0416  2C40               	goto	l893
  1587  0417  01F5               	clrf	___awmod@counter
  1588  0418  0AF5               	incf	___awmod@counter,f
  1589  0419                     l883:	
  1590  0419  1BF1               	btfsc	___awmod@divisor+1,7
  1591  041A  2C27               	goto	l885
  1592  041B  3001               	movlw	1
  1593  041C                     u905:	
  1594  041C  1003               	clrc
  1595  041D  0DF0               	rlf	___awmod@divisor,f
  1596  041E  0DF1               	rlf	___awmod@divisor+1,f
  1597  041F  3EFF               	addlw	-1
  1598  0420  1D03               	skipz
  1599  0421  2C1C               	goto	u905
  1600  0422  3001               	movlw	1
  1601  0423  00F4               	movwf	??___awmod
  1602  0424  0874               	movf	??___awmod,w
  1603  0425  07F5               	addwf	___awmod@counter,f
  1604  0426  2C19               	goto	l883
  1605  0427                     l885:	
  1606  0427  0871               	movf	___awmod@divisor+1,w
  1607  0428  0273               	subwf	___awmod@dividend+1,w
  1608  0429  1D03               	skipz
  1609  042A  2C2D               	goto	u925
  1610  042B  0870               	movf	___awmod@divisor,w
  1611  042C  0272               	subwf	___awmod@dividend,w
  1612  042D                     u925:	
  1613  042D  1C03               	skipc
  1614  042E  2C35               	goto	l889
  1615  042F  0870               	movf	___awmod@divisor,w
  1616  0430  02F2               	subwf	___awmod@dividend,f
  1617  0431  0871               	movf	___awmod@divisor+1,w
  1618  0432  1C03               	skipc
  1619  0433  03F3               	decf	___awmod@dividend+1,f
  1620  0434  02F3               	subwf	___awmod@dividend+1,f
  1621  0435                     l889:	
  1622  0435  3001               	movlw	1
  1623  0436                     u935:	
  1624  0436  1003               	clrc
  1625  0437  0CF1               	rrf	___awmod@divisor+1,f
  1626  0438  0CF0               	rrf	___awmod@divisor,f
  1627  0439  3EFF               	addlw	-1
  1628  043A  1D03               	skipz
  1629  043B  2C36               	goto	u935
  1630  043C  3001               	movlw	1
  1631  043D  02F5               	subwf	___awmod@counter,f
  1632  043E  1D03               	btfss	3,2
  1633  043F  2C27               	goto	l885
  1634  0440                     l893:	
  1635  0440  0876               	movf	___awmod@sign,w
  1636  0441  1903               	btfsc	3,2
  1637  0442  2C48               	goto	l897
  1638  0443  09F2               	comf	___awmod@dividend,f
  1639  0444  09F3               	comf	___awmod@dividend+1,f
  1640  0445  0AF2               	incf	___awmod@dividend,f
  1641  0446  1903               	skipnz
  1642  0447  0AF3               	incf	___awmod@dividend+1,f
  1643  0448                     l897:	
  1644  0448  0873               	movf	___awmod@dividend+1,w
  1645  0449  00F1               	movwf	?___awmod+1
  1646  044A  0872               	movf	___awmod@dividend,w
  1647  044B  00F0               	movwf	?___awmod
  1648  044C  0008               	return
  1649  044D                     __end_of___awmod:	
  1650                           
  1651                           	psect	text7
  1652  044D                     __ptext7:	
  1653 ;; *************** function ___awdiv *****************
  1654 ;; Defined at:
  1655 ;;		line 6 in file "D:\mplab\sources\common\awdiv.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  divisor         2    0[COMMON] int 
  1658 ;;  dividend        2    2[COMMON] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  quotient        2    7[COMMON] int 
  1661 ;;  sign            1    6[COMMON] unsigned char 
  1662 ;;  counter         1    5[COMMON] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    0[COMMON] int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         4       0       0       0       0
  1673 ;;      Locals:         4       0       0       0       0
  1674 ;;      Temps:          1       0       0       0       0
  1675 ;;      Totals:         9       0       0       0       0
  1676 ;;Total ram usage:        9 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function ___awdiv
  1687  044D                     ___awdiv:	
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1691  044D  01F6               	clrf	___awdiv@sign
  1692  044E  1FF1               	btfss	___awdiv@divisor+1,7
  1693  044F  2C57               	goto	l827
  1694  0450  09F0               	comf	___awdiv@divisor,f
  1695  0451  09F1               	comf	___awdiv@divisor+1,f
  1696  0452  0AF0               	incf	___awdiv@divisor,f
  1697  0453  1903               	skipnz
  1698  0454  0AF1               	incf	___awdiv@divisor+1,f
  1699  0455  01F6               	clrf	___awdiv@sign
  1700  0456  0AF6               	incf	___awdiv@sign,f
  1701  0457                     l827:	
  1702  0457  1FF3               	btfss	___awdiv@dividend+1,7
  1703  0458  2C62               	goto	l833
  1704  0459  09F2               	comf	___awdiv@dividend,f
  1705  045A  09F3               	comf	___awdiv@dividend+1,f
  1706  045B  0AF2               	incf	___awdiv@dividend,f
  1707  045C  1903               	skipnz
  1708  045D  0AF3               	incf	___awdiv@dividend+1,f
  1709  045E  3001               	movlw	1
  1710  045F  00F4               	movwf	??___awdiv
  1711  0460  0874               	movf	??___awdiv,w
  1712  0461  06F6               	xorwf	___awdiv@sign,f
  1713  0462                     l833:	
  1714  0462  01F7               	clrf	___awdiv@quotient
  1715  0463  01F8               	clrf	___awdiv@quotient+1
  1716  0464  0870               	movf	___awdiv@divisor,w
  1717  0465  0471               	iorwf	___awdiv@divisor+1,w
  1718  0466  1903               	btfsc	3,2
  1719  0467  2C99               	goto	l855
  1720  0468  01F5               	clrf	___awdiv@counter
  1721  0469  0AF5               	incf	___awdiv@counter,f
  1722  046A                     l843:	
  1723  046A  1BF1               	btfsc	___awdiv@divisor+1,7
  1724  046B  2C78               	goto	l845
  1725  046C  3001               	movlw	1
  1726  046D                     u805:	
  1727  046D  1003               	clrc
  1728  046E  0DF0               	rlf	___awdiv@divisor,f
  1729  046F  0DF1               	rlf	___awdiv@divisor+1,f
  1730  0470  3EFF               	addlw	-1
  1731  0471  1D03               	skipz
  1732  0472  2C6D               	goto	u805
  1733  0473  3001               	movlw	1
  1734  0474  00F4               	movwf	??___awdiv
  1735  0475  0874               	movf	??___awdiv,w
  1736  0476  07F5               	addwf	___awdiv@counter,f
  1737  0477  2C6A               	goto	l843
  1738  0478                     l845:	
  1739  0478  3001               	movlw	1
  1740  0479                     u825:	
  1741  0479  1003               	clrc
  1742  047A  0DF7               	rlf	___awdiv@quotient,f
  1743  047B  0DF8               	rlf	___awdiv@quotient+1,f
  1744  047C  3EFF               	addlw	-1
  1745  047D  1D03               	skipz
  1746  047E  2C79               	goto	u825
  1747  047F  0871               	movf	___awdiv@divisor+1,w
  1748  0480  0273               	subwf	___awdiv@dividend+1,w
  1749  0481  1D03               	skipz
  1750  0482  2C85               	goto	u835
  1751  0483  0870               	movf	___awdiv@divisor,w
  1752  0484  0272               	subwf	___awdiv@dividend,w
  1753  0485                     u835:	
  1754  0485  1C03               	skipc
  1755  0486  2C8E               	goto	l851
  1756  0487  0870               	movf	___awdiv@divisor,w
  1757  0488  02F2               	subwf	___awdiv@dividend,f
  1758  0489  0871               	movf	___awdiv@divisor+1,w
  1759  048A  1C03               	skipc
  1760  048B  03F3               	decf	___awdiv@dividend+1,f
  1761  048C  02F3               	subwf	___awdiv@dividend+1,f
  1762  048D  1477               	bsf	___awdiv@quotient,0
  1763  048E                     l851:	
  1764  048E  3001               	movlw	1
  1765  048F                     u845:	
  1766  048F  1003               	clrc
  1767  0490  0CF1               	rrf	___awdiv@divisor+1,f
  1768  0491  0CF0               	rrf	___awdiv@divisor,f
  1769  0492  3EFF               	addlw	-1
  1770  0493  1D03               	skipz
  1771  0494  2C8F               	goto	u845
  1772  0495  3001               	movlw	1
  1773  0496  02F5               	subwf	___awdiv@counter,f
  1774  0497  1D03               	btfss	3,2
  1775  0498  2C78               	goto	l845
  1776  0499                     l855:	
  1777  0499  0876               	movf	___awdiv@sign,w
  1778  049A  1903               	btfsc	3,2
  1779  049B  2CA1               	goto	l859
  1780  049C  09F7               	comf	___awdiv@quotient,f
  1781  049D  09F8               	comf	___awdiv@quotient+1,f
  1782  049E  0AF7               	incf	___awdiv@quotient,f
  1783  049F  1903               	skipnz
  1784  04A0  0AF8               	incf	___awdiv@quotient+1,f
  1785  04A1                     l859:	
  1786  04A1  0878               	movf	___awdiv@quotient+1,w
  1787  04A2  00F1               	movwf	?___awdiv+1
  1788  04A3  0877               	movf	___awdiv@quotient,w
  1789  04A4  00F0               	movwf	?___awdiv
  1790  04A5  0008               	return
  1791  04A6                     __end_of___awdiv:	
  1792  007E                     btemp	set	126	;btemp
  1793  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___ftmul
    _main->___fttol
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7010
                                             26 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1743
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             10 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
   ___lwtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      25       5       46.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Feb 21 15:17:34 2022

            __CFG_CP$OFF 0000                       l30 0675             ___awdiv@sign 0076  
            __CFG_LVP$ON 0000                      l280 04DC                      l371 0584  
                    l287 04F1                      l288 04F9                      l805 04E1  
                    l807 04EB                      l833 0462                      l913 05CC  
                    l851 048E                      l843 046A                      l827 0457  
                    l907 05B6                      l845 0478                      l855 0499  
                    l871 040C                      l791 04AE                      l935 0630  
                    l927 0611                      l859 04A1                      l883 0419  
                    l875 0413                      l795 04B5                      l971 079F  
                    l955 0750                      l885 0427                      l893 0440  
                    l797 04C1                      l949 073A                      l799 04C6  
                    l983 07C7                      l967 078F                      l897 0448  
                    l889 0435                      l979 07B7                      l999 052A  
           __CFG_CPD$OFF 0000                      u715 04E4                      u805 046D  
                    u825 0479                      u905 041C                      u835 0485  
                    u755 0500                      u675 04BA                      u845 048F  
                    u925 042D                      u935 0436                      u695 04D5  
                    u985 05DE                      u995 05F0             ___awmod@sign 0076  
           __CFG_IESO$ON 0000             __CFG_FOSC$XT 0000             ___ftdiv@cntr 0034  
           ___ftdiv@sign 0039                     l1031 0595                     l1025 0579  
                   l1017 055C                     l1027 0587                     l1019 056C  
                   l1059 0672                     u1005 0612                     u1015 0623  
                   u1025 0631                     u1105 07A0                     u1115 07A8  
                   u1065 075C                     u1225 055D                     u1155 07C8  
                   u1075 076E                     u1307 06FA                     u1165 07D0  
                   u1317 071C                     u1255 057B                     u1195 0531  
                   u1297 0670             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _lm35 0043                     _main 0656             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     _temp 003E                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0028             ___ftmul@sign 0029             ___fttol@exp1 007D  
           ___fttol@lval 0079                    ?_main 0070          __end_of___awdiv 04A6  
          __CFG_WDTE$OFF 0000          __end_of___awmod 044D          __end_of___ftdiv 0656  
                  _ANSEL 0188          __end_of___ftmul 07F3          ___awdiv@divisor 0070  
        __end_of___fttol 059E          ___awdiv@counter 0075                    _PORTD 0008  
                  _TRISD 0088            ___ftpack@sign 0074                    status 0003  
                  wtemp0 007E          __initialization 07F3             __end_of_main 0722  
                 ??_main 003A            ___fttol@sign1 0078                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0072         __end_of___ftpack 0512  
       __end_of___lwtoft 0402                   _TRISA0 0428           __CFG_PWRTE$OFF 0000  
              ??___awdiv 0074                ??___awmod 0074                ??___ftdiv 0030  
              ??___ftmul 0020                ??___fttol 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075    ___ftmul@f3_as_product 0025  
__end_of__initialization 07FC               ___ftdiv@f1 002D               ___ftdiv@f2 002A  
             ___ftdiv@f3 0035               ___ftmul@f1 0078               ___ftmul@f2 007B  
             ___fttol@f1 0070           __pcstackCOMMON 0070               ___lwtoft@c 0078  
             __pbssBANK0 003E               __pmaintext 0656           _counter_digito 0044  
              ?___ftpack 0070                ?___lwtoft 0078                  ___awdiv 044D  
                ___awmod 0402                  ___ftdiv 059E                  ___ftmul 0722  
                ___fttol 0512               ??___ftpack 0075                  __ptext1 03EE  
                __ptext2 0512                  __ptext3 0722                  __ptext4 059E  
                __ptext5 04A6                  __ptext6 0402                  __ptext7 044D  
             ??___lwtoft 007B         ___awmod@dividend 0072     end_of_initialization 07FC  
            ___ftdiv@exp 0038              ___ftmul@exp 0024      start_initialization 07F3  
      __size_of___ftpack 006C                ___latbits 0002        __size_of___lwtoft 0014  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
               ?___ftdiv 002A                 ?___ftmul 0078                 ?___fttol 0070  
              _value_adc 0041               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0059         __size_of___awmod 004B         __size_of___ftdiv 00B8  
       __size_of___ftmul 00D1         __size_of___fttol 008C                 ___ftpack 04A6  
               ___lwtoft 03EE        __CFG_BOR4V$BOR40V 0000            __size_of_main 00CC  
