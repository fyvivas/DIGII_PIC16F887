

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jun 13 22:06:27 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0008                     _PORTD	set	8
   131  001E                     _ADRESH	set	30
   132  001F                     _ADCON0bits	set	31
   133  009E                     _ADRESL	set	158
   134  009F                     _ADCON1bits	set	159
   135  0088                     _TRISD	set	136
   136  008F                     _OSCCON	set	143
   137  0428                     _TRISA0	set	1064
   138  0188                     _ANSEL	set	392
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  07F3                     start_initialization:	
   144  07F3                     __initialization:	
   145                           
   146                           ; Clear objects allocated to BANK0
   147  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   148  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   149  07F5  01BE               	clrf	__pbssBANK0& (0+127)
   150  07F6  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   151  07F7  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   152  07F8  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   153  07F9  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   154  07FA  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   155  07FB  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   156  07FC                     end_of_initialization:	
   157                           ;End of C runtime variable initialization code
   158                           
   159  07FC                     __end_of__initialization:	
   160  07FC  0183               	clrf	3
   161  07FD  120A  118A  2E56   	ljmp	_main	;jump to C main() function
   162                           
   163                           	psect	bssBANK0
   164  003E                     __pbssBANK0:	
   165  003E                     _temp:	
   166  003E                     	ds	3
   167  0041                     _value_adc:	
   168  0041                     	ds	2
   169  0043                     _lm35:	
   170  0043                     	ds	1
   171  0044                     _counter_digito:	
   172  0044                     	ds	1
   173                           
   174                           	psect	cstackCOMMON
   175  0070                     __pcstackCOMMON:	
   176  0070                     ?_main:	
   177  0070                     ?___awdiv:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ?___awmod:	
   181                           ; 2 bytes @ 0x0
   182                           
   183  0070                     ?___ftpack:	
   184                           ; 2 bytes @ 0x0
   185                           
   186  0070                     ?___fttol:	
   187                           ; 3 bytes @ 0x0
   188                           
   189  0070                     ___awdiv@divisor:	
   190                           ; 4 bytes @ 0x0
   191                           
   192  0070                     ___awmod@divisor:	
   193                           ; 2 bytes @ 0x0
   194                           
   195  0070                     ___ftpack@arg:	
   196                           ; 2 bytes @ 0x0
   197                           
   198  0070                     ___fttol@f1:	
   199                           ; 3 bytes @ 0x0
   200                           
   201                           
   202                           ; 3 bytes @ 0x0
   203  0070                     	ds	2
   204  0072                     ___awdiv@dividend:	
   205  0072                     ___awmod@dividend:	
   206                           ; 2 bytes @ 0x2
   207                           
   208                           
   209                           ; 2 bytes @ 0x2
   210  0072                     	ds	1
   211  0073                     ___ftpack@exp:	
   212                           
   213                           ; 1 bytes @ 0x3
   214  0073                     	ds	1
   215  0074                     ??___awdiv:	
   216  0074                     ??___awmod:	
   217                           ; 1 bytes @ 0x4
   218                           
   219  0074                     ??___fttol:	
   220                           ; 1 bytes @ 0x4
   221                           
   222  0074                     ___ftpack@sign:	
   223                           ; 1 bytes @ 0x4
   224                           
   225                           
   226                           ; 1 bytes @ 0x4
   227  0074                     	ds	1
   228  0075                     ??___ftpack:	
   229  0075                     ___awdiv@counter:	
   230                           ; 1 bytes @ 0x5
   231                           
   232  0075                     ___awmod@counter:	
   233                           ; 1 bytes @ 0x5
   234                           
   235                           
   236                           ; 1 bytes @ 0x5
   237  0075                     	ds	1
   238  0076                     ___awdiv@sign:	
   239  0076                     ___awmod@sign:	
   240                           ; 1 bytes @ 0x6
   241                           
   242                           
   243                           ; 1 bytes @ 0x6
   244  0076                     	ds	1
   245  0077                     ___awdiv@quotient:	
   246                           
   247                           ; 2 bytes @ 0x7
   248  0077                     	ds	1
   249  0078                     ?___ftmul:	
   250  0078                     ?___lwtoft:	
   251                           ; 3 bytes @ 0x8
   252                           
   253  0078                     ___fttol@sign1:	
   254                           ; 3 bytes @ 0x8
   255                           
   256  0078                     ___lwtoft@c:	
   257                           ; 1 bytes @ 0x8
   258                           
   259  0078                     ___ftmul@f1:	
   260                           ; 2 bytes @ 0x8
   261                           
   262                           
   263                           ; 3 bytes @ 0x8
   264  0078                     	ds	1
   265  0079                     ___fttol@lval:	
   266                           
   267                           ; 4 bytes @ 0x9
   268  0079                     	ds	2
   269  007B                     ??___lwtoft:	
   270  007B                     ___ftmul@f2:	
   271                           ; 1 bytes @ 0xB
   272                           
   273                           
   274                           ; 3 bytes @ 0xB
   275  007B                     	ds	2
   276  007D                     ___fttol@exp1:	
   277                           
   278                           ; 1 bytes @ 0xD
   279  007D                     	ds	1
   280                           
   281                           	psect	cstackBANK0
   282  0020                     __pcstackBANK0:	
   283  0020                     ??___ftmul:	
   284                           
   285                           ; 1 bytes @ 0x0
   286  0020                     	ds	4
   287  0024                     ___ftmul@exp:	
   288                           
   289                           ; 1 bytes @ 0x4
   290  0024                     	ds	1
   291  0025                     ___ftmul@f3_as_product:	
   292                           
   293                           ; 3 bytes @ 0x5
   294  0025                     	ds	3
   295  0028                     ___ftmul@cntr:	
   296                           
   297                           ; 1 bytes @ 0x8
   298  0028                     	ds	1
   299  0029                     ___ftmul@sign:	
   300                           
   301                           ; 1 bytes @ 0x9
   302  0029                     	ds	1
   303  002A                     ?___ftdiv:	
   304  002A                     ___ftdiv@f2:	
   305                           ; 3 bytes @ 0xA
   306                           
   307                           
   308                           ; 3 bytes @ 0xA
   309  002A                     	ds	3
   310  002D                     ___ftdiv@f1:	
   311                           
   312                           ; 3 bytes @ 0xD
   313  002D                     	ds	3
   314  0030                     ??___ftdiv:	
   315                           
   316                           ; 1 bytes @ 0x10
   317  0030                     	ds	4
   318  0034                     ___ftdiv@cntr:	
   319                           
   320                           ; 1 bytes @ 0x14
   321  0034                     	ds	1
   322  0035                     ___ftdiv@f3:	
   323                           
   324                           ; 3 bytes @ 0x15
   325  0035                     	ds	3
   326  0038                     ___ftdiv@exp:	
   327                           
   328                           ; 1 bytes @ 0x18
   329  0038                     	ds	1
   330  0039                     ___ftdiv@sign:	
   331                           
   332                           ; 1 bytes @ 0x19
   333  0039                     	ds	1
   334  003A                     ??_main:	
   335                           
   336                           ; 1 bytes @ 0x1A
   337  003A                     	ds	4
   338                           
   339                           	psect	maintext
   340  0656                     __pmaintext:	
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 10 in file "adc_lm35.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       4       0       0       0
   363 ;;      Totals:         0       4       0       0       0
   364 ;;Total ram usage:        4 bytes
   365 ;; Hardware stack levels required when called:    2
   366 ;; This function calls:
   367 ;;		___awdiv
   368 ;;		___awmod
   369 ;;		___ftdiv
   370 ;;		___ftmul
   371 ;;		___fttol
   372 ;;		___lwtoft
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  0656                     _main:	
   381                           
   382                           ;adc_lm35.c: 12: OSCCON = 0x71;
   383                           
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   386  0656  3071               	movlw	113
   387  0657  1683               	bsf	3,5	;RP0=1, select bank1
   388  0658  1303               	bcf	3,6	;RP1=0, select bank1
   389  0659  008F               	movwf	15	;volatile
   390                           
   391                           ;adc_lm35.c: 13: TRISD = 0x00;
   392  065A  0188               	clrf	8	;volatile
   393                           
   394                           ;adc_lm35.c: 14: TRISA0 = 1;
   395  065B  1405               	bsf	5,0	;volatile
   396                           
   397                           ;adc_lm35.c: 15: ANSEL = 0x01;
   398  065C  3001               	movlw	1
   399  065D  1683               	bsf	3,5	;RP0=1, select bank3
   400  065E  1703               	bsf	3,6	;RP1=1, select bank3
   401  065F  0088               	movwf	8	;volatile
   402                           
   403                           ;adc_lm35.c: 17: ADCON1bits.ADFM = 1;
   404  0660  1683               	bsf	3,5	;RP0=1, select bank1
   405  0661  1303               	bcf	3,6	;RP1=0, select bank1
   406  0662  179F               	bsf	31,7	;volatile
   407                           
   408                           ;adc_lm35.c: 18: ADCON1bits.VCFG0 = 0;
   409  0663  121F               	bcf	31,4	;volatile
   410                           
   411                           ;adc_lm35.c: 19: ADCON1bits.VCFG1 = 0;
   412  0664  129F               	bcf	31,5	;volatile
   413                           
   414                           ;adc_lm35.c: 21: ADCON0bits.CHS = 0b0000;
   415  0665  30C3               	movlw	-61
   416  0666  1283               	bcf	3,5	;RP0=0, select bank0
   417  0667  1303               	bcf	3,6	;RP1=0, select bank0
   418  0668  059F               	andwf	31,f	;volatile
   419                           
   420                           ;adc_lm35.c: 22: ADCON0bits.ADCS = 0b01;
   421  0669  081F               	movf	31,w	;volatile
   422  066A  393F               	andlw	-193
   423  066B  3840               	iorlw	64
   424  066C  009F               	movwf	31	;volatile
   425                           
   426                           ;adc_lm35.c: 24: ADCON0bits.ADON = 1;
   427  066D  141F               	bsf	31,0	;volatile
   428                           
   429                           ;adc_lm35.c: 25: _delay((unsigned long)((30)*(8000000/4000000.0)));
   430  066E  3013               	movlw	19
   431  066F  1283               	bcf	3,5	;RP0=0, select bank0
   432  0670  1303               	bcf	3,6	;RP1=0, select bank0
   433  0671  00BA               	movwf	??_main
   434  0672                     u1297:	
   435  0672  0BBA               	decfsz	??_main,f
   436  0673  2E72               	goto	u1297
   437  0674                     l1065:	
   438                           ;adc_lm35.c: 27: while (1) {
   439                           
   440                           
   441                           ;adc_lm35.c: 29: ADCON0bits.GO_DONE = 1;
   442  0674  1283               	bcf	3,5	;RP0=0, select bank0
   443  0675  1303               	bcf	3,6	;RP1=0, select bank0
   444  0676  149F               	bsf	31,1	;volatile
   445  0677                     l32:	
   446                           ;adc_lm35.c: 30: while (ADCON0bits.GO_DONE);
   447                           
   448  0677  189F               	btfsc	31,1	;volatile
   449  0678  2E77               	goto	l32
   450                           
   451                           ;adc_lm35.c: 31: value_adc = ADRESH;
   452  0679  081E               	movf	30,w	;volatile
   453  067A  00BA               	movwf	??_main
   454  067B  01BB               	clrf	??_main+1
   455  067C  083A               	movf	??_main,w
   456  067D  00C1               	movwf	_value_adc
   457  067E  083B               	movf	??_main+1,w
   458  067F  00C2               	movwf	_value_adc+1
   459                           
   460                           ;adc_lm35.c: 32: value_adc = (value_adc << 8) + ADRESL;
   461  0680  0841               	movf	_value_adc,w
   462  0681  00BB               	movwf	??_main+1
   463  0682  01BA               	clrf	??_main
   464  0683  1683               	bsf	3,5	;RP0=1, select bank1
   465  0684  1303               	bcf	3,6	;RP1=0, select bank1
   466  0685  081E               	movf	30,w	;volatile
   467  0686  1283               	bcf	3,5	;RP0=0, select bank0
   468  0687  1303               	bcf	3,6	;RP1=0, select bank0
   469  0688  073A               	addwf	??_main,w
   470  0689  00BC               	movwf	??_main+2
   471  068A  3000               	movlw	0
   472  068B  1803               	skipnc
   473  068C  3001               	movlw	1
   474  068D  073B               	addwf	??_main+1,w
   475  068E  00BD               	movwf	??_main+3
   476  068F  083C               	movf	??_main+2,w
   477  0690  00C1               	movwf	_value_adc
   478  0691  083D               	movf	??_main+3,w
   479  0692  00C2               	movwf	_value_adc+1
   480                           
   481                           ;adc_lm35.c: 33: temp = value_adc;
   482  0693  0842               	movf	_value_adc+1,w
   483  0694  00F9               	movwf	___lwtoft@c+1
   484  0695  0841               	movf	_value_adc,w
   485  0696  00F8               	movwf	___lwtoft@c
   486  0697  120A  118A  23EE  120A  118A  	fcall	___lwtoft
   487  069C  0878               	movf	?___lwtoft,w
   488  069D  1283               	bcf	3,5	;RP0=0, select bank0
   489  069E  1303               	bcf	3,6	;RP1=0, select bank0
   490  069F  00BE               	movwf	_temp
   491  06A0  0879               	movf	?___lwtoft+1,w
   492  06A1  00BF               	movwf	_temp+1
   493  06A2  087A               	movf	?___lwtoft+2,w
   494  06A3  00C0               	movwf	_temp+2
   495                           
   496                           ;adc_lm35.c: 34: temp = (temp * 500.0) / 1023.0;
   497  06A4  30C0               	movlw	192
   498  06A5  00AA               	movwf	___ftdiv@f2
   499  06A6  307F               	movlw	127
   500  06A7  00AB               	movwf	___ftdiv@f2+1
   501  06A8  3044               	movlw	68
   502  06A9  00AC               	movwf	___ftdiv@f2+2
   503  06AA  3000               	movlw	0
   504  06AB  00F8               	movwf	___ftmul@f1
   505  06AC  30FA               	movlw	250
   506  06AD  00F9               	movwf	___ftmul@f1+1
   507  06AE  3043               	movlw	67
   508  06AF  00FA               	movwf	___ftmul@f1+2
   509  06B0  083E               	movf	_temp,w
   510  06B1  00FB               	movwf	___ftmul@f2
   511  06B2  083F               	movf	_temp+1,w
   512  06B3  00FC               	movwf	___ftmul@f2+1
   513  06B4  0840               	movf	_temp+2,w
   514  06B5  00FD               	movwf	___ftmul@f2+2
   515  06B6  120A  118A  2722  120A  118A  	fcall	___ftmul
   516  06BB  0878               	movf	?___ftmul,w
   517  06BC  1283               	bcf	3,5	;RP0=0, select bank0
   518  06BD  1303               	bcf	3,6	;RP1=0, select bank0
   519  06BE  00AD               	movwf	___ftdiv@f1
   520  06BF  0879               	movf	?___ftmul+1,w
   521  06C0  00AE               	movwf	___ftdiv@f1+1
   522  06C1  087A               	movf	?___ftmul+2,w
   523  06C2  00AF               	movwf	___ftdiv@f1+2
   524  06C3  120A  118A  259E  120A  118A  	fcall	___ftdiv
   525  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   526  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   527  06CA  082A               	movf	?___ftdiv,w
   528  06CB  00BE               	movwf	_temp
   529  06CC  082B               	movf	?___ftdiv+1,w
   530  06CD  00BF               	movwf	_temp+1
   531  06CE  082C               	movf	?___ftdiv+2,w
   532  06CF  00C0               	movwf	_temp+2
   533                           
   534                           ;adc_lm35.c: 35: lm35 = (char) temp;
   535  06D0  083E               	movf	_temp,w
   536  06D1  00F0               	movwf	___fttol@f1
   537  06D2  083F               	movf	_temp+1,w
   538  06D3  00F1               	movwf	___fttol@f1+1
   539  06D4  0840               	movf	_temp+2,w
   540  06D5  00F2               	movwf	___fttol@f1+2
   541  06D6  120A  118A  2512  120A  118A  	fcall	___fttol
   542  06DB  0870               	movf	?___fttol,w
   543  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   544  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   545  06DE  00BA               	movwf	??_main
   546  06DF  083A               	movf	??_main,w
   547  06E0  00C3               	movwf	_lm35
   548                           
   549                           ;adc_lm35.c: 36: PORTD = (1 << 4) + (lm35 % 10);
   550  06E1  300A               	movlw	10
   551  06E2  00F0               	movwf	___awmod@divisor
   552  06E3  3000               	movlw	0
   553  06E4  00F1               	movwf	___awmod@divisor+1
   554  06E5  0843               	movf	_lm35,w
   555  06E6  00BA               	movwf	??_main
   556  06E7  01BB               	clrf	??_main+1
   557  06E8  083A               	movf	??_main,w
   558  06E9  00F2               	movwf	___awmod@dividend
   559  06EA  083B               	movf	??_main+1,w
   560  06EB  00F3               	movwf	___awmod@dividend+1
   561  06EC  120A  118A  2402  120A  118A  	fcall	___awmod
   562  06F1  0870               	movf	?___awmod,w
   563  06F2  3E10               	addlw	16
   564  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   565  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   566  06F5  0088               	movwf	8	;volatile
   567                           
   568                           ;adc_lm35.c: 37: _delay((unsigned long)((50)*(8000000/4000.0)));
   569  06F6  3082               	movlw	130
   570  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   571  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   572  06F9  00BB               	movwf	??_main+1
   573  06FA  30DD               	movlw	221
   574  06FB  00BA               	movwf	??_main
   575  06FC                     u1307:	
   576  06FC  0BBA               	decfsz	??_main,f
   577  06FD  2EFC               	goto	u1307
   578  06FE  0BBB               	decfsz	??_main+1,f
   579  06FF  2EFC               	goto	u1307
   580                           
   581                           ;adc_lm35.c: 38: PORTD = (1 << 5) + (lm35 / 10);
   582  0700  300A               	movlw	10
   583  0701  00F0               	movwf	___awdiv@divisor
   584  0702  3000               	movlw	0
   585  0703  00F1               	movwf	___awdiv@divisor+1
   586  0704  1283               	bcf	3,5	;RP0=0, select bank0
   587  0705  1303               	bcf	3,6	;RP1=0, select bank0
   588  0706  0843               	movf	_lm35,w
   589  0707  00BA               	movwf	??_main
   590  0708  01BB               	clrf	??_main+1
   591  0709  083A               	movf	??_main,w
   592  070A  00F2               	movwf	___awdiv@dividend
   593  070B  083B               	movf	??_main+1,w
   594  070C  00F3               	movwf	___awdiv@dividend+1
   595  070D  120A  118A  244D  120A  118A  	fcall	___awdiv
   596  0712  0870               	movf	?___awdiv,w
   597  0713  3E20               	addlw	32
   598  0714  1283               	bcf	3,5	;RP0=0, select bank0
   599  0715  1303               	bcf	3,6	;RP1=0, select bank0
   600  0716  0088               	movwf	8	;volatile
   601                           
   602                           ;adc_lm35.c: 39: _delay((unsigned long)((50)*(8000000/4000.0)));
   603  0717  3082               	movlw	130
   604  0718  1283               	bcf	3,5	;RP0=0, select bank0
   605  0719  1303               	bcf	3,6	;RP1=0, select bank0
   606  071A  00BB               	movwf	??_main+1
   607  071B  30DD               	movlw	221
   608  071C  00BA               	movwf	??_main
   609  071D                     u1317:	
   610  071D  0BBA               	decfsz	??_main,f
   611  071E  2F1D               	goto	u1317
   612  071F  0BBB               	decfsz	??_main+1,f
   613  0720  2F1D               	goto	u1317
   614  0721  2E74               	goto	l1065
   615  0722                     __end_of_main:	
   616                           
   617                           	psect	text1
   618  03EE                     __ptext1:	
   619 ;; *************** function ___lwtoft *****************
   620 ;; Defined at:
   621 ;;		line 28 in file "D:\mplab\sources\common\lwtoft.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  c               2    8[COMMON] unsigned int 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  3    8[COMMON] float 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         3       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          1       0       0       0       0
   638 ;;      Totals:         4       0       0       0       0
   639 ;;Total ram usage:        4 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    1
   642 ;; This function calls:
   643 ;;		___ftpack
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function ___lwtoft
   651  03EE                     ___lwtoft:	
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   655  03EE  0878               	movf	___lwtoft@c,w
   656  03EF  00F0               	movwf	___ftpack@arg
   657  03F0  0879               	movf	___lwtoft@c+1,w
   658  03F1  00F1               	movwf	___ftpack@arg+1
   659  03F2  01F2               	clrf	___ftpack@arg+2
   660  03F3  308E               	movlw	142
   661  03F4  00FB               	movwf	??___lwtoft
   662  03F5  087B               	movf	??___lwtoft,w
   663  03F6  00F3               	movwf	___ftpack@exp
   664  03F7  01F4               	clrf	___ftpack@sign
   665  03F8  120A  118A  24A6   	fcall	___ftpack
   666  03FB  0870               	movf	?___ftpack,w
   667  03FC  00F8               	movwf	?___lwtoft
   668  03FD  0871               	movf	?___ftpack+1,w
   669  03FE  00F9               	movwf	?___lwtoft+1
   670  03FF  0872               	movf	?___ftpack+2,w
   671  0400  00FA               	movwf	?___lwtoft+2
   672  0401  0008               	return
   673  0402                     __end_of___lwtoft:	
   674                           
   675                           	psect	text2
   676  0512                     __ptext2:	
   677 ;; *************** function ___fttol *****************
   678 ;; Defined at:
   679 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  f1              3    0[COMMON] float 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  lval            4    9[COMMON] unsigned long 
   684 ;;  exp1            1   13[COMMON] unsigned char 
   685 ;;  sign1           1    8[COMMON] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  4    0[COMMON] long 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         4       0       0       0       0
   696 ;;      Locals:         6       0       0       0       0
   697 ;;      Temps:          4       0       0       0       0
   698 ;;      Totals:        14       0       0       0       0
   699 ;;Total ram usage:       14 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function ___fttol
   710  0512                     ___fttol:	
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   714  0512  0870               	movf	___fttol@f1,w
   715  0513  00F4               	movwf	??___fttol
   716  0514  0871               	movf	___fttol@f1+1,w
   717  0515  00F5               	movwf	??___fttol+1
   718  0516  0872               	movf	___fttol@f1+2,w
   719  0517  00F6               	movwf	??___fttol+2
   720  0518  1003               	clrc
   721  0519  0D75               	rlf	??___fttol+1,w
   722  051A  0D76               	rlf	??___fttol+2,w
   723  051B  00F7               	movwf	??___fttol+3
   724  051C  0877               	movf	??___fttol+3,w
   725  051D  00FD               	movwf	___fttol@exp1
   726  051E  087D               	movf	___fttol@exp1,w
   727  051F  1D03               	btfss	3,2
   728  0520  2D2A               	goto	l1003
   729  0521  3000               	movlw	0
   730  0522  00F3               	movwf	?___fttol+3
   731  0523  3000               	movlw	0
   732  0524  00F2               	movwf	?___fttol+2
   733  0525  3000               	movlw	0
   734  0526  00F1               	movwf	?___fttol+1
   735  0527  3000               	movlw	0
   736  0528  00F0               	movwf	?___fttol
   737  0529  0008               	return
   738  052A                     l1003:	
   739  052A  0870               	movf	___fttol@f1,w
   740  052B  00F4               	movwf	??___fttol
   741  052C  0871               	movf	___fttol@f1+1,w
   742  052D  00F5               	movwf	??___fttol+1
   743  052E  0872               	movf	___fttol@f1+2,w
   744  052F  00F6               	movwf	??___fttol+2
   745  0530  3017               	movlw	23
   746  0531                     u1195:	
   747  0531  1003               	clrc
   748  0532  0CF6               	rrf	??___fttol+2,f
   749  0533  0CF5               	rrf	??___fttol+1,f
   750  0534  0CF4               	rrf	??___fttol,f
   751  0535  3EFF               	addlw	-1
   752  0536  1D03               	skipz
   753  0537  2D31               	goto	u1195
   754  0538  0874               	movf	??___fttol,w
   755  0539  00F7               	movwf	??___fttol+3
   756  053A  0877               	movf	??___fttol+3,w
   757  053B  00F8               	movwf	___fttol@sign1
   758  053C  17F1               	bsf	___fttol@f1+1,7
   759  053D  30FF               	movlw	255
   760  053E  05F0               	andwf	___fttol@f1,f
   761  053F  30FF               	movlw	255
   762  0540  05F1               	andwf	___fttol@f1+1,f
   763  0541  3000               	movlw	0
   764  0542  05F2               	andwf	___fttol@f1+2,f
   765  0543  0870               	movf	___fttol@f1,w
   766  0544  00F9               	movwf	___fttol@lval
   767  0545  0871               	movf	___fttol@f1+1,w
   768  0546  00FA               	movwf	___fttol@lval+1
   769  0547  0872               	movf	___fttol@f1+2,w
   770  0548  00FB               	movwf	___fttol@lval+2
   771  0549  01FC               	clrf	___fttol@lval+3
   772  054A  308E               	movlw	142
   773  054B  02FD               	subwf	___fttol@exp1,f
   774  054C  1FFD               	btfss	___fttol@exp1,7
   775  054D  2D6C               	goto	l1023
   776  054E  087D               	movf	___fttol@exp1,w
   777  054F  3A80               	xorlw	128
   778  0550  3E8F               	addlw	143
   779  0551  1803               	skipnc
   780  0552  2D5C               	goto	l1021
   781  0553  3000               	movlw	0
   782  0554  00F3               	movwf	?___fttol+3
   783  0555  3000               	movlw	0
   784  0556  00F2               	movwf	?___fttol+2
   785  0557  3000               	movlw	0
   786  0558  00F1               	movwf	?___fttol+1
   787  0559  3000               	movlw	0
   788  055A  00F0               	movwf	?___fttol
   789  055B  0008               	return
   790  055C                     l1021:	
   791  055C  3001               	movlw	1
   792  055D                     u1225:	
   793  055D  1003               	clrc
   794  055E  0CFC               	rrf	___fttol@lval+3,f
   795  055F  0CFB               	rrf	___fttol@lval+2,f
   796  0560  0CFA               	rrf	___fttol@lval+1,f
   797  0561  0CF9               	rrf	___fttol@lval,f
   798  0562  3EFF               	addlw	-1
   799  0563  1D03               	skipz
   800  0564  2D5D               	goto	u1225
   801  0565  3001               	movlw	1
   802  0566  00F4               	movwf	??___fttol
   803  0567  0874               	movf	??___fttol,w
   804  0568  07FD               	addwf	___fttol@exp1,f
   805  0569  1903               	btfsc	3,2
   806  056A  2D87               	goto	l1031
   807  056B  2D5C               	goto	l1021
   808  056C                     l1023:	
   809  056C  3018               	movlw	24
   810  056D  027D               	subwf	___fttol@exp1,w
   811  056E  1C03               	skipc
   812  056F  2D84               	goto	l373
   813  0570  3000               	movlw	0
   814  0571  00F3               	movwf	?___fttol+3
   815  0572  3000               	movlw	0
   816  0573  00F2               	movwf	?___fttol+2
   817  0574  3000               	movlw	0
   818  0575  00F1               	movwf	?___fttol+1
   819  0576  3000               	movlw	0
   820  0577  00F0               	movwf	?___fttol
   821  0578  0008               	return
   822  0579                     l1029:	
   823  0579  3001               	movlw	1
   824  057A  00F4               	movwf	??___fttol
   825  057B                     u1255:	
   826  057B  1003               	clrc
   827  057C  0DF9               	rlf	___fttol@lval,f
   828  057D  0DFA               	rlf	___fttol@lval+1,f
   829  057E  0DFB               	rlf	___fttol@lval+2,f
   830  057F  0DFC               	rlf	___fttol@lval+3,f
   831  0580  0BF4               	decfsz	??___fttol,f
   832  0581  2D7B               	goto	u1255
   833  0582  3001               	movlw	1
   834  0583  02FD               	subwf	___fttol@exp1,f
   835  0584                     l373:	
   836  0584  087D               	movf	___fttol@exp1,w
   837  0585  1D03               	btfss	3,2
   838  0586  2D79               	goto	l1029
   839  0587                     l1031:	
   840  0587  0878               	movf	___fttol@sign1,w
   841  0588  1903               	btfsc	3,2
   842  0589  2D95               	goto	l1035
   843  058A  09F9               	comf	___fttol@lval,f
   844  058B  09FA               	comf	___fttol@lval+1,f
   845  058C  09FB               	comf	___fttol@lval+2,f
   846  058D  09FC               	comf	___fttol@lval+3,f
   847  058E  0AF9               	incf	___fttol@lval,f
   848  058F  1903               	skipnz
   849  0590  0AFA               	incf	___fttol@lval+1,f
   850  0591  1903               	skipnz
   851  0592  0AFB               	incf	___fttol@lval+2,f
   852  0593  1903               	skipnz
   853  0594  0AFC               	incf	___fttol@lval+3,f
   854  0595                     l1035:	
   855  0595  087C               	movf	___fttol@lval+3,w
   856  0596  00F3               	movwf	?___fttol+3
   857  0597  087B               	movf	___fttol@lval+2,w
   858  0598  00F2               	movwf	?___fttol+2
   859  0599  087A               	movf	___fttol@lval+1,w
   860  059A  00F1               	movwf	?___fttol+1
   861  059B  0879               	movf	___fttol@lval,w
   862  059C  00F0               	movwf	?___fttol
   863  059D  0008               	return
   864  059E                     __end_of___fttol:	
   865                           
   866                           	psect	text3
   867  0722                     __ptext3:	
   868 ;; *************** function ___ftmul *****************
   869 ;; Defined at:
   870 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  f1              3    8[COMMON] float 
   873 ;;  f2              3   11[COMMON] float 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
   876 ;;  sign            1    9[BANK0 ] unsigned char 
   877 ;;  cntr            1    8[BANK0 ] unsigned char 
   878 ;;  exp             1    4[BANK0 ] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  3    8[COMMON] float 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         6       0       0       0       0
   889 ;;      Locals:         0       6       0       0       0
   890 ;;      Temps:          0       4       0       0       0
   891 ;;      Totals:         6      10       0       0       0
   892 ;;Total ram usage:       16 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		___ftpack
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function ___ftmul
   904  0722                     ___ftmul:	
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   908  0722  0878               	movf	___ftmul@f1,w
   909  0723  1283               	bcf	3,5	;RP0=0, select bank0
   910  0724  1303               	bcf	3,6	;RP1=0, select bank0
   911  0725  00A0               	movwf	??___ftmul
   912  0726  0879               	movf	___ftmul@f1+1,w
   913  0727  00A1               	movwf	??___ftmul+1
   914  0728  087A               	movf	___ftmul@f1+2,w
   915  0729  00A2               	movwf	??___ftmul+2
   916  072A  1003               	clrc
   917  072B  0D21               	rlf	??___ftmul+1,w
   918  072C  0D22               	rlf	??___ftmul+2,w
   919  072D  00A3               	movwf	??___ftmul+3
   920  072E  0823               	movf	??___ftmul+3,w
   921  072F  00A4               	movwf	___ftmul@exp
   922  0730  0824               	movf	___ftmul@exp,w
   923  0731  1D03               	btfss	3,2
   924  0732  2F3A               	goto	l953
   925  0733  3000               	movlw	0
   926  0734  00F8               	movwf	?___ftmul
   927  0735  3000               	movlw	0
   928  0736  00F9               	movwf	?___ftmul+1
   929  0737  3000               	movlw	0
   930  0738  00FA               	movwf	?___ftmul+2
   931  0739  0008               	return
   932  073A                     l953:	
   933  073A  087B               	movf	___ftmul@f2,w
   934  073B  00A0               	movwf	??___ftmul
   935  073C  087C               	movf	___ftmul@f2+1,w
   936  073D  00A1               	movwf	??___ftmul+1
   937  073E  087D               	movf	___ftmul@f2+2,w
   938  073F  00A2               	movwf	??___ftmul+2
   939  0740  1003               	clrc
   940  0741  0D21               	rlf	??___ftmul+1,w
   941  0742  0D22               	rlf	??___ftmul+2,w
   942  0743  00A3               	movwf	??___ftmul+3
   943  0744  0823               	movf	??___ftmul+3,w
   944  0745  00A9               	movwf	___ftmul@sign
   945  0746  0829               	movf	___ftmul@sign,w
   946  0747  1D03               	btfss	3,2
   947  0748  2F50               	goto	l959
   948  0749  3000               	movlw	0
   949  074A  00F8               	movwf	?___ftmul
   950  074B  3000               	movlw	0
   951  074C  00F9               	movwf	?___ftmul+1
   952  074D  3000               	movlw	0
   953  074E  00FA               	movwf	?___ftmul+2
   954  074F  0008               	return
   955  0750                     l959:	
   956  0750  0829               	movf	___ftmul@sign,w
   957  0751  3E7B               	addlw	123
   958  0752  00A0               	movwf	??___ftmul
   959  0753  0820               	movf	??___ftmul,w
   960  0754  07A4               	addwf	___ftmul@exp,f
   961  0755  0878               	movf	___ftmul@f1,w
   962  0756  00A0               	movwf	??___ftmul
   963  0757  0879               	movf	___ftmul@f1+1,w
   964  0758  00A1               	movwf	??___ftmul+1
   965  0759  087A               	movf	___ftmul@f1+2,w
   966  075A  00A2               	movwf	??___ftmul+2
   967  075B  3010               	movlw	16
   968  075C                     u1065:	
   969  075C  1003               	clrc
   970  075D  0CA2               	rrf	??___ftmul+2,f
   971  075E  0CA1               	rrf	??___ftmul+1,f
   972  075F  0CA0               	rrf	??___ftmul,f
   973  0760  3EFF               	addlw	-1
   974  0761  1D03               	skipz
   975  0762  2F5C               	goto	u1065
   976  0763  0820               	movf	??___ftmul,w
   977  0764  00A3               	movwf	??___ftmul+3
   978  0765  0823               	movf	??___ftmul+3,w
   979  0766  00A9               	movwf	___ftmul@sign
   980  0767  087B               	movf	___ftmul@f2,w
   981  0768  00A0               	movwf	??___ftmul
   982  0769  087C               	movf	___ftmul@f2+1,w
   983  076A  00A1               	movwf	??___ftmul+1
   984  076B  087D               	movf	___ftmul@f2+2,w
   985  076C  00A2               	movwf	??___ftmul+2
   986  076D  3010               	movlw	16
   987  076E                     u1075:	
   988  076E  1003               	clrc
   989  076F  0CA2               	rrf	??___ftmul+2,f
   990  0770  0CA1               	rrf	??___ftmul+1,f
   991  0771  0CA0               	rrf	??___ftmul,f
   992  0772  3EFF               	addlw	-1
   993  0773  1D03               	skipz
   994  0774  2F6E               	goto	u1075
   995  0775  0820               	movf	??___ftmul,w
   996  0776  00A3               	movwf	??___ftmul+3
   997  0777  0823               	movf	??___ftmul+3,w
   998  0778  06A9               	xorwf	___ftmul@sign,f
   999  0779  3080               	movlw	128
  1000  077A  00A0               	movwf	??___ftmul
  1001  077B  0820               	movf	??___ftmul,w
  1002  077C  05A9               	andwf	___ftmul@sign,f
  1003  077D  17F9               	bsf	___ftmul@f1+1,7
  1004  077E  17FC               	bsf	___ftmul@f2+1,7
  1005  077F  30FF               	movlw	255
  1006  0780  05FB               	andwf	___ftmul@f2,f
  1007  0781  30FF               	movlw	255
  1008  0782  05FC               	andwf	___ftmul@f2+1,f
  1009  0783  3000               	movlw	0
  1010  0784  05FD               	andwf	___ftmul@f2+2,f
  1011  0785  3000               	movlw	0
  1012  0786  00A5               	movwf	___ftmul@f3_as_product
  1013  0787  3000               	movlw	0
  1014  0788  00A6               	movwf	___ftmul@f3_as_product+1
  1015  0789  3000               	movlw	0
  1016  078A  00A7               	movwf	___ftmul@f3_as_product+2
  1017  078B  3007               	movlw	7
  1018  078C  00A0               	movwf	??___ftmul
  1019  078D  0820               	movf	??___ftmul,w
  1020  078E  00A8               	movwf	___ftmul@cntr
  1021  078F                     l971:	
  1022  078F  1C78               	btfss	___ftmul@f1,0
  1023  0790  2F9F               	goto	l975
  1024  0791  087B               	movf	___ftmul@f2,w
  1025  0792  07A5               	addwf	___ftmul@f3_as_product,f
  1026  0793  087C               	movf	___ftmul@f2+1,w
  1027  0794  1103               	clrz
  1028  0795  1803               	skipnc
  1029  0796  0A7C               	incf	___ftmul@f2+1,w
  1030  0797  1D03               	btfss	3,2
  1031  0798  07A6               	addwf	___ftmul@f3_as_product+1,f
  1032  0799  087D               	movf	___ftmul@f2+2,w
  1033  079A  1103               	clrz
  1034  079B  1803               	skipnc
  1035  079C  0A7D               	incf	___ftmul@f2+2,w
  1036  079D  1D03               	btfss	3,2
  1037  079E  07A7               	addwf	___ftmul@f3_as_product+2,f
  1038  079F                     l975:	
  1039  079F  3001               	movlw	1
  1040  07A0                     u1105:	
  1041  07A0  1003               	clrc
  1042  07A1  0CFA               	rrf	___ftmul@f1+2,f
  1043  07A2  0CF9               	rrf	___ftmul@f1+1,f
  1044  07A3  0CF8               	rrf	___ftmul@f1,f
  1045  07A4  3EFF               	addlw	-1
  1046  07A5  1D03               	skipz
  1047  07A6  2FA0               	goto	u1105
  1048  07A7  3001               	movlw	1
  1049  07A8                     u1115:	
  1050  07A8  1003               	clrc
  1051  07A9  0DFB               	rlf	___ftmul@f2,f
  1052  07AA  0DFC               	rlf	___ftmul@f2+1,f
  1053  07AB  0DFD               	rlf	___ftmul@f2+2,f
  1054  07AC  3EFF               	addlw	-1
  1055  07AD  1D03               	skipz
  1056  07AE  2FA8               	goto	u1115
  1057  07AF  3001               	movlw	1
  1058  07B0  02A8               	subwf	___ftmul@cntr,f
  1059  07B1  1D03               	btfss	3,2
  1060  07B2  2F8F               	goto	l971
  1061  07B3  3009               	movlw	9
  1062  07B4  00A0               	movwf	??___ftmul
  1063  07B5  0820               	movf	??___ftmul,w
  1064  07B6  00A8               	movwf	___ftmul@cntr
  1065  07B7                     l983:	
  1066  07B7  1C78               	btfss	___ftmul@f1,0
  1067  07B8  2FC7               	goto	l987
  1068  07B9  087B               	movf	___ftmul@f2,w
  1069  07BA  07A5               	addwf	___ftmul@f3_as_product,f
  1070  07BB  087C               	movf	___ftmul@f2+1,w
  1071  07BC  1103               	clrz
  1072  07BD  1803               	skipnc
  1073  07BE  0A7C               	incf	___ftmul@f2+1,w
  1074  07BF  1D03               	btfss	3,2
  1075  07C0  07A6               	addwf	___ftmul@f3_as_product+1,f
  1076  07C1  087D               	movf	___ftmul@f2+2,w
  1077  07C2  1103               	clrz
  1078  07C3  1803               	skipnc
  1079  07C4  0A7D               	incf	___ftmul@f2+2,w
  1080  07C5  1D03               	btfss	3,2
  1081  07C6  07A7               	addwf	___ftmul@f3_as_product+2,f
  1082  07C7                     l987:	
  1083  07C7  3001               	movlw	1
  1084  07C8                     u1155:	
  1085  07C8  1003               	clrc
  1086  07C9  0CFA               	rrf	___ftmul@f1+2,f
  1087  07CA  0CF9               	rrf	___ftmul@f1+1,f
  1088  07CB  0CF8               	rrf	___ftmul@f1,f
  1089  07CC  3EFF               	addlw	-1
  1090  07CD  1D03               	skipz
  1091  07CE  2FC8               	goto	u1155
  1092  07CF  3001               	movlw	1
  1093  07D0                     u1165:	
  1094  07D0  1003               	clrc
  1095  07D1  0CA7               	rrf	___ftmul@f3_as_product+2,f
  1096  07D2  0CA6               	rrf	___ftmul@f3_as_product+1,f
  1097  07D3  0CA5               	rrf	___ftmul@f3_as_product,f
  1098  07D4  3EFF               	addlw	-1
  1099  07D5  1D03               	skipz
  1100  07D6  2FD0               	goto	u1165
  1101  07D7  3001               	movlw	1
  1102  07D8  02A8               	subwf	___ftmul@cntr,f
  1103  07D9  1D03               	btfss	3,2
  1104  07DA  2FB7               	goto	l983
  1105  07DB  0825               	movf	___ftmul@f3_as_product,w
  1106  07DC  00F0               	movwf	___ftpack@arg
  1107  07DD  0826               	movf	___ftmul@f3_as_product+1,w
  1108  07DE  00F1               	movwf	___ftpack@arg+1
  1109  07DF  0827               	movf	___ftmul@f3_as_product+2,w
  1110  07E0  00F2               	movwf	___ftpack@arg+2
  1111  07E1  0824               	movf	___ftmul@exp,w
  1112  07E2  00A0               	movwf	??___ftmul
  1113  07E3  0820               	movf	??___ftmul,w
  1114  07E4  00F3               	movwf	___ftpack@exp
  1115  07E5  0829               	movf	___ftmul@sign,w
  1116  07E6  00A1               	movwf	??___ftmul+1
  1117  07E7  0821               	movf	??___ftmul+1,w
  1118  07E8  00F4               	movwf	___ftpack@sign
  1119  07E9  120A  118A  24A6   	fcall	___ftpack
  1120  07EC  0870               	movf	?___ftpack,w
  1121  07ED  00F8               	movwf	?___ftmul
  1122  07EE  0871               	movf	?___ftpack+1,w
  1123  07EF  00F9               	movwf	?___ftmul+1
  1124  07F0  0872               	movf	?___ftpack+2,w
  1125  07F1  00FA               	movwf	?___ftmul+2
  1126  07F2  0008               	return
  1127  07F3                     __end_of___ftmul:	
  1128                           
  1129                           	psect	text4
  1130  059E                     __ptext4:	
  1131 ;; *************** function ___ftdiv *****************
  1132 ;; Defined at:
  1133 ;;		line 56 in file "D:\mplab\sources\common\ftdiv.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  f2              3   10[BANK0 ] float 
  1136 ;;  f1              3   13[BANK0 ] float 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  f3              3   21[BANK0 ] float 
  1139 ;;  sign            1   25[BANK0 ] unsigned char 
  1140 ;;  exp             1   24[BANK0 ] unsigned char 
  1141 ;;  cntr            1   20[BANK0 ] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  3   10[BANK0 ] float 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, pclath, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         0       6       0       0       0
  1152 ;;      Locals:         0       6       0       0       0
  1153 ;;      Temps:          0       4       0       0       0
  1154 ;;      Totals:         0      16       0       0       0
  1155 ;;Total ram usage:       16 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    1
  1158 ;; This function calls:
  1159 ;;		___ftpack
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function ___ftdiv
  1167  059E                     ___ftdiv:	
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1171  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1172  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1173  05A0  082D               	movf	___ftdiv@f1,w
  1174  05A1  00B0               	movwf	??___ftdiv
  1175  05A2  082E               	movf	___ftdiv@f1+1,w
  1176  05A3  00B1               	movwf	??___ftdiv+1
  1177  05A4  082F               	movf	___ftdiv@f1+2,w
  1178  05A5  00B2               	movwf	??___ftdiv+2
  1179  05A6  1003               	clrc
  1180  05A7  0D31               	rlf	??___ftdiv+1,w
  1181  05A8  0D32               	rlf	??___ftdiv+2,w
  1182  05A9  00B3               	movwf	??___ftdiv+3
  1183  05AA  0833               	movf	??___ftdiv+3,w
  1184  05AB  00B8               	movwf	___ftdiv@exp
  1185  05AC  0838               	movf	___ftdiv@exp,w
  1186  05AD  1D03               	btfss	3,2
  1187  05AE  2DB6               	goto	l911
  1188  05AF  3000               	movlw	0
  1189  05B0  00AA               	movwf	?___ftdiv
  1190  05B1  3000               	movlw	0
  1191  05B2  00AB               	movwf	?___ftdiv+1
  1192  05B3  3000               	movlw	0
  1193  05B4  00AC               	movwf	?___ftdiv+2
  1194  05B5  0008               	return
  1195  05B6                     l911:	
  1196  05B6  082A               	movf	___ftdiv@f2,w
  1197  05B7  00B0               	movwf	??___ftdiv
  1198  05B8  082B               	movf	___ftdiv@f2+1,w
  1199  05B9  00B1               	movwf	??___ftdiv+1
  1200  05BA  082C               	movf	___ftdiv@f2+2,w
  1201  05BB  00B2               	movwf	??___ftdiv+2
  1202  05BC  1003               	clrc
  1203  05BD  0D31               	rlf	??___ftdiv+1,w
  1204  05BE  0D32               	rlf	??___ftdiv+2,w
  1205  05BF  00B3               	movwf	??___ftdiv+3
  1206  05C0  0833               	movf	??___ftdiv+3,w
  1207  05C1  00B9               	movwf	___ftdiv@sign
  1208  05C2  0839               	movf	___ftdiv@sign,w
  1209  05C3  1D03               	btfss	3,2
  1210  05C4  2DCC               	goto	l917
  1211  05C5  3000               	movlw	0
  1212  05C6  00AA               	movwf	?___ftdiv
  1213  05C7  3000               	movlw	0
  1214  05C8  00AB               	movwf	?___ftdiv+1
  1215  05C9  3000               	movlw	0
  1216  05CA  00AC               	movwf	?___ftdiv+2
  1217  05CB  0008               	return
  1218  05CC                     l917:	
  1219  05CC  3000               	movlw	0
  1220  05CD  00B5               	movwf	___ftdiv@f3
  1221  05CE  3000               	movlw	0
  1222  05CF  00B6               	movwf	___ftdiv@f3+1
  1223  05D0  3000               	movlw	0
  1224  05D1  00B7               	movwf	___ftdiv@f3+2
  1225  05D2  3089               	movlw	137
  1226  05D3  0739               	addwf	___ftdiv@sign,w
  1227  05D4  00B0               	movwf	??___ftdiv
  1228  05D5  0830               	movf	??___ftdiv,w
  1229  05D6  02B8               	subwf	___ftdiv@exp,f
  1230  05D7  082D               	movf	___ftdiv@f1,w
  1231  05D8  00B0               	movwf	??___ftdiv
  1232  05D9  082E               	movf	___ftdiv@f1+1,w
  1233  05DA  00B1               	movwf	??___ftdiv+1
  1234  05DB  082F               	movf	___ftdiv@f1+2,w
  1235  05DC  00B2               	movwf	??___ftdiv+2
  1236  05DD  3010               	movlw	16
  1237  05DE                     u985:	
  1238  05DE  1003               	clrc
  1239  05DF  0CB2               	rrf	??___ftdiv+2,f
  1240  05E0  0CB1               	rrf	??___ftdiv+1,f
  1241  05E1  0CB0               	rrf	??___ftdiv,f
  1242  05E2  3EFF               	addlw	-1
  1243  05E3  1D03               	skipz
  1244  05E4  2DDE               	goto	u985
  1245  05E5  0830               	movf	??___ftdiv,w
  1246  05E6  00B3               	movwf	??___ftdiv+3
  1247  05E7  0833               	movf	??___ftdiv+3,w
  1248  05E8  00B9               	movwf	___ftdiv@sign
  1249  05E9  082A               	movf	___ftdiv@f2,w
  1250  05EA  00B0               	movwf	??___ftdiv
  1251  05EB  082B               	movf	___ftdiv@f2+1,w
  1252  05EC  00B1               	movwf	??___ftdiv+1
  1253  05ED  082C               	movf	___ftdiv@f2+2,w
  1254  05EE  00B2               	movwf	??___ftdiv+2
  1255  05EF  3010               	movlw	16
  1256  05F0                     u995:	
  1257  05F0  1003               	clrc
  1258  05F1  0CB2               	rrf	??___ftdiv+2,f
  1259  05F2  0CB1               	rrf	??___ftdiv+1,f
  1260  05F3  0CB0               	rrf	??___ftdiv,f
  1261  05F4  3EFF               	addlw	-1
  1262  05F5  1D03               	skipz
  1263  05F6  2DF0               	goto	u995
  1264  05F7  0830               	movf	??___ftdiv,w
  1265  05F8  00B3               	movwf	??___ftdiv+3
  1266  05F9  0833               	movf	??___ftdiv+3,w
  1267  05FA  06B9               	xorwf	___ftdiv@sign,f
  1268  05FB  3080               	movlw	128
  1269  05FC  00B0               	movwf	??___ftdiv
  1270  05FD  0830               	movf	??___ftdiv,w
  1271  05FE  05B9               	andwf	___ftdiv@sign,f
  1272  05FF  17AE               	bsf	___ftdiv@f1+1,7
  1273  0600  30FF               	movlw	255
  1274  0601  05AD               	andwf	___ftdiv@f1,f
  1275  0602  30FF               	movlw	255
  1276  0603  05AE               	andwf	___ftdiv@f1+1,f
  1277  0604  3000               	movlw	0
  1278  0605  05AF               	andwf	___ftdiv@f1+2,f
  1279  0606  17AB               	bsf	___ftdiv@f2+1,7
  1280  0607  30FF               	movlw	255
  1281  0608  05AA               	andwf	___ftdiv@f2,f
  1282  0609  30FF               	movlw	255
  1283  060A  05AB               	andwf	___ftdiv@f2+1,f
  1284  060B  3000               	movlw	0
  1285  060C  05AC               	andwf	___ftdiv@f2+2,f
  1286  060D  3018               	movlw	24
  1287  060E  00B0               	movwf	??___ftdiv
  1288  060F  0830               	movf	??___ftdiv,w
  1289  0610  00B4               	movwf	___ftdiv@cntr
  1290  0611                     l931:	
  1291  0611  3001               	movlw	1
  1292  0612                     u1005:	
  1293  0612  1003               	clrc
  1294  0613  0DB5               	rlf	___ftdiv@f3,f
  1295  0614  0DB6               	rlf	___ftdiv@f3+1,f
  1296  0615  0DB7               	rlf	___ftdiv@f3+2,f
  1297  0616  3EFF               	addlw	-1
  1298  0617  1D03               	skipz
  1299  0618  2E12               	goto	u1005
  1300  0619  082C               	movf	___ftdiv@f2+2,w
  1301  061A  022F               	subwf	___ftdiv@f1+2,w
  1302  061B  1D03               	skipz
  1303  061C  2E23               	goto	u1015
  1304  061D  082B               	movf	___ftdiv@f2+1,w
  1305  061E  022E               	subwf	___ftdiv@f1+1,w
  1306  061F  1D03               	skipz
  1307  0620  2E23               	goto	u1015
  1308  0621  082A               	movf	___ftdiv@f2,w
  1309  0622  022D               	subwf	___ftdiv@f1,w
  1310  0623                     u1015:	
  1311  0623  1C03               	skipc
  1312  0624  2E30               	goto	l939
  1313  0625  082A               	movf	___ftdiv@f2,w
  1314  0626  02AD               	subwf	___ftdiv@f1,f
  1315  0627  082B               	movf	___ftdiv@f2+1,w
  1316  0628  1C03               	skipc
  1317  0629  0F2B               	incfsz	___ftdiv@f2+1,w
  1318  062A  02AE               	subwf	___ftdiv@f1+1,f
  1319  062B  082C               	movf	___ftdiv@f2+2,w
  1320  062C  1C03               	skipc
  1321  062D  0A2C               	incf	___ftdiv@f2+2,w
  1322  062E  02AF               	subwf	___ftdiv@f1+2,f
  1323  062F  1435               	bsf	___ftdiv@f3,0
  1324  0630                     l939:	
  1325  0630  3001               	movlw	1
  1326  0631                     u1025:	
  1327  0631  1003               	clrc
  1328  0632  0DAD               	rlf	___ftdiv@f1,f
  1329  0633  0DAE               	rlf	___ftdiv@f1+1,f
  1330  0634  0DAF               	rlf	___ftdiv@f1+2,f
  1331  0635  3EFF               	addlw	-1
  1332  0636  1D03               	skipz
  1333  0637  2E31               	goto	u1025
  1334  0638  3001               	movlw	1
  1335  0639  02B4               	subwf	___ftdiv@cntr,f
  1336  063A  1D03               	btfss	3,2
  1337  063B  2E11               	goto	l931
  1338  063C  0835               	movf	___ftdiv@f3,w
  1339  063D  00F0               	movwf	___ftpack@arg
  1340  063E  0836               	movf	___ftdiv@f3+1,w
  1341  063F  00F1               	movwf	___ftpack@arg+1
  1342  0640  0837               	movf	___ftdiv@f3+2,w
  1343  0641  00F2               	movwf	___ftpack@arg+2
  1344  0642  0838               	movf	___ftdiv@exp,w
  1345  0643  00B0               	movwf	??___ftdiv
  1346  0644  0830               	movf	??___ftdiv,w
  1347  0645  00F3               	movwf	___ftpack@exp
  1348  0646  0839               	movf	___ftdiv@sign,w
  1349  0647  00B1               	movwf	??___ftdiv+1
  1350  0648  0831               	movf	??___ftdiv+1,w
  1351  0649  00F4               	movwf	___ftpack@sign
  1352  064A  120A  118A  24A6   	fcall	___ftpack
  1353  064D  0870               	movf	?___ftpack,w
  1354  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1355  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0650  00AA               	movwf	?___ftdiv
  1357  0651  0871               	movf	?___ftpack+1,w
  1358  0652  00AB               	movwf	?___ftdiv+1
  1359  0653  0872               	movf	?___ftpack+2,w
  1360  0654  00AC               	movwf	?___ftdiv+2
  1361  0655  0008               	return
  1362  0656                     __end_of___ftdiv:	
  1363                           
  1364                           	psect	text5
  1365  04A6                     __ptext5:	
  1366 ;; *************** function ___ftpack *****************
  1367 ;; Defined at:
  1368 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  arg             3    0[COMMON] unsigned um
  1371 ;;  exp             1    3[COMMON] unsigned char 
  1372 ;;  sign            1    4[COMMON] unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  3    0[COMMON] float 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         5       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0
  1386 ;;      Temps:          3       0       0       0       0
  1387 ;;      Totals:         8       0       0       0       0
  1388 ;;Total ram usage:        8 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		___ftdiv
  1394 ;;		___ftmul
  1395 ;;		___lwtoft
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function ___ftpack
  1401  04A6                     ___ftpack:	
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1405  04A6  0873               	movf	___ftpack@exp,w
  1406  04A7  1903               	btfsc	3,2
  1407  04A8  2CAE               	goto	l795
  1408  04A9  0872               	movf	___ftpack@arg+2,w
  1409  04AA  0471               	iorwf	___ftpack@arg+1,w
  1410  04AB  0470               	iorwf	___ftpack@arg,w
  1411  04AC  1D03               	skipz
  1412  04AD  2CC1               	goto	l801
  1413  04AE                     l795:	
  1414  04AE  3000               	movlw	0
  1415  04AF  00F0               	movwf	?___ftpack
  1416  04B0  3000               	movlw	0
  1417  04B1  00F1               	movwf	?___ftpack+1
  1418  04B2  3000               	movlw	0
  1419  04B3  00F2               	movwf	?___ftpack+2
  1420  04B4  0008               	return
  1421  04B5                     l799:	
  1422  04B5  3001               	movlw	1
  1423  04B6  00F5               	movwf	??___ftpack
  1424  04B7  0875               	movf	??___ftpack,w
  1425  04B8  07F3               	addwf	___ftpack@exp,f
  1426  04B9  3001               	movlw	1
  1427  04BA                     u675:	
  1428  04BA  1003               	clrc
  1429  04BB  0CF2               	rrf	___ftpack@arg+2,f
  1430  04BC  0CF1               	rrf	___ftpack@arg+1,f
  1431  04BD  0CF0               	rrf	___ftpack@arg,f
  1432  04BE  3EFF               	addlw	-1
  1433  04BF  1D03               	skipz
  1434  04C0  2CBA               	goto	u675
  1435  04C1                     l801:	
  1436  04C1  30FE               	movlw	254
  1437  04C2  0572               	andwf	___ftpack@arg+2,w
  1438  04C3  1903               	btfsc	3,2
  1439  04C4  2CDC               	goto	l282
  1440  04C5  2CB5               	goto	l799
  1441  04C6                     l803:	
  1442  04C6  3001               	movlw	1
  1443  04C7  00F5               	movwf	??___ftpack
  1444  04C8  0875               	movf	??___ftpack,w
  1445  04C9  07F3               	addwf	___ftpack@exp,f
  1446  04CA  3001               	movlw	1
  1447  04CB  07F0               	addwf	___ftpack@arg,f
  1448  04CC  3000               	movlw	0
  1449  04CD  1803               	skipnc
  1450  04CE  3001               	movlw	1
  1451  04CF  07F1               	addwf	___ftpack@arg+1,f
  1452  04D0  3000               	movlw	0
  1453  04D1  1803               	skipnc
  1454  04D2  3001               	movlw	1
  1455  04D3  07F2               	addwf	___ftpack@arg+2,f
  1456  04D4  3001               	movlw	1
  1457  04D5                     u695:	
  1458  04D5  1003               	clrc
  1459  04D6  0CF2               	rrf	___ftpack@arg+2,f
  1460  04D7  0CF1               	rrf	___ftpack@arg+1,f
  1461  04D8  0CF0               	rrf	___ftpack@arg,f
  1462  04D9  3EFF               	addlw	-1
  1463  04DA  1D03               	skipz
  1464  04DB  2CD5               	goto	u695
  1465  04DC                     l282:	
  1466  04DC  30FF               	movlw	255
  1467  04DD  0572               	andwf	___ftpack@arg+2,w
  1468  04DE  1903               	btfsc	3,2
  1469  04DF  2CEB               	goto	l811
  1470  04E0  2CC6               	goto	l803
  1471  04E1                     l809:	
  1472  04E1  3001               	movlw	1
  1473  04E2  02F3               	subwf	___ftpack@exp,f
  1474  04E3  3001               	movlw	1
  1475  04E4                     u715:	
  1476  04E4  1003               	clrc
  1477  04E5  0DF0               	rlf	___ftpack@arg,f
  1478  04E6  0DF1               	rlf	___ftpack@arg+1,f
  1479  04E7  0DF2               	rlf	___ftpack@arg+2,f
  1480  04E8  3EFF               	addlw	-1
  1481  04E9  1D03               	skipz
  1482  04EA  2CE4               	goto	u715
  1483  04EB                     l811:	
  1484  04EB  1BF1               	btfsc	___ftpack@arg+1,7
  1485  04EC  2CF1               	goto	l289
  1486  04ED  3002               	movlw	2
  1487  04EE  0273               	subwf	___ftpack@exp,w
  1488  04EF  1803               	skipnc
  1489  04F0  2CE1               	goto	l809
  1490  04F1                     l289:	
  1491  04F1  1873               	btfsc	___ftpack@exp,0
  1492  04F2  2CF9               	goto	l290
  1493  04F3  30FF               	movlw	255
  1494  04F4  05F0               	andwf	___ftpack@arg,f
  1495  04F5  307F               	movlw	127
  1496  04F6  05F1               	andwf	___ftpack@arg+1,f
  1497  04F7  30FF               	movlw	255
  1498  04F8  05F2               	andwf	___ftpack@arg+2,f
  1499  04F9                     l290:	
  1500  04F9  1003               	clrc
  1501  04FA  0CF3               	rrf	___ftpack@exp,f
  1502  04FB  0873               	movf	___ftpack@exp,w
  1503  04FC  00F5               	movwf	??___ftpack
  1504  04FD  01F6               	clrf	??___ftpack+1
  1505  04FE  01F7               	clrf	??___ftpack+2
  1506  04FF  3010               	movlw	16
  1507  0500                     u755:	
  1508  0500  1003               	clrc
  1509  0501  0DF5               	rlf	??___ftpack,f
  1510  0502  0DF6               	rlf	??___ftpack+1,f
  1511  0503  0DF7               	rlf	??___ftpack+2,f
  1512  0504  3EFF               	addlw	-1
  1513  0505  1D03               	skipz
  1514  0506  2D00               	goto	u755
  1515  0507  0875               	movf	??___ftpack,w
  1516  0508  04F0               	iorwf	___ftpack@arg,f
  1517  0509  0876               	movf	??___ftpack+1,w
  1518  050A  04F1               	iorwf	___ftpack@arg+1,f
  1519  050B  0877               	movf	??___ftpack+2,w
  1520  050C  04F2               	iorwf	___ftpack@arg+2,f
  1521  050D  0874               	movf	___ftpack@sign,w
  1522  050E  1903               	btfsc	3,2
  1523  050F  0008               	return
  1524  0510  17F2               	bsf	___ftpack@arg+2,7
  1525  0511  0008               	return
  1526  0512                     __end_of___ftpack:	
  1527                           
  1528                           	psect	text6
  1529  0402                     __ptext6:	
  1530 ;; *************** function ___awmod *****************
  1531 ;; Defined at:
  1532 ;;		line 6 in file "D:\mplab\sources\common\awmod.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  divisor         2    0[COMMON] int 
  1535 ;;  dividend        2    2[COMMON] int 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  sign            1    6[COMMON] unsigned char 
  1538 ;;  counter         1    5[COMMON] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  2    0[COMMON] int 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         4       0       0       0       0
  1549 ;;      Locals:         2       0       0       0       0
  1550 ;;      Temps:          1       0       0       0       0
  1551 ;;      Totals:         7       0       0       0       0
  1552 ;;Total ram usage:        7 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function ___awmod
  1563  0402                     ___awmod:	
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1567  0402  01F6               	clrf	___awmod@sign
  1568  0403  1FF3               	btfss	___awmod@dividend+1,7
  1569  0404  2C0C               	goto	l875
  1570  0405  09F2               	comf	___awmod@dividend,f
  1571  0406  09F3               	comf	___awmod@dividend+1,f
  1572  0407  0AF2               	incf	___awmod@dividend,f
  1573  0408  1903               	skipnz
  1574  0409  0AF3               	incf	___awmod@dividend+1,f
  1575  040A  01F6               	clrf	___awmod@sign
  1576  040B  0AF6               	incf	___awmod@sign,f
  1577  040C                     l875:	
  1578  040C  1FF1               	btfss	___awmod@divisor+1,7
  1579  040D  2C13               	goto	l879
  1580  040E  09F0               	comf	___awmod@divisor,f
  1581  040F  09F1               	comf	___awmod@divisor+1,f
  1582  0410  0AF0               	incf	___awmod@divisor,f
  1583  0411  1903               	skipnz
  1584  0412  0AF1               	incf	___awmod@divisor+1,f
  1585  0413                     l879:	
  1586  0413  0870               	movf	___awmod@divisor,w
  1587  0414  0471               	iorwf	___awmod@divisor+1,w
  1588  0415  1903               	btfsc	3,2
  1589  0416  2C40               	goto	l897
  1590  0417  01F5               	clrf	___awmod@counter
  1591  0418  0AF5               	incf	___awmod@counter,f
  1592  0419                     l887:	
  1593  0419  1BF1               	btfsc	___awmod@divisor+1,7
  1594  041A  2C27               	goto	l889
  1595  041B  3001               	movlw	1
  1596  041C                     u905:	
  1597  041C  1003               	clrc
  1598  041D  0DF0               	rlf	___awmod@divisor,f
  1599  041E  0DF1               	rlf	___awmod@divisor+1,f
  1600  041F  3EFF               	addlw	-1
  1601  0420  1D03               	skipz
  1602  0421  2C1C               	goto	u905
  1603  0422  3001               	movlw	1
  1604  0423  00F4               	movwf	??___awmod
  1605  0424  0874               	movf	??___awmod,w
  1606  0425  07F5               	addwf	___awmod@counter,f
  1607  0426  2C19               	goto	l887
  1608  0427                     l889:	
  1609  0427  0871               	movf	___awmod@divisor+1,w
  1610  0428  0273               	subwf	___awmod@dividend+1,w
  1611  0429  1D03               	skipz
  1612  042A  2C2D               	goto	u925
  1613  042B  0870               	movf	___awmod@divisor,w
  1614  042C  0272               	subwf	___awmod@dividend,w
  1615  042D                     u925:	
  1616  042D  1C03               	skipc
  1617  042E  2C35               	goto	l893
  1618  042F  0870               	movf	___awmod@divisor,w
  1619  0430  02F2               	subwf	___awmod@dividend,f
  1620  0431  0871               	movf	___awmod@divisor+1,w
  1621  0432  1C03               	skipc
  1622  0433  03F3               	decf	___awmod@dividend+1,f
  1623  0434  02F3               	subwf	___awmod@dividend+1,f
  1624  0435                     l893:	
  1625  0435  3001               	movlw	1
  1626  0436                     u935:	
  1627  0436  1003               	clrc
  1628  0437  0CF1               	rrf	___awmod@divisor+1,f
  1629  0438  0CF0               	rrf	___awmod@divisor,f
  1630  0439  3EFF               	addlw	-1
  1631  043A  1D03               	skipz
  1632  043B  2C36               	goto	u935
  1633  043C  3001               	movlw	1
  1634  043D  02F5               	subwf	___awmod@counter,f
  1635  043E  1D03               	btfss	3,2
  1636  043F  2C27               	goto	l889
  1637  0440                     l897:	
  1638  0440  0876               	movf	___awmod@sign,w
  1639  0441  1903               	btfsc	3,2
  1640  0442  2C48               	goto	l901
  1641  0443  09F2               	comf	___awmod@dividend,f
  1642  0444  09F3               	comf	___awmod@dividend+1,f
  1643  0445  0AF2               	incf	___awmod@dividend,f
  1644  0446  1903               	skipnz
  1645  0447  0AF3               	incf	___awmod@dividend+1,f
  1646  0448                     l901:	
  1647  0448  0873               	movf	___awmod@dividend+1,w
  1648  0449  00F1               	movwf	?___awmod+1
  1649  044A  0872               	movf	___awmod@dividend,w
  1650  044B  00F0               	movwf	?___awmod
  1651  044C  0008               	return
  1652  044D                     __end_of___awmod:	
  1653                           
  1654                           	psect	text7
  1655  044D                     __ptext7:	
  1656 ;; *************** function ___awdiv *****************
  1657 ;; Defined at:
  1658 ;;		line 6 in file "D:\mplab\sources\common\awdiv.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  divisor         2    0[COMMON] int 
  1661 ;;  dividend        2    2[COMMON] int 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  quotient        2    7[COMMON] int 
  1664 ;;  sign            1    6[COMMON] unsigned char 
  1665 ;;  counter         1    5[COMMON] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2    0[COMMON] int 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         4       0       0       0       0
  1676 ;;      Locals:         4       0       0       0       0
  1677 ;;      Temps:          1       0       0       0       0
  1678 ;;      Totals:         9       0       0       0       0
  1679 ;;Total ram usage:        9 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function ___awdiv
  1690  044D                     ___awdiv:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1694  044D  01F6               	clrf	___awdiv@sign
  1695  044E  1FF1               	btfss	___awdiv@divisor+1,7
  1696  044F  2C57               	goto	l831
  1697  0450  09F0               	comf	___awdiv@divisor,f
  1698  0451  09F1               	comf	___awdiv@divisor+1,f
  1699  0452  0AF0               	incf	___awdiv@divisor,f
  1700  0453  1903               	skipnz
  1701  0454  0AF1               	incf	___awdiv@divisor+1,f
  1702  0455  01F6               	clrf	___awdiv@sign
  1703  0456  0AF6               	incf	___awdiv@sign,f
  1704  0457                     l831:	
  1705  0457  1FF3               	btfss	___awdiv@dividend+1,7
  1706  0458  2C62               	goto	l837
  1707  0459  09F2               	comf	___awdiv@dividend,f
  1708  045A  09F3               	comf	___awdiv@dividend+1,f
  1709  045B  0AF2               	incf	___awdiv@dividend,f
  1710  045C  1903               	skipnz
  1711  045D  0AF3               	incf	___awdiv@dividend+1,f
  1712  045E  3001               	movlw	1
  1713  045F  00F4               	movwf	??___awdiv
  1714  0460  0874               	movf	??___awdiv,w
  1715  0461  06F6               	xorwf	___awdiv@sign,f
  1716  0462                     l837:	
  1717  0462  01F7               	clrf	___awdiv@quotient
  1718  0463  01F8               	clrf	___awdiv@quotient+1
  1719  0464  0870               	movf	___awdiv@divisor,w
  1720  0465  0471               	iorwf	___awdiv@divisor+1,w
  1721  0466  1903               	btfsc	3,2
  1722  0467  2C99               	goto	l859
  1723  0468  01F5               	clrf	___awdiv@counter
  1724  0469  0AF5               	incf	___awdiv@counter,f
  1725  046A                     l847:	
  1726  046A  1BF1               	btfsc	___awdiv@divisor+1,7
  1727  046B  2C78               	goto	l849
  1728  046C  3001               	movlw	1
  1729  046D                     u805:	
  1730  046D  1003               	clrc
  1731  046E  0DF0               	rlf	___awdiv@divisor,f
  1732  046F  0DF1               	rlf	___awdiv@divisor+1,f
  1733  0470  3EFF               	addlw	-1
  1734  0471  1D03               	skipz
  1735  0472  2C6D               	goto	u805
  1736  0473  3001               	movlw	1
  1737  0474  00F4               	movwf	??___awdiv
  1738  0475  0874               	movf	??___awdiv,w
  1739  0476  07F5               	addwf	___awdiv@counter,f
  1740  0477  2C6A               	goto	l847
  1741  0478                     l849:	
  1742  0478  3001               	movlw	1
  1743  0479                     u825:	
  1744  0479  1003               	clrc
  1745  047A  0DF7               	rlf	___awdiv@quotient,f
  1746  047B  0DF8               	rlf	___awdiv@quotient+1,f
  1747  047C  3EFF               	addlw	-1
  1748  047D  1D03               	skipz
  1749  047E  2C79               	goto	u825
  1750  047F  0871               	movf	___awdiv@divisor+1,w
  1751  0480  0273               	subwf	___awdiv@dividend+1,w
  1752  0481  1D03               	skipz
  1753  0482  2C85               	goto	u835
  1754  0483  0870               	movf	___awdiv@divisor,w
  1755  0484  0272               	subwf	___awdiv@dividend,w
  1756  0485                     u835:	
  1757  0485  1C03               	skipc
  1758  0486  2C8E               	goto	l855
  1759  0487  0870               	movf	___awdiv@divisor,w
  1760  0488  02F2               	subwf	___awdiv@dividend,f
  1761  0489  0871               	movf	___awdiv@divisor+1,w
  1762  048A  1C03               	skipc
  1763  048B  03F3               	decf	___awdiv@dividend+1,f
  1764  048C  02F3               	subwf	___awdiv@dividend+1,f
  1765  048D  1477               	bsf	___awdiv@quotient,0
  1766  048E                     l855:	
  1767  048E  3001               	movlw	1
  1768  048F                     u845:	
  1769  048F  1003               	clrc
  1770  0490  0CF1               	rrf	___awdiv@divisor+1,f
  1771  0491  0CF0               	rrf	___awdiv@divisor,f
  1772  0492  3EFF               	addlw	-1
  1773  0493  1D03               	skipz
  1774  0494  2C8F               	goto	u845
  1775  0495  3001               	movlw	1
  1776  0496  02F5               	subwf	___awdiv@counter,f
  1777  0497  1D03               	btfss	3,2
  1778  0498  2C78               	goto	l849
  1779  0499                     l859:	
  1780  0499  0876               	movf	___awdiv@sign,w
  1781  049A  1903               	btfsc	3,2
  1782  049B  2CA1               	goto	l863
  1783  049C  09F7               	comf	___awdiv@quotient,f
  1784  049D  09F8               	comf	___awdiv@quotient+1,f
  1785  049E  0AF7               	incf	___awdiv@quotient,f
  1786  049F  1903               	skipnz
  1787  04A0  0AF8               	incf	___awdiv@quotient+1,f
  1788  04A1                     l863:	
  1789  04A1  0878               	movf	___awdiv@quotient+1,w
  1790  04A2  00F1               	movwf	?___awdiv+1
  1791  04A3  0877               	movf	___awdiv@quotient,w
  1792  04A4  00F0               	movwf	?___awdiv
  1793  04A5  0008               	return
  1794  04A6                     __end_of___awdiv:	
  1795  007E                     btemp	set	126	;btemp
  1796  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___ftmul
    _main->___fttol
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7010
                                             26 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1743
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             10 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
   ___lwtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      25       5       46.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jun 13 22:06:27 2022

            __CFG_CP$OFF 0000                       l32 0677             ___awdiv@sign 0076  
                    l290 04F9                      l282 04DC                      l373 0584  
                    l289 04F1                      l801 04C1                      l811 04EB  
                    l803 04C6                      l901 0448                      l831 0457  
                    l911 05B6                      l809 04E1                      l931 0611  
                    l837 0462                      l917 05CC                      l863 04A1  
                    l855 048E                      l847 046A                      l849 0478  
                    l953 073A                      l859 0499                      l875 040C  
                    l795 04AE                      l939 0630                      l971 078F  
                    l893 0435                      l887 0419                      l879 0413  
                    l799 04B5                      l983 07B7                      l975 079F  
                    l959 0750                      l889 0427                      l897 0440  
                    l987 07C7             __CFG_CPD$OFF 0000                      u715 04E4  
                    u805 046D                      u825 0479                      u905 041C  
                    u835 0485                      u755 0500                      u675 04BA  
                    u845 048F                      u925 042D                      u935 0436  
                    u695 04D5                      u985 05DE                      u995 05F0  
           ___awmod@sign 0076             __CFG_LVP$OFF 0000             ___ftdiv@cntr 0034  
           ___ftdiv@sign 0039                     l1003 052A                     l1021 055C  
                   l1031 0587                     l1023 056C                     l1035 0595  
                   l1029 0579                     l1065 0674                     u1005 0612  
                   u1015 0623                     u1025 0631                     u1105 07A0  
                   u1115 07A8                     u1065 075C                     u1225 055D  
                   u1155 07C8                     u1075 076E                     u1307 06FC  
                   u1165 07D0                     u1317 071D                     u1255 057B  
                   u1195 0531                     u1297 0672             __CFG_WRT$OFF 0000  
                   _lm35 0043                     _main 0656             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     _temp 003E                     btemp 007E  
                   start 0000            __CFG_IESO$OFF 0000             ___ftmul@cntr 0028  
           ___ftmul@sign 0029             ___fttol@exp1 007D             ___fttol@lval 0079  
                  ?_main 0070          __end_of___awdiv 04A6            __CFG_WDTE$OFF 0000  
        __end_of___awmod 044D          __end_of___ftdiv 0656                    _ANSEL 0188  
        __end_of___ftmul 07F3          ___awdiv@divisor 0070          __end_of___fttol 059E  
        ___awdiv@counter 0075                    _PORTD 0008                    _TRISD 0088  
         __CFG_FCMEN$OFF 0000            ___ftpack@sign 0074           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07F3             __end_of_main 0722                   ??_main 003A  
          ___fttol@sign1 0078                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0072         __end_of___ftpack 0512         __end_of___lwtoft 0402  
                 _OSCCON 008F                   _TRISA0 0428           __CFG_PWRTE$OFF 0000  
              ??___awdiv 0074                ??___awmod 0074                ??___ftdiv 0030  
              ??___ftmul 0020                ??___fttol 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075    ___ftmul@f3_as_product 0025  
__end_of__initialization 07FC               ___ftdiv@f1 002D               ___ftdiv@f2 002A  
             ___ftdiv@f3 0035               ___ftmul@f1 0078               ___ftmul@f2 007B  
             ___fttol@f1 0070           __pcstackCOMMON 0070               ___lwtoft@c 0078  
             __pbssBANK0 003E               __pmaintext 0656           _counter_digito 0044  
              ?___ftpack 0070                ?___lwtoft 0078                  ___awdiv 044D  
                ___awmod 0402                  ___ftdiv 059E                  ___ftmul 0722  
                ___fttol 0512               ??___ftpack 0075                  __ptext1 03EE  
                __ptext2 0512                  __ptext3 0722                  __ptext4 059E  
                __ptext5 04A6                  __ptext6 0402                  __ptext7 044D  
             ??___lwtoft 007B         ___awmod@dividend 0072     end_of_initialization 07FC  
            ___ftdiv@exp 0038              ___ftmul@exp 0024      start_initialization 07F3  
      __size_of___ftpack 006C                ___latbits 0002        __size_of___lwtoft 0014  
          __pcstackBANK0 0020   __CFG_FOSC$INTRC_CLKOUT 0000                 ?___awdiv 0070  
               ?___awmod 0070                 ?___ftdiv 002A                 ?___ftmul 0078  
               ?___fttol 0070                _value_adc 0041               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of___awdiv 0059         __size_of___awmod 004B  
       __size_of___ftdiv 00B8         __size_of___ftmul 00D1         __size_of___fttol 008C  
               ___ftpack 04A6                 ___lwtoft 03EE        __CFG_BOR4V$BOR40V 0000  
          __size_of_main 00CC  
