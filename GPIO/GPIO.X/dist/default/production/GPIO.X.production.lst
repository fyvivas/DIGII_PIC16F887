

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Feb 14 13:58:47 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.41
    15                           ; Generated 25/01/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0006                     _PORTBbits	set	6
   127  0086                     _TRISBbits	set	134
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  07FC                     start_initialization:	
   133  07FC                     __initialization:	
   134  07FC                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  07FC                     __end_of__initialization:	
   138  07FC  0183               	clrf	3
   139  07FD  120A  118A  2E25   	ljmp	_main	;jump to C main() function
   140                           
   141                           	psect	cstackCOMMON
   142  0070                     __pcstackCOMMON:	
   143  0070                     ?_main:	
   144  0070                     ?___ftpack:	
   145                           ; 1 bytes @ 0x0
   146                           
   147  0070                     ___ftpack@arg:	
   148                           ; 3 bytes @ 0x0
   149                           
   150                           
   151                           ; 3 bytes @ 0x0
   152  0070                     	ds	3
   153  0073                     ___ftpack@exp:	
   154                           
   155                           ; 1 bytes @ 0x3
   156  0073                     	ds	1
   157  0074                     ___ftpack@sign:	
   158                           
   159                           ; 1 bytes @ 0x4
   160  0074                     	ds	1
   161  0075                     ??___ftpack:	
   162                           
   163                           ; 1 bytes @ 0x5
   164  0075                     	ds	3
   165  0078                     ?___awtoft:	
   166  0078                     ___awtoft@c:	
   167                           ; 3 bytes @ 0x8
   168                           
   169                           
   170                           ; 2 bytes @ 0x8
   171  0078                     	ds	3
   172  007B                     ??___awtoft:	
   173                           
   174                           ; 1 bytes @ 0xB
   175  007B                     	ds	2
   176  007D                     ___awtoft@sign:	
   177                           
   178                           ; 1 bytes @ 0xD
   179  007D                     	ds	1
   180                           
   181                           	psect	cstackBANK0
   182  0020                     __pcstackBANK0:	
   183  0020                     ?___ftmul:	
   184  0020                     ___ftmul@f1:	
   185                           ; 3 bytes @ 0x0
   186                           
   187                           
   188                           ; 3 bytes @ 0x0
   189  0020                     	ds	3
   190  0023                     ___ftmul@f2:	
   191                           
   192                           ; 3 bytes @ 0x3
   193  0023                     	ds	3
   194  0026                     ??___ftmul:	
   195                           
   196                           ; 1 bytes @ 0x6
   197  0026                     	ds	4
   198  002A                     ___ftmul@exp:	
   199                           
   200                           ; 1 bytes @ 0xA
   201  002A                     	ds	1
   202  002B                     ___ftmul@f3_as_product:	
   203                           
   204                           ; 3 bytes @ 0xB
   205  002B                     	ds	3
   206  002E                     ___ftmul@cntr:	
   207                           
   208                           ; 1 bytes @ 0xE
   209  002E                     	ds	1
   210  002F                     ___ftmul@sign:	
   211                           
   212                           ; 1 bytes @ 0xF
   213  002F                     	ds	1
   214  0030                     ?___fttol:	
   215  0030                     ___fttol@f1:	
   216                           ; 4 bytes @ 0x10
   217                           
   218                           
   219                           ; 3 bytes @ 0x10
   220  0030                     	ds	4
   221  0034                     ??___fttol:	
   222                           
   223                           ; 1 bytes @ 0x14
   224  0034                     	ds	4
   225  0038                     ___fttol@sign1:	
   226                           
   227                           ; 1 bytes @ 0x18
   228  0038                     	ds	1
   229  0039                     ___fttol@lval:	
   230                           
   231                           ; 4 bytes @ 0x19
   232  0039                     	ds	4
   233  003D                     ___fttol@exp1:	
   234                           
   235                           ; 1 bytes @ 0x1D
   236  003D                     	ds	1
   237  003E                     ??_main:	
   238                           
   239                           ; 1 bytes @ 0x1E
   240  003E                     	ds	4
   241  0042                     main@tiempo:	
   242                           
   243                           ; 2 bytes @ 0x22
   244  0042                     	ds	2
   245                           
   246                           	psect	maintext
   247  0625                     __pmaintext:	
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 44 in file "blink.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  tiempo          2   34[BANK0 ] int 
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, pclath, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : B00/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   267 ;;      Params:         0       0       0       0       0
   268 ;;      Locals:         0       2       0       0       0
   269 ;;      Temps:          0       4       0       0       0
   270 ;;      Totals:         0       6       0       0       0
   271 ;;Total ram usage:        6 bytes
   272 ;; Hardware stack levels required when called:    2
   273 ;; This function calls:
   274 ;;		___awtoft
   275 ;;		___ftmul
   276 ;;		___fttol
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           
   283                           ;psect for function _main
   284  0625                     _main:	
   285                           
   286                           ;blink.c: 45: int tiempo=500;
   287                           
   288                           ;incstack = 0
   289                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   290  0625  30F4               	movlw	244
   291  0626  1283               	bcf	3,5	;RP0=0, select bank0
   292  0627  1303               	bcf	3,6	;RP1=0, select bank0
   293  0628  00C2               	movwf	main@tiempo
   294  0629  3001               	movlw	1
   295  062A  00C3               	movwf	main@tiempo+1
   296                           
   297                           ;blink.c: 47: TRISBbits.TRISB0=0;
   298  062B  1683               	bsf	3,5	;RP0=1, select bank1
   299  062C  1303               	bcf	3,6	;RP1=0, select bank1
   300  062D  1006               	bcf	6,0	;volatile
   301  062E                     l770:	
   302                           ;blink.c: 49: while(1){
   303                           
   304                           
   305                           ;blink.c: 50: PORTBbits.RB0=0;
   306  062E  1283               	bcf	3,5	;RP0=0, select bank0
   307  062F  1303               	bcf	3,6	;RP1=0, select bank0
   308  0630  1006               	bcf	6,0	;volatile
   309                           
   310                           ;blink.c: 52: _delay((unsigned long)((tiempo)*(4000000/4000.0)));
   311  0631  0843               	movf	main@tiempo+1,w
   312  0632  00F9               	movwf	___awtoft@c+1
   313  0633  0842               	movf	main@tiempo,w
   314  0634  00F8               	movwf	___awtoft@c
   315  0635  120A  118A  2598  120A  118A  	fcall	___awtoft
   316  063A  0878               	movf	?___awtoft,w
   317  063B  1283               	bcf	3,5	;RP0=0, select bank0
   318  063C  1303               	bcf	3,6	;RP1=0, select bank0
   319  063D  00A3               	movwf	___ftmul@f2
   320  063E  0879               	movf	?___awtoft+1,w
   321  063F  00A4               	movwf	___ftmul@f2+1
   322  0640  087A               	movf	?___awtoft+2,w
   323  0641  00A5               	movwf	___ftmul@f2+2
   324  0642  3000               	movlw	0
   325  0643  00A0               	movwf	___ftmul@f1
   326  0644  307A               	movlw	122
   327  0645  00A1               	movwf	___ftmul@f1+1
   328  0646  3044               	movlw	68
   329  0647  00A2               	movwf	___ftmul@f1+2
   330  0648  120A  118A  2729  120A  118A  	fcall	___ftmul
   331  064D  1283               	bcf	3,5	;RP0=0, select bank0
   332  064E  1303               	bcf	3,6	;RP1=0, select bank0
   333  064F  0820               	movf	?___ftmul,w
   334  0650  00B0               	movwf	___fttol@f1
   335  0651  0821               	movf	?___ftmul+1,w
   336  0652  00B1               	movwf	___fttol@f1+1
   337  0653  0822               	movf	?___ftmul+2,w
   338  0654  00B2               	movwf	___fttol@f1+2
   339  0655  120A  118A  269B  120A  118A  	fcall	___fttol
   340  065A  1283               	bcf	3,5	;RP0=0, select bank0
   341  065B  1303               	bcf	3,6	;RP1=0, select bank0
   342  065C  0830               	movf	?___fttol,w
   343  065D  00BE               	movwf	??_main
   344  065E  0831               	movf	?___fttol+1,w
   345  065F  00BF               	movwf	??_main+1
   346  0660  0832               	movf	?___fttol+2,w
   347  0661  00C0               	movwf	??_main+2
   348  0662  0833               	movf	?___fttol+3,w
   349  0663  00C1               	movwf	??_main+3
   350                           
   351                           ;blink.c: 53: PORTBbits.RB0=1;
   352  0664  1283               	bcf	3,5	;RP0=0, select bank0
   353  0665  1303               	bcf	3,6	;RP1=0, select bank0
   354  0666  1406               	bsf	6,0	;volatile
   355                           
   356                           ;blink.c: 54: _delay((unsigned long)((tiempo)*(4000000/4000.0)));
   357  0667  0843               	movf	main@tiempo+1,w
   358  0668  00F9               	movwf	___awtoft@c+1
   359  0669  0842               	movf	main@tiempo,w
   360  066A  00F8               	movwf	___awtoft@c
   361  066B  120A  118A  2598  120A  118A  	fcall	___awtoft
   362  0670  0878               	movf	?___awtoft,w
   363  0671  1283               	bcf	3,5	;RP0=0, select bank0
   364  0672  1303               	bcf	3,6	;RP1=0, select bank0
   365  0673  00A3               	movwf	___ftmul@f2
   366  0674  0879               	movf	?___awtoft+1,w
   367  0675  00A4               	movwf	___ftmul@f2+1
   368  0676  087A               	movf	?___awtoft+2,w
   369  0677  00A5               	movwf	___ftmul@f2+2
   370  0678  3000               	movlw	0
   371  0679  00A0               	movwf	___ftmul@f1
   372  067A  307A               	movlw	122
   373  067B  00A1               	movwf	___ftmul@f1+1
   374  067C  3044               	movlw	68
   375  067D  00A2               	movwf	___ftmul@f1+2
   376  067E  120A  118A  2729  120A  118A  	fcall	___ftmul
   377  0683  1283               	bcf	3,5	;RP0=0, select bank0
   378  0684  1303               	bcf	3,6	;RP1=0, select bank0
   379  0685  0820               	movf	?___ftmul,w
   380  0686  00B0               	movwf	___fttol@f1
   381  0687  0821               	movf	?___ftmul+1,w
   382  0688  00B1               	movwf	___fttol@f1+1
   383  0689  0822               	movf	?___ftmul+2,w
   384  068A  00B2               	movwf	___fttol@f1+2
   385  068B  120A  118A  269B  120A  118A  	fcall	___fttol
   386  0690  1283               	bcf	3,5	;RP0=0, select bank0
   387  0691  1303               	bcf	3,6	;RP1=0, select bank0
   388  0692  0830               	movf	?___fttol,w
   389  0693  00BE               	movwf	??_main
   390  0694  0831               	movf	?___fttol+1,w
   391  0695  00BF               	movwf	??_main+1
   392  0696  0832               	movf	?___fttol+2,w
   393  0697  00C0               	movwf	??_main+2
   394  0698  0833               	movf	?___fttol+3,w
   395  0699  00C1               	movwf	??_main+3
   396  069A  2E2E               	goto	l770
   397  069B                     __end_of_main:	
   398                           ;blink.c: 55: }
   399                           ;blink.c: 56: return;
   400                           
   401                           
   402                           	psect	text1
   403  069B                     __ptext1:	
   404 ;; *************** function ___fttol *****************
   405 ;; Defined at:
   406 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  f1              3   16[BANK0 ] float 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  lval            4   25[BANK0 ] unsigned long 
   411 ;;  exp1            1   29[BANK0 ] unsigned char 
   412 ;;  sign1           1   24[BANK0 ] unsigned char 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  4   16[BANK0 ] long 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       4       0       0       0
   423 ;;      Locals:         0       6       0       0       0
   424 ;;      Temps:          0       4       0       0       0
   425 ;;      Totals:         0      14       0       0       0
   426 ;;Total ram usage:       14 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function ___fttol
   437  069B                     ___fttol:	
   438                           
   439                           ;incstack = 0
   440                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   441  069B  1283               	bcf	3,5	;RP0=0, select bank0
   442  069C  1303               	bcf	3,6	;RP1=0, select bank0
   443  069D  0830               	movf	___fttol@f1,w
   444  069E  00B4               	movwf	??___fttol
   445  069F  0831               	movf	___fttol@f1+1,w
   446  06A0  00B5               	movwf	??___fttol+1
   447  06A1  0832               	movf	___fttol@f1+2,w
   448  06A2  00B6               	movwf	??___fttol+2
   449  06A3  1003               	clrc
   450  06A4  0D35               	rlf	??___fttol+1,w
   451  06A5  0D36               	rlf	??___fttol+2,w
   452  06A6  00B7               	movwf	??___fttol+3
   453  06A7  0837               	movf	??___fttol+3,w
   454  06A8  00BD               	movwf	___fttol@exp1
   455  06A9  083D               	movf	___fttol@exp1,w
   456  06AA  1D03               	btfss	3,2
   457  06AB  2EB5               	goto	l730
   458  06AC  3000               	movlw	0
   459  06AD  00B3               	movwf	?___fttol+3
   460  06AE  3000               	movlw	0
   461  06AF  00B2               	movwf	?___fttol+2
   462  06B0  3000               	movlw	0
   463  06B1  00B1               	movwf	?___fttol+1
   464  06B2  3000               	movlw	0
   465  06B3  00B0               	movwf	?___fttol
   466  06B4  0008               	return
   467  06B5                     l730:	
   468  06B5  0830               	movf	___fttol@f1,w
   469  06B6  00B4               	movwf	??___fttol
   470  06B7  0831               	movf	___fttol@f1+1,w
   471  06B8  00B5               	movwf	??___fttol+1
   472  06B9  0832               	movf	___fttol@f1+2,w
   473  06BA  00B6               	movwf	??___fttol+2
   474  06BB  3017               	movlw	23
   475  06BC                     u675:	
   476  06BC  1003               	clrc
   477  06BD  0CB6               	rrf	??___fttol+2,f
   478  06BE  0CB5               	rrf	??___fttol+1,f
   479  06BF  0CB4               	rrf	??___fttol,f
   480  06C0  3EFF               	addlw	-1
   481  06C1  1D03               	skipz
   482  06C2  2EBC               	goto	u675
   483  06C3  0834               	movf	??___fttol,w
   484  06C4  00B7               	movwf	??___fttol+3
   485  06C5  0837               	movf	??___fttol+3,w
   486  06C6  00B8               	movwf	___fttol@sign1
   487  06C7  17B1               	bsf	___fttol@f1+1,7
   488  06C8  30FF               	movlw	255
   489  06C9  05B0               	andwf	___fttol@f1,f
   490  06CA  30FF               	movlw	255
   491  06CB  05B1               	andwf	___fttol@f1+1,f
   492  06CC  3000               	movlw	0
   493  06CD  05B2               	andwf	___fttol@f1+2,f
   494  06CE  0830               	movf	___fttol@f1,w
   495  06CF  00B9               	movwf	___fttol@lval
   496  06D0  0831               	movf	___fttol@f1+1,w
   497  06D1  00BA               	movwf	___fttol@lval+1
   498  06D2  0832               	movf	___fttol@f1+2,w
   499  06D3  00BB               	movwf	___fttol@lval+2
   500  06D4  01BC               	clrf	___fttol@lval+3
   501  06D5  308E               	movlw	142
   502  06D6  02BD               	subwf	___fttol@exp1,f
   503  06D7  1FBD               	btfss	___fttol@exp1,7
   504  06D8  2EF7               	goto	l750
   505  06D9  083D               	movf	___fttol@exp1,w
   506  06DA  3A80               	xorlw	128
   507  06DB  3E8F               	addlw	143
   508  06DC  1803               	skipnc
   509  06DD  2EE7               	goto	l748
   510  06DE  3000               	movlw	0
   511  06DF  00B3               	movwf	?___fttol+3
   512  06E0  3000               	movlw	0
   513  06E1  00B2               	movwf	?___fttol+2
   514  06E2  3000               	movlw	0
   515  06E3  00B1               	movwf	?___fttol+1
   516  06E4  3000               	movlw	0
   517  06E5  00B0               	movwf	?___fttol
   518  06E6  0008               	return
   519  06E7                     l748:	
   520  06E7  3001               	movlw	1
   521  06E8                     u705:	
   522  06E8  1003               	clrc
   523  06E9  0CBC               	rrf	___fttol@lval+3,f
   524  06EA  0CBB               	rrf	___fttol@lval+2,f
   525  06EB  0CBA               	rrf	___fttol@lval+1,f
   526  06EC  0CB9               	rrf	___fttol@lval,f
   527  06ED  3EFF               	addlw	-1
   528  06EE  1D03               	skipz
   529  06EF  2EE8               	goto	u705
   530  06F0  3001               	movlw	1
   531  06F1  00B4               	movwf	??___fttol
   532  06F2  0834               	movf	??___fttol,w
   533  06F3  07BD               	addwf	___fttol@exp1,f
   534  06F4  1903               	btfsc	3,2
   535  06F5  2F12               	goto	l758
   536  06F6  2EE7               	goto	l748
   537  06F7                     l750:	
   538  06F7  3018               	movlw	24
   539  06F8  023D               	subwf	___fttol@exp1,w
   540  06F9  1C03               	skipc
   541  06FA  2F0F               	goto	l354
   542  06FB  3000               	movlw	0
   543  06FC  00B3               	movwf	?___fttol+3
   544  06FD  3000               	movlw	0
   545  06FE  00B2               	movwf	?___fttol+2
   546  06FF  3000               	movlw	0
   547  0700  00B1               	movwf	?___fttol+1
   548  0701  3000               	movlw	0
   549  0702  00B0               	movwf	?___fttol
   550  0703  0008               	return
   551  0704                     l756:	
   552  0704  3001               	movlw	1
   553  0705  00B4               	movwf	??___fttol
   554  0706                     u735:	
   555  0706  1003               	clrc
   556  0707  0DB9               	rlf	___fttol@lval,f
   557  0708  0DBA               	rlf	___fttol@lval+1,f
   558  0709  0DBB               	rlf	___fttol@lval+2,f
   559  070A  0DBC               	rlf	___fttol@lval+3,f
   560  070B  0BB4               	decfsz	??___fttol,f
   561  070C  2F06               	goto	u735
   562  070D  3001               	movlw	1
   563  070E  02BD               	subwf	___fttol@exp1,f
   564  070F                     l354:	
   565  070F  083D               	movf	___fttol@exp1,w
   566  0710  1D03               	btfss	3,2
   567  0711  2F04               	goto	l756
   568  0712                     l758:	
   569  0712  0838               	movf	___fttol@sign1,w
   570  0713  1903               	btfsc	3,2
   571  0714  2F20               	goto	l762
   572  0715  09B9               	comf	___fttol@lval,f
   573  0716  09BA               	comf	___fttol@lval+1,f
   574  0717  09BB               	comf	___fttol@lval+2,f
   575  0718  09BC               	comf	___fttol@lval+3,f
   576  0719  0AB9               	incf	___fttol@lval,f
   577  071A  1903               	skipnz
   578  071B  0ABA               	incf	___fttol@lval+1,f
   579  071C  1903               	skipnz
   580  071D  0ABB               	incf	___fttol@lval+2,f
   581  071E  1903               	skipnz
   582  071F  0ABC               	incf	___fttol@lval+3,f
   583  0720                     l762:	
   584  0720  083C               	movf	___fttol@lval+3,w
   585  0721  00B3               	movwf	?___fttol+3
   586  0722  083B               	movf	___fttol@lval+2,w
   587  0723  00B2               	movwf	?___fttol+2
   588  0724  083A               	movf	___fttol@lval+1,w
   589  0725  00B1               	movwf	?___fttol+1
   590  0726  0839               	movf	___fttol@lval,w
   591  0727  00B0               	movwf	?___fttol
   592  0728  0008               	return
   593  0729                     __end_of___fttol:	
   594                           
   595                           	psect	text2
   596  0729                     __ptext2:	
   597 ;; *************** function ___ftmul *****************
   598 ;; Defined at:
   599 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  f1              3    0[BANK0 ] float 
   602 ;;  f2              3    3[BANK0 ] float 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
   605 ;;  sign            1   15[BANK0 ] unsigned char 
   606 ;;  cntr            1   14[BANK0 ] unsigned char 
   607 ;;  exp             1   10[BANK0 ] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  3    0[BANK0 ] float 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       6       0       0       0
   618 ;;      Locals:         0       6       0       0       0
   619 ;;      Temps:          0       4       0       0       0
   620 ;;      Totals:         0      16       0       0       0
   621 ;;Total ram usage:       16 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    1
   624 ;; This function calls:
   625 ;;		___ftpack
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function ___ftmul
   633  0729                     ___ftmul:	
   634                           
   635                           ;incstack = 0
   636                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   637  0729  1283               	bcf	3,5	;RP0=0, select bank0
   638  072A  1303               	bcf	3,6	;RP1=0, select bank0
   639  072B  0820               	movf	___ftmul@f1,w
   640  072C  00A6               	movwf	??___ftmul
   641  072D  0821               	movf	___ftmul@f1+1,w
   642  072E  00A7               	movwf	??___ftmul+1
   643  072F  0822               	movf	___ftmul@f1+2,w
   644  0730  00A8               	movwf	??___ftmul+2
   645  0731  1003               	clrc
   646  0732  0D27               	rlf	??___ftmul+1,w
   647  0733  0D28               	rlf	??___ftmul+2,w
   648  0734  00A9               	movwf	??___ftmul+3
   649  0735  0829               	movf	??___ftmul+3,w
   650  0736  00AA               	movwf	___ftmul@exp
   651  0737  082A               	movf	___ftmul@exp,w
   652  0738  1D03               	btfss	3,2
   653  0739  2F41               	goto	l680
   654  073A  3000               	movlw	0
   655  073B  00A0               	movwf	?___ftmul
   656  073C  3000               	movlw	0
   657  073D  00A1               	movwf	?___ftmul+1
   658  073E  3000               	movlw	0
   659  073F  00A2               	movwf	?___ftmul+2
   660  0740  0008               	return
   661  0741                     l680:	
   662  0741  0823               	movf	___ftmul@f2,w
   663  0742  00A6               	movwf	??___ftmul
   664  0743  0824               	movf	___ftmul@f2+1,w
   665  0744  00A7               	movwf	??___ftmul+1
   666  0745  0825               	movf	___ftmul@f2+2,w
   667  0746  00A8               	movwf	??___ftmul+2
   668  0747  1003               	clrc
   669  0748  0D27               	rlf	??___ftmul+1,w
   670  0749  0D28               	rlf	??___ftmul+2,w
   671  074A  00A9               	movwf	??___ftmul+3
   672  074B  0829               	movf	??___ftmul+3,w
   673  074C  00AF               	movwf	___ftmul@sign
   674  074D  082F               	movf	___ftmul@sign,w
   675  074E  1D03               	btfss	3,2
   676  074F  2F57               	goto	l686
   677  0750  3000               	movlw	0
   678  0751  00A0               	movwf	?___ftmul
   679  0752  3000               	movlw	0
   680  0753  00A1               	movwf	?___ftmul+1
   681  0754  3000               	movlw	0
   682  0755  00A2               	movwf	?___ftmul+2
   683  0756  0008               	return
   684  0757                     l686:	
   685  0757  082F               	movf	___ftmul@sign,w
   686  0758  3E7B               	addlw	123
   687  0759  00A6               	movwf	??___ftmul
   688  075A  0826               	movf	??___ftmul,w
   689  075B  07AA               	addwf	___ftmul@exp,f
   690  075C  0820               	movf	___ftmul@f1,w
   691  075D  00A6               	movwf	??___ftmul
   692  075E  0821               	movf	___ftmul@f1+1,w
   693  075F  00A7               	movwf	??___ftmul+1
   694  0760  0822               	movf	___ftmul@f1+2,w
   695  0761  00A8               	movwf	??___ftmul+2
   696  0762  3010               	movlw	16
   697  0763                     u545:	
   698  0763  1003               	clrc
   699  0764  0CA8               	rrf	??___ftmul+2,f
   700  0765  0CA7               	rrf	??___ftmul+1,f
   701  0766  0CA6               	rrf	??___ftmul,f
   702  0767  3EFF               	addlw	-1
   703  0768  1D03               	skipz
   704  0769  2F63               	goto	u545
   705  076A  0826               	movf	??___ftmul,w
   706  076B  00A9               	movwf	??___ftmul+3
   707  076C  0829               	movf	??___ftmul+3,w
   708  076D  00AF               	movwf	___ftmul@sign
   709  076E  0823               	movf	___ftmul@f2,w
   710  076F  00A6               	movwf	??___ftmul
   711  0770  0824               	movf	___ftmul@f2+1,w
   712  0771  00A7               	movwf	??___ftmul+1
   713  0772  0825               	movf	___ftmul@f2+2,w
   714  0773  00A8               	movwf	??___ftmul+2
   715  0774  3010               	movlw	16
   716  0775                     u555:	
   717  0775  1003               	clrc
   718  0776  0CA8               	rrf	??___ftmul+2,f
   719  0777  0CA7               	rrf	??___ftmul+1,f
   720  0778  0CA6               	rrf	??___ftmul,f
   721  0779  3EFF               	addlw	-1
   722  077A  1D03               	skipz
   723  077B  2F75               	goto	u555
   724  077C  0826               	movf	??___ftmul,w
   725  077D  00A9               	movwf	??___ftmul+3
   726  077E  0829               	movf	??___ftmul+3,w
   727  077F  06AF               	xorwf	___ftmul@sign,f
   728  0780  3080               	movlw	128
   729  0781  00A6               	movwf	??___ftmul
   730  0782  0826               	movf	??___ftmul,w
   731  0783  05AF               	andwf	___ftmul@sign,f
   732  0784  17A1               	bsf	___ftmul@f1+1,7
   733  0785  17A4               	bsf	___ftmul@f2+1,7
   734  0786  30FF               	movlw	255
   735  0787  05A3               	andwf	___ftmul@f2,f
   736  0788  30FF               	movlw	255
   737  0789  05A4               	andwf	___ftmul@f2+1,f
   738  078A  3000               	movlw	0
   739  078B  05A5               	andwf	___ftmul@f2+2,f
   740  078C  3000               	movlw	0
   741  078D  00AB               	movwf	___ftmul@f3_as_product
   742  078E  3000               	movlw	0
   743  078F  00AC               	movwf	___ftmul@f3_as_product+1
   744  0790  3000               	movlw	0
   745  0791  00AD               	movwf	___ftmul@f3_as_product+2
   746  0792  3007               	movlw	7
   747  0793  00A6               	movwf	??___ftmul
   748  0794  0826               	movf	??___ftmul,w
   749  0795  00AE               	movwf	___ftmul@cntr
   750  0796                     l698:	
   751  0796  1C20               	btfss	___ftmul@f1,0
   752  0797  2FA6               	goto	l702
   753  0798  0823               	movf	___ftmul@f2,w
   754  0799  07AB               	addwf	___ftmul@f3_as_product,f
   755  079A  0824               	movf	___ftmul@f2+1,w
   756  079B  1103               	clrz
   757  079C  1803               	skipnc
   758  079D  0A24               	incf	___ftmul@f2+1,w
   759  079E  1D03               	btfss	3,2
   760  079F  07AC               	addwf	___ftmul@f3_as_product+1,f
   761  07A0  0825               	movf	___ftmul@f2+2,w
   762  07A1  1103               	clrz
   763  07A2  1803               	skipnc
   764  07A3  0A25               	incf	___ftmul@f2+2,w
   765  07A4  1D03               	btfss	3,2
   766  07A5  07AD               	addwf	___ftmul@f3_as_product+2,f
   767  07A6                     l702:	
   768  07A6  3001               	movlw	1
   769  07A7                     u585:	
   770  07A7  1003               	clrc
   771  07A8  0CA2               	rrf	___ftmul@f1+2,f
   772  07A9  0CA1               	rrf	___ftmul@f1+1,f
   773  07AA  0CA0               	rrf	___ftmul@f1,f
   774  07AB  3EFF               	addlw	-1
   775  07AC  1D03               	skipz
   776  07AD  2FA7               	goto	u585
   777  07AE  3001               	movlw	1
   778  07AF                     u595:	
   779  07AF  1003               	clrc
   780  07B0  0DA3               	rlf	___ftmul@f2,f
   781  07B1  0DA4               	rlf	___ftmul@f2+1,f
   782  07B2  0DA5               	rlf	___ftmul@f2+2,f
   783  07B3  3EFF               	addlw	-1
   784  07B4  1D03               	skipz
   785  07B5  2FAF               	goto	u595
   786  07B6  3001               	movlw	1
   787  07B7  02AE               	subwf	___ftmul@cntr,f
   788  07B8  1D03               	btfss	3,2
   789  07B9  2F96               	goto	l698
   790  07BA  3009               	movlw	9
   791  07BB  00A6               	movwf	??___ftmul
   792  07BC  0826               	movf	??___ftmul,w
   793  07BD  00AE               	movwf	___ftmul@cntr
   794  07BE                     l710:	
   795  07BE  1C20               	btfss	___ftmul@f1,0
   796  07BF  2FCE               	goto	l714
   797  07C0  0823               	movf	___ftmul@f2,w
   798  07C1  07AB               	addwf	___ftmul@f3_as_product,f
   799  07C2  0824               	movf	___ftmul@f2+1,w
   800  07C3  1103               	clrz
   801  07C4  1803               	skipnc
   802  07C5  0A24               	incf	___ftmul@f2+1,w
   803  07C6  1D03               	btfss	3,2
   804  07C7  07AC               	addwf	___ftmul@f3_as_product+1,f
   805  07C8  0825               	movf	___ftmul@f2+2,w
   806  07C9  1103               	clrz
   807  07CA  1803               	skipnc
   808  07CB  0A25               	incf	___ftmul@f2+2,w
   809  07CC  1D03               	btfss	3,2
   810  07CD  07AD               	addwf	___ftmul@f3_as_product+2,f
   811  07CE                     l714:	
   812  07CE  3001               	movlw	1
   813  07CF                     u635:	
   814  07CF  1003               	clrc
   815  07D0  0CA2               	rrf	___ftmul@f1+2,f
   816  07D1  0CA1               	rrf	___ftmul@f1+1,f
   817  07D2  0CA0               	rrf	___ftmul@f1,f
   818  07D3  3EFF               	addlw	-1
   819  07D4  1D03               	skipz
   820  07D5  2FCF               	goto	u635
   821  07D6  3001               	movlw	1
   822  07D7                     u645:	
   823  07D7  1003               	clrc
   824  07D8  0CAD               	rrf	___ftmul@f3_as_product+2,f
   825  07D9  0CAC               	rrf	___ftmul@f3_as_product+1,f
   826  07DA  0CAB               	rrf	___ftmul@f3_as_product,f
   827  07DB  3EFF               	addlw	-1
   828  07DC  1D03               	skipz
   829  07DD  2FD7               	goto	u645
   830  07DE  3001               	movlw	1
   831  07DF  02AE               	subwf	___ftmul@cntr,f
   832  07E0  1D03               	btfss	3,2
   833  07E1  2FBE               	goto	l710
   834  07E2  082B               	movf	___ftmul@f3_as_product,w
   835  07E3  00F0               	movwf	___ftpack@arg
   836  07E4  082C               	movf	___ftmul@f3_as_product+1,w
   837  07E5  00F1               	movwf	___ftpack@arg+1
   838  07E6  082D               	movf	___ftmul@f3_as_product+2,w
   839  07E7  00F2               	movwf	___ftpack@arg+2
   840  07E8  082A               	movf	___ftmul@exp,w
   841  07E9  00A6               	movwf	??___ftmul
   842  07EA  0826               	movf	??___ftmul,w
   843  07EB  00F3               	movwf	___ftpack@exp
   844  07EC  082F               	movf	___ftmul@sign,w
   845  07ED  00A7               	movwf	??___ftmul+1
   846  07EE  0827               	movf	??___ftmul+1,w
   847  07EF  00F4               	movwf	___ftpack@sign
   848  07F0  120A  118A  25B9   	fcall	___ftpack
   849  07F3  0870               	movf	?___ftpack,w
   850  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   851  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   852  07F6  00A0               	movwf	?___ftmul
   853  07F7  0871               	movf	?___ftpack+1,w
   854  07F8  00A1               	movwf	?___ftmul+1
   855  07F9  0872               	movf	?___ftpack+2,w
   856  07FA  00A2               	movwf	?___ftmul+2
   857  07FB  0008               	return
   858  07FC                     __end_of___ftmul:	
   859                           
   860                           	psect	text3
   861  0598                     __ptext3:	
   862 ;; *************** function ___awtoft *****************
   863 ;; Defined at:
   864 ;;		line 32 in file "D:\mplab\sources\common\awtoft.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  c               2    8[COMMON] int 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  sign            1   13[COMMON] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  3    8[COMMON] float 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         3       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0
   880 ;;      Temps:          2       0       0       0       0
   881 ;;      Totals:         6       0       0       0       0
   882 ;;Total ram usage:        6 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		___ftpack
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function ___awtoft
   894  0598                     ___awtoft:	
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
   898  0598  01FD               	clrf	___awtoft@sign
   899  0599  1FF9               	btfss	___awtoft@c+1,7
   900  059A  2DA2               	goto	l670
   901  059B  09F8               	comf	___awtoft@c,f
   902  059C  09F9               	comf	___awtoft@c+1,f
   903  059D  0AF8               	incf	___awtoft@c,f
   904  059E  1903               	skipnz
   905  059F  0AF9               	incf	___awtoft@c+1,f
   906  05A0  01FD               	clrf	___awtoft@sign
   907  05A1  0AFD               	incf	___awtoft@sign,f
   908  05A2                     l670:	
   909  05A2  0878               	movf	___awtoft@c,w
   910  05A3  00F0               	movwf	___ftpack@arg
   911  05A4  0879               	movf	___awtoft@c+1,w
   912  05A5  00F1               	movwf	___ftpack@arg+1
   913  05A6  01F2               	clrf	___ftpack@arg+2
   914  05A7  308E               	movlw	142
   915  05A8  00FB               	movwf	??___awtoft
   916  05A9  087B               	movf	??___awtoft,w
   917  05AA  00F3               	movwf	___ftpack@exp
   918  05AB  087D               	movf	___awtoft@sign,w
   919  05AC  00FC               	movwf	??___awtoft+1
   920  05AD  087C               	movf	??___awtoft+1,w
   921  05AE  00F4               	movwf	___ftpack@sign
   922  05AF  120A  118A  25B9   	fcall	___ftpack
   923  05B2  0870               	movf	?___ftpack,w
   924  05B3  00F8               	movwf	?___awtoft
   925  05B4  0871               	movf	?___ftpack+1,w
   926  05B5  00F9               	movwf	?___awtoft+1
   927  05B6  0872               	movf	?___ftpack+2,w
   928  05B7  00FA               	movwf	?___awtoft+2
   929  05B8  0008               	return
   930  05B9                     __end_of___awtoft:	
   931                           
   932                           	psect	text4
   933  05B9                     __ptext4:	
   934 ;; *************** function ___ftpack *****************
   935 ;; Defined at:
   936 ;;		line 62 in file "D:\mplab\sources\common\float.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  arg             3    0[COMMON] unsigned um
   939 ;;  exp             1    3[COMMON] unsigned char 
   940 ;;  sign            1    4[COMMON] unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  3    0[COMMON] float 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         5       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          3       0       0       0       0
   955 ;;      Totals:         8       0       0       0       0
   956 ;;Total ram usage:        8 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		___awtoft
   962 ;;		___ftmul
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function ___ftpack
   968  05B9                     ___ftpack:	
   969                           
   970                           ;incstack = 0
   971                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
   972  05B9  0873               	movf	___ftpack@exp,w
   973  05BA  1903               	btfsc	3,2
   974  05BB  2DC1               	goto	l634
   975  05BC  0872               	movf	___ftpack@arg+2,w
   976  05BD  0471               	iorwf	___ftpack@arg+1,w
   977  05BE  0470               	iorwf	___ftpack@arg,w
   978  05BF  1D03               	skipz
   979  05C0  2DD4               	goto	l640
   980  05C1                     l634:	
   981  05C1  3000               	movlw	0
   982  05C2  00F0               	movwf	?___ftpack
   983  05C3  3000               	movlw	0
   984  05C4  00F1               	movwf	?___ftpack+1
   985  05C5  3000               	movlw	0
   986  05C6  00F2               	movwf	?___ftpack+2
   987  05C7  0008               	return
   988  05C8                     l638:	
   989  05C8  3001               	movlw	1
   990  05C9  00F5               	movwf	??___ftpack
   991  05CA  0875               	movf	??___ftpack,w
   992  05CB  07F3               	addwf	___ftpack@exp,f
   993  05CC  3001               	movlw	1
   994  05CD                     u415:	
   995  05CD  1003               	clrc
   996  05CE  0CF2               	rrf	___ftpack@arg+2,f
   997  05CF  0CF1               	rrf	___ftpack@arg+1,f
   998  05D0  0CF0               	rrf	___ftpack@arg,f
   999  05D1  3EFF               	addlw	-1
  1000  05D2  1D03               	skipz
  1001  05D3  2DCD               	goto	u415
  1002  05D4                     l640:	
  1003  05D4  30FE               	movlw	254
  1004  05D5  0572               	andwf	___ftpack@arg+2,w
  1005  05D6  1903               	btfsc	3,2
  1006  05D7  2DEF               	goto	l263
  1007  05D8  2DC8               	goto	l638
  1008  05D9                     l642:	
  1009  05D9  3001               	movlw	1
  1010  05DA  00F5               	movwf	??___ftpack
  1011  05DB  0875               	movf	??___ftpack,w
  1012  05DC  07F3               	addwf	___ftpack@exp,f
  1013  05DD  3001               	movlw	1
  1014  05DE  07F0               	addwf	___ftpack@arg,f
  1015  05DF  3000               	movlw	0
  1016  05E0  1803               	skipnc
  1017  05E1  3001               	movlw	1
  1018  05E2  07F1               	addwf	___ftpack@arg+1,f
  1019  05E3  3000               	movlw	0
  1020  05E4  1803               	skipnc
  1021  05E5  3001               	movlw	1
  1022  05E6  07F2               	addwf	___ftpack@arg+2,f
  1023  05E7  3001               	movlw	1
  1024  05E8                     u435:	
  1025  05E8  1003               	clrc
  1026  05E9  0CF2               	rrf	___ftpack@arg+2,f
  1027  05EA  0CF1               	rrf	___ftpack@arg+1,f
  1028  05EB  0CF0               	rrf	___ftpack@arg,f
  1029  05EC  3EFF               	addlw	-1
  1030  05ED  1D03               	skipz
  1031  05EE  2DE8               	goto	u435
  1032  05EF                     l263:	
  1033  05EF  30FF               	movlw	255
  1034  05F0  0572               	andwf	___ftpack@arg+2,w
  1035  05F1  1903               	btfsc	3,2
  1036  05F2  2DFE               	goto	l650
  1037  05F3  2DD9               	goto	l642
  1038  05F4                     l648:	
  1039  05F4  3001               	movlw	1
  1040  05F5  02F3               	subwf	___ftpack@exp,f
  1041  05F6  3001               	movlw	1
  1042  05F7                     u455:	
  1043  05F7  1003               	clrc
  1044  05F8  0DF0               	rlf	___ftpack@arg,f
  1045  05F9  0DF1               	rlf	___ftpack@arg+1,f
  1046  05FA  0DF2               	rlf	___ftpack@arg+2,f
  1047  05FB  3EFF               	addlw	-1
  1048  05FC  1D03               	skipz
  1049  05FD  2DF7               	goto	u455
  1050  05FE                     l650:	
  1051  05FE  1BF1               	btfsc	___ftpack@arg+1,7
  1052  05FF  2E04               	goto	l270
  1053  0600  3002               	movlw	2
  1054  0601  0273               	subwf	___ftpack@exp,w
  1055  0602  1803               	skipnc
  1056  0603  2DF4               	goto	l648
  1057  0604                     l270:	
  1058  0604  1873               	btfsc	___ftpack@exp,0
  1059  0605  2E0C               	goto	l271
  1060  0606  30FF               	movlw	255
  1061  0607  05F0               	andwf	___ftpack@arg,f
  1062  0608  307F               	movlw	127
  1063  0609  05F1               	andwf	___ftpack@arg+1,f
  1064  060A  30FF               	movlw	255
  1065  060B  05F2               	andwf	___ftpack@arg+2,f
  1066  060C                     l271:	
  1067  060C  1003               	clrc
  1068  060D  0CF3               	rrf	___ftpack@exp,f
  1069  060E  0873               	movf	___ftpack@exp,w
  1070  060F  00F5               	movwf	??___ftpack
  1071  0610  01F6               	clrf	??___ftpack+1
  1072  0611  01F7               	clrf	??___ftpack+2
  1073  0612  3010               	movlw	16
  1074  0613                     u495:	
  1075  0613  1003               	clrc
  1076  0614  0DF5               	rlf	??___ftpack,f
  1077  0615  0DF6               	rlf	??___ftpack+1,f
  1078  0616  0DF7               	rlf	??___ftpack+2,f
  1079  0617  3EFF               	addlw	-1
  1080  0618  1D03               	skipz
  1081  0619  2E13               	goto	u495
  1082  061A  0875               	movf	??___ftpack,w
  1083  061B  04F0               	iorwf	___ftpack@arg,f
  1084  061C  0876               	movf	??___ftpack+1,w
  1085  061D  04F1               	iorwf	___ftpack@arg+1,f
  1086  061E  0877               	movf	??___ftpack+2,w
  1087  061F  04F2               	iorwf	___ftpack@arg+2,f
  1088  0620  0874               	movf	___ftpack@sign,w
  1089  0621  1903               	btfsc	3,2
  1090  0622  0008               	return
  1091  0623  17F2               	bsf	___ftpack@arg+2,7
  1092  0624  0008               	return
  1093  0625                     __end_of___ftpack:	
  1094  007E                     btemp	set	126	;btemp
  1095  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    4396
                                             30 BANK0      6     6      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2167
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1826
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Feb 14 13:58:47 2022

            __CFG_CP$OFF 0000              __CFG_LVP$ON 0000                      l270 0604  
                    l271 060C                      l263 05EF                      l354 070F  
                    l710 07BE                      l702 07A6                      l640 05D4  
                    l650 05FE                      l642 05D9                      l634 05C1  
                    l714 07CE                      l730 06B5                      l638 05C8  
                    l670 05A2                      l750 06F7                      l648 05F4  
                    l680 0741                      l762 0720                      l770 062E  
                    l756 0704                      l748 06E7                      l686 0757  
                    l758 0712                      l698 0796                      u415 05CD  
           __CFG_CPD$OFF 0000                      u435 05E8                      u455 05F7  
                    u545 0763                      u705 06E8                      u635 07CF  
                    u555 0775                      u645 07D7                      u495 0613  
                    u735 0706                      u585 07A7                      u595 07AF  
                    u675 06BC             __CFG_IESO$ON 0000             __CFG_FOSC$XT 0000  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 0625  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 002E             ___ftmul@sign 002F             ___fttol@exp1 003D  
           ___fttol@lval 0039                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___ftmul 07FC          __end_of___fttol 0729            ___awtoft@sign 007D  
          ___ftpack@sign 0074                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 069B                   ??_main 003E  
          ___fttol@sign1 0038         __end_of___awtoft 05B9         __end_of___ftpack 0625  
         __CFG_PWRTE$OFF 0000                ??___ftmul 0026                ??___fttol 0034  
  ___ftmul@f3_as_product 002B  __end_of__initialization 07FC               ___awtoft@c 0078  
             ___ftmul@f1 0020               ___ftmul@f2 0023               ___fttol@f1 0030  
         __pcstackCOMMON 0070               __pmaintext 0625                ?___awtoft 0078  
              ?___ftpack 0070                  ___ftmul 0729                  ___fttol 069B  
             ??___awtoft 007B               ??___ftpack 0075                  __ptext1 069B  
                __ptext2 0729                  __ptext3 0598                  __ptext4 05B9  
   end_of_initialization 07FC                _PORTBbits 0006                _TRISBbits 0086  
             main@tiempo 0042              ___ftmul@exp 002A      start_initialization 07FC  
      __size_of___awtoft 0021        __size_of___ftpack 006C                ___latbits 0002  
          __pcstackBANK0 0020                 ?___ftmul 0020                 ?___fttol 0030  
       __size_of___ftmul 00D3         __size_of___fttol 008E                 ___awtoft 0598  
               ___ftpack 05B9        __CFG_BOR4V$BOR40V 0000            __size_of_main 0076  
